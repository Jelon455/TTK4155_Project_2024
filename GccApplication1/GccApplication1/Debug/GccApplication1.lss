
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000fe  00800100  00000cea  00000d7e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001fe  008001fe  00000e7c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e7c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ed8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000f14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a43  00000000  00000000  00000f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000800  00000000  00000000  000019bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003e6  00000000  00000000  000021bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000140  00000000  00000000  000025a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000049c  00000000  00000000  000026e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000031f  00000000  00000000  00002b84  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00002ea3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ea ee       	ldi	r30, 0xEA	; 234
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ae 3f       	cpi	r26, 0xFE	; 254
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	ae ef       	ldi	r26, 0xFE	; 254
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a8 30       	cpi	r26, 0x08	; 8
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <main>
  a6:	0c 94 73 06 	jmp	0xce6	; 0xce6 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <USART_Receive_Char>:
	SFIOR |= (1 << XMM2);
}

void write_to_latch(uint8_t data) {
	// Write data to the specified address in external memory space
	*(volatile uint8_t *)LATCH_ADDRESS = data;
  ae:	5f 9b       	sbis	0x0b, 7	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <USART_Receive_Char>
  b2:	8c b1       	in	r24, 0x0c	; 12
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	08 95       	ret

000000b8 <USART_Init>:
  b8:	90 bd       	out	0x20, r25	; 32
  ba:	89 b9       	out	0x09, r24	; 9
  bc:	8b b1       	in	r24, 0x0b	; 11
  be:	8d 7f       	andi	r24, 0xFD	; 253
  c0:	8b b9       	out	0x0b, r24	; 11
  c2:	88 e1       	ldi	r24, 0x18	; 24
  c4:	8a b9       	out	0x0a, r24	; 10
  c6:	86 e8       	ldi	r24, 0x86	; 134
  c8:	80 bd       	out	0x20, r24	; 32
  ca:	08 95       	ret

000000cc <USART_Transmit>:
  cc:	5d 9b       	sbis	0x0b, 5	; 11
  ce:	fe cf       	rjmp	.-4      	; 0xcc <USART_Transmit>
  d0:	8c b9       	out	0x0c, r24	; 12
  d2:	08 95       	ret

000000d4 <USART_Transmit_Char>:
  d4:	cf 93       	push	r28
  d6:	c8 2f       	mov	r28, r24
  d8:	8a 30       	cpi	r24, 0x0A	; 10
  da:	19 f4       	brne	.+6      	; 0xe2 <USART_Transmit_Char+0xe>
  dc:	8d e0       	ldi	r24, 0x0D	; 13
  de:	0e 94 66 00 	call	0xcc	; 0xcc <USART_Transmit>
  e2:	8c 2f       	mov	r24, r28
  e4:	0e 94 66 00 	call	0xcc	; 0xcc <USART_Transmit>
  e8:	80 e0       	ldi	r24, 0x00	; 0
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	cf 91       	pop	r28
  ee:	08 95       	ret

000000f0 <init_external_memory_interface>:
  f0:	85 b7       	in	r24, 0x35	; 53
  f2:	80 68       	ori	r24, 0x80	; 128
  f4:	85 bf       	out	0x35, r24	; 53
  f6:	80 b7       	in	r24, 0x30	; 48
  f8:	80 62       	ori	r24, 0x20	; 32
  fa:	80 bf       	out	0x30, r24	; 48
  fc:	08 95       	ret

000000fe <SRAM_test>:
}

void SRAM_test(void)
{
  fe:	ef 92       	push	r14
 100:	ff 92       	push	r15
 102:	0f 93       	push	r16
 104:	1f 93       	push	r17
 106:	cf 93       	push	r28
 108:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
 10a:	8a e0       	ldi	r24, 0x0A	; 10
 10c:	91 e0       	ldi	r25, 0x01	; 1
 10e:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
 112:	0e 94 63 01 	call	0x2c6	; 0x2c6 <rand>
 116:	7c 01       	movw	r14, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
 118:	0e 94 68 01 	call	0x2d0	; 0x2d0 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 11c:	c0 e0       	ldi	r28, 0x00	; 0
 11e:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
 120:	00 e0       	ldi	r16, 0x00	; 0
 122:	10 e0       	ldi	r17, 0x00	; 0
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 124:	20 c0       	rjmp	.+64     	; 0x166 <SRAM_test+0x68>
		uint8_t some_value = rand();
 126:	0e 94 63 01 	call	0x2c6	; 0x2c6 <rand>
		ext_ram[i] = some_value;
 12a:	fe 01       	movw	r30, r28
 12c:	f8 5e       	subi	r31, 0xE8	; 232
 12e:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
 130:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 132:	28 17       	cp	r18, r24
 134:	b9 f0       	breq	.+46     	; 0x164 <SRAM_test+0x66>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 136:	99 27       	eor	r25, r25
 138:	9f 93       	push	r25
 13a:	8f 93       	push	r24
 13c:	1f 92       	push	r1
 13e:	2f 93       	push	r18
 140:	df 93       	push	r29
 142:	cf 93       	push	r28
 144:	80 e2       	ldi	r24, 0x20	; 32
 146:	91 e0       	ldi	r25, 0x01	; 1
 148:	9f 93       	push	r25
 14a:	8f 93       	push	r24
 14c:	0e 94 be 01 	call	0x37c	; 0x37c <printf>
			write_errors++;
 150:	0f 5f       	subi	r16, 0xFF	; 255
 152:	1f 4f       	sbci	r17, 0xFF	; 255
 154:	8d b7       	in	r24, 0x3d	; 61
 156:	9e b7       	in	r25, 0x3e	; 62
 158:	08 96       	adiw	r24, 0x08	; 8
 15a:	0f b6       	in	r0, 0x3f	; 63
 15c:	f8 94       	cli
 15e:	9e bf       	out	0x3e, r25	; 62
 160:	0f be       	out	0x3f, r0	; 63
 162:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 164:	21 96       	adiw	r28, 0x01	; 1
 166:	c1 15       	cp	r28, r1
 168:	98 e0       	ldi	r25, 0x08	; 8
 16a:	d9 07       	cpc	r29, r25
 16c:	e0 f2       	brcs	.-72     	; 0x126 <SRAM_test+0x28>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
 16e:	c7 01       	movw	r24, r14
 170:	0e 94 68 01 	call	0x2d0	; 0x2d0 <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 174:	c0 e0       	ldi	r28, 0x00	; 0
 176:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 178:	e1 2c       	mov	r14, r1
 17a:	f1 2c       	mov	r15, r1
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 17c:	20 c0       	rjmp	.+64     	; 0x1be <SRAM_test+0xc0>
		uint8_t some_value = rand();
 17e:	0e 94 63 01 	call	0x2c6	; 0x2c6 <rand>
		uint8_t retreived_value = ext_ram[i];
 182:	fe 01       	movw	r30, r28
 184:	f8 5e       	subi	r31, 0xE8	; 232
 186:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 188:	28 17       	cp	r18, r24
 18a:	c1 f0       	breq	.+48     	; 0x1bc <SRAM_test+0xbe>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 18c:	99 27       	eor	r25, r25
 18e:	9f 93       	push	r25
 190:	8f 93       	push	r24
 192:	1f 92       	push	r1
 194:	2f 93       	push	r18
 196:	df 93       	push	r29
 198:	cf 93       	push	r28
 19a:	89 e5       	ldi	r24, 0x59	; 89
 19c:	91 e0       	ldi	r25, 0x01	; 1
 19e:	9f 93       	push	r25
 1a0:	8f 93       	push	r24
 1a2:	0e 94 be 01 	call	0x37c	; 0x37c <printf>
			retrieval_errors++;
 1a6:	8f ef       	ldi	r24, 0xFF	; 255
 1a8:	e8 1a       	sub	r14, r24
 1aa:	f8 0a       	sbc	r15, r24
 1ac:	8d b7       	in	r24, 0x3d	; 61
 1ae:	9e b7       	in	r25, 0x3e	; 62
 1b0:	08 96       	adiw	r24, 0x08	; 8
 1b2:	0f b6       	in	r0, 0x3f	; 63
 1b4:	f8 94       	cli
 1b6:	9e bf       	out	0x3e, r25	; 62
 1b8:	0f be       	out	0x3f, r0	; 63
 1ba:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1bc:	21 96       	adiw	r28, 0x01	; 1
 1be:	c1 15       	cp	r28, r1
 1c0:	98 e0       	ldi	r25, 0x08	; 8
 1c2:	d9 07       	cpc	r29, r25
 1c4:	e0 f2       	brcs	.-72     	; 0x17e <SRAM_test+0x80>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 1c6:	ff 92       	push	r15
 1c8:	ef 92       	push	r14
 1ca:	1f 93       	push	r17
 1cc:	0f 93       	push	r16
 1ce:	86 e9       	ldi	r24, 0x96	; 150
 1d0:	91 e0       	ldi	r25, 0x01	; 1
 1d2:	9f 93       	push	r25
 1d4:	8f 93       	push	r24
 1d6:	0e 94 be 01 	call	0x37c	; 0x37c <printf>
}
 1da:	0f 90       	pop	r0
 1dc:	0f 90       	pop	r0
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	df 91       	pop	r29
 1e8:	cf 91       	pop	r28
 1ea:	1f 91       	pop	r17
 1ec:	0f 91       	pop	r16
 1ee:	ff 90       	pop	r15
 1f0:	ef 90       	pop	r14
 1f2:	08 95       	ret

000001f4 <main>:
    }
}*/

int main(void) {
	// Initialize the external memory interface
	init_external_memory_interface();
 1f4:	0e 94 78 00 	call	0xf0	; 0xf0 <init_external_memory_interface>

		write_to_latch(0x00);  // Turn all LEDs off
		_delay_ms(500);  // Delay for 500 milliseconds
		
}*/
	USART_Init(UBBR);
 1f8:	8f e1       	ldi	r24, 0x1F	; 31
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	0e 94 5c 00 	call	0xb8	; 0xb8 <USART_Init>
	
	FILE *uart_stream = fdevopen(USART_Transmit_Char, USART_Receive_Char);
 200:	67 e5       	ldi	r22, 0x57	; 87
 202:	70 e0       	ldi	r23, 0x00	; 0
 204:	8a e6       	ldi	r24, 0x6A	; 106
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 73 01 	call	0x2e6	; 0x2e6 <fdevopen>
	
	stdout = uart_stream;
 20c:	ee ef       	ldi	r30, 0xFE	; 254
 20e:	f1 e0       	ldi	r31, 0x01	; 1
 210:	93 83       	std	Z+3, r25	; 0x03
 212:	82 83       	std	Z+2, r24	; 0x02
	stdin = uart_stream;
 214:	91 83       	std	Z+1, r25	; 0x01
 216:	80 83       	st	Z, r24
	
	printf("I am printf!\n\r");
 218:	8f ee       	ldi	r24, 0xEF	; 239
 21a:	91 e0       	ldi	r25, 0x01	; 1
 21c:	9f 93       	push	r25
 21e:	8f 93       	push	r24
 220:	0e 94 be 01 	call	0x37c	; 0x37c <printf>
	
	SRAM_test();
 224:	0e 94 7f 00 	call	0xfe	; 0xfe <SRAM_test>
 228:	0f 90       	pop	r0
 22a:	0f 90       	pop	r0
 22c:	ff cf       	rjmp	.-2      	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>

0000022e <do_rand>:
 22e:	8f 92       	push	r8
 230:	9f 92       	push	r9
 232:	af 92       	push	r10
 234:	bf 92       	push	r11
 236:	cf 92       	push	r12
 238:	df 92       	push	r13
 23a:	ef 92       	push	r14
 23c:	ff 92       	push	r15
 23e:	cf 93       	push	r28
 240:	df 93       	push	r29
 242:	ec 01       	movw	r28, r24
 244:	68 81       	ld	r22, Y
 246:	79 81       	ldd	r23, Y+1	; 0x01
 248:	8a 81       	ldd	r24, Y+2	; 0x02
 24a:	9b 81       	ldd	r25, Y+3	; 0x03
 24c:	61 15       	cp	r22, r1
 24e:	71 05       	cpc	r23, r1
 250:	81 05       	cpc	r24, r1
 252:	91 05       	cpc	r25, r1
 254:	21 f4       	brne	.+8      	; 0x25e <do_rand+0x30>
 256:	64 e2       	ldi	r22, 0x24	; 36
 258:	79 ed       	ldi	r23, 0xD9	; 217
 25a:	8b e5       	ldi	r24, 0x5B	; 91
 25c:	97 e0       	ldi	r25, 0x07	; 7
 25e:	2d e1       	ldi	r18, 0x1D	; 29
 260:	33 ef       	ldi	r19, 0xF3	; 243
 262:	41 e0       	ldi	r20, 0x01	; 1
 264:	50 e0       	ldi	r21, 0x00	; 0
 266:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <__divmodsi4>
 26a:	49 01       	movw	r8, r18
 26c:	5a 01       	movw	r10, r20
 26e:	9b 01       	movw	r18, r22
 270:	ac 01       	movw	r20, r24
 272:	a7 ea       	ldi	r26, 0xA7	; 167
 274:	b1 e4       	ldi	r27, 0x41	; 65
 276:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <__muluhisi3>
 27a:	6b 01       	movw	r12, r22
 27c:	7c 01       	movw	r14, r24
 27e:	ac ee       	ldi	r26, 0xEC	; 236
 280:	b4 ef       	ldi	r27, 0xF4	; 244
 282:	a5 01       	movw	r20, r10
 284:	94 01       	movw	r18, r8
 286:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulohisi3>
 28a:	dc 01       	movw	r26, r24
 28c:	cb 01       	movw	r24, r22
 28e:	8c 0d       	add	r24, r12
 290:	9d 1d       	adc	r25, r13
 292:	ae 1d       	adc	r26, r14
 294:	bf 1d       	adc	r27, r15
 296:	b7 ff       	sbrs	r27, 7
 298:	03 c0       	rjmp	.+6      	; 0x2a0 <do_rand+0x72>
 29a:	01 97       	sbiw	r24, 0x01	; 1
 29c:	a1 09       	sbc	r26, r1
 29e:	b0 48       	sbci	r27, 0x80	; 128
 2a0:	88 83       	st	Y, r24
 2a2:	99 83       	std	Y+1, r25	; 0x01
 2a4:	aa 83       	std	Y+2, r26	; 0x02
 2a6:	bb 83       	std	Y+3, r27	; 0x03
 2a8:	9f 77       	andi	r25, 0x7F	; 127
 2aa:	df 91       	pop	r29
 2ac:	cf 91       	pop	r28
 2ae:	ff 90       	pop	r15
 2b0:	ef 90       	pop	r14
 2b2:	df 90       	pop	r13
 2b4:	cf 90       	pop	r12
 2b6:	bf 90       	pop	r11
 2b8:	af 90       	pop	r10
 2ba:	9f 90       	pop	r9
 2bc:	8f 90       	pop	r8
 2be:	08 95       	ret

000002c0 <rand_r>:
 2c0:	0e 94 17 01 	call	0x22e	; 0x22e <do_rand>
 2c4:	08 95       	ret

000002c6 <rand>:
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	91 e0       	ldi	r25, 0x01	; 1
 2ca:	0e 94 17 01 	call	0x22e	; 0x22e <do_rand>
 2ce:	08 95       	ret

000002d0 <srand>:
 2d0:	a0 e0       	ldi	r26, 0x00	; 0
 2d2:	b0 e0       	ldi	r27, 0x00	; 0
 2d4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 2d8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2dc:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 2e0:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 2e4:	08 95       	ret

000002e6 <fdevopen>:
 2e6:	0f 93       	push	r16
 2e8:	1f 93       	push	r17
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	00 97       	sbiw	r24, 0x00	; 0
 2f0:	31 f4       	brne	.+12     	; 0x2fe <fdevopen+0x18>
 2f2:	61 15       	cp	r22, r1
 2f4:	71 05       	cpc	r23, r1
 2f6:	19 f4       	brne	.+6      	; 0x2fe <fdevopen+0x18>
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	3a c0       	rjmp	.+116    	; 0x372 <fdevopen+0x8c>
 2fe:	8b 01       	movw	r16, r22
 300:	ec 01       	movw	r28, r24
 302:	6e e0       	ldi	r22, 0x0E	; 14
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	0e 94 e5 03 	call	0x7ca	; 0x7ca <calloc>
 30e:	fc 01       	movw	r30, r24
 310:	89 2b       	or	r24, r25
 312:	91 f3       	breq	.-28     	; 0x2f8 <fdevopen+0x12>
 314:	80 e8       	ldi	r24, 0x80	; 128
 316:	83 83       	std	Z+3, r24	; 0x03
 318:	01 15       	cp	r16, r1
 31a:	11 05       	cpc	r17, r1
 31c:	71 f0       	breq	.+28     	; 0x33a <fdevopen+0x54>
 31e:	13 87       	std	Z+11, r17	; 0x0b
 320:	02 87       	std	Z+10, r16	; 0x0a
 322:	81 e8       	ldi	r24, 0x81	; 129
 324:	83 83       	std	Z+3, r24	; 0x03
 326:	80 91 fe 01 	lds	r24, 0x01FE	; 0x8001fe <__data_end>
 32a:	90 91 ff 01 	lds	r25, 0x01FF	; 0x8001ff <__data_end+0x1>
 32e:	89 2b       	or	r24, r25
 330:	21 f4       	brne	.+8      	; 0x33a <fdevopen+0x54>
 332:	f0 93 ff 01 	sts	0x01FF, r31	; 0x8001ff <__data_end+0x1>
 336:	e0 93 fe 01 	sts	0x01FE, r30	; 0x8001fe <__data_end>
 33a:	20 97       	sbiw	r28, 0x00	; 0
 33c:	c9 f0       	breq	.+50     	; 0x370 <fdevopen+0x8a>
 33e:	d1 87       	std	Z+9, r29	; 0x09
 340:	c0 87       	std	Z+8, r28	; 0x08
 342:	83 81       	ldd	r24, Z+3	; 0x03
 344:	82 60       	ori	r24, 0x02	; 2
 346:	83 83       	std	Z+3, r24	; 0x03
 348:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_end+0x2>
 34c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__data_end+0x3>
 350:	89 2b       	or	r24, r25
 352:	71 f4       	brne	.+28     	; 0x370 <fdevopen+0x8a>
 354:	f0 93 01 02 	sts	0x0201, r31	; 0x800201 <__data_end+0x3>
 358:	e0 93 00 02 	sts	0x0200, r30	; 0x800200 <__data_end+0x2>
 35c:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_end+0x4>
 360:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__data_end+0x5>
 364:	89 2b       	or	r24, r25
 366:	21 f4       	brne	.+8      	; 0x370 <fdevopen+0x8a>
 368:	f0 93 03 02 	sts	0x0203, r31	; 0x800203 <__data_end+0x5>
 36c:	e0 93 02 02 	sts	0x0202, r30	; 0x800202 <__data_end+0x4>
 370:	cf 01       	movw	r24, r30
 372:	df 91       	pop	r29
 374:	cf 91       	pop	r28
 376:	1f 91       	pop	r17
 378:	0f 91       	pop	r16
 37a:	08 95       	ret

0000037c <printf>:
 37c:	a0 e0       	ldi	r26, 0x00	; 0
 37e:	b0 e0       	ldi	r27, 0x00	; 0
 380:	e4 ec       	ldi	r30, 0xC4	; 196
 382:	f1 e0       	ldi	r31, 0x01	; 1
 384:	0c 94 1b 06 	jmp	0xc36	; 0xc36 <__prologue_saves__+0x20>
 388:	ae 01       	movw	r20, r28
 38a:	4b 5f       	subi	r20, 0xFB	; 251
 38c:	5f 4f       	sbci	r21, 0xFF	; 255
 38e:	fa 01       	movw	r30, r20
 390:	61 91       	ld	r22, Z+
 392:	71 91       	ld	r23, Z+
 394:	af 01       	movw	r20, r30
 396:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_end+0x2>
 39a:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__data_end+0x3>
 39e:	0e 94 04 02 	call	0x408	; 0x408 <vfprintf>
 3a2:	e2 e0       	ldi	r30, 0x02	; 2
 3a4:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__epilogue_restores__+0x20>

000003a8 <puts>:
 3a8:	0f 93       	push	r16
 3aa:	1f 93       	push	r17
 3ac:	cf 93       	push	r28
 3ae:	df 93       	push	r29
 3b0:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <__data_end+0x2>
 3b4:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <__data_end+0x3>
 3b8:	23 81       	ldd	r18, Z+3	; 0x03
 3ba:	21 ff       	sbrs	r18, 1
 3bc:	1b c0       	rjmp	.+54     	; 0x3f4 <puts+0x4c>
 3be:	8c 01       	movw	r16, r24
 3c0:	d0 e0       	ldi	r29, 0x00	; 0
 3c2:	c0 e0       	ldi	r28, 0x00	; 0
 3c4:	f8 01       	movw	r30, r16
 3c6:	81 91       	ld	r24, Z+
 3c8:	8f 01       	movw	r16, r30
 3ca:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__data_end+0x2>
 3ce:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__data_end+0x3>
 3d2:	db 01       	movw	r26, r22
 3d4:	18 96       	adiw	r26, 0x08	; 8
 3d6:	ed 91       	ld	r30, X+
 3d8:	fc 91       	ld	r31, X
 3da:	19 97       	sbiw	r26, 0x09	; 9
 3dc:	88 23       	and	r24, r24
 3de:	31 f0       	breq	.+12     	; 0x3ec <puts+0x44>
 3e0:	09 95       	icall
 3e2:	89 2b       	or	r24, r25
 3e4:	79 f3       	breq	.-34     	; 0x3c4 <puts+0x1c>
 3e6:	df ef       	ldi	r29, 0xFF	; 255
 3e8:	cf ef       	ldi	r28, 0xFF	; 255
 3ea:	ec cf       	rjmp	.-40     	; 0x3c4 <puts+0x1c>
 3ec:	8a e0       	ldi	r24, 0x0A	; 10
 3ee:	09 95       	icall
 3f0:	89 2b       	or	r24, r25
 3f2:	19 f0       	breq	.+6      	; 0x3fa <puts+0x52>
 3f4:	8f ef       	ldi	r24, 0xFF	; 255
 3f6:	9f ef       	ldi	r25, 0xFF	; 255
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <puts+0x56>
 3fa:	8d 2f       	mov	r24, r29
 3fc:	9c 2f       	mov	r25, r28
 3fe:	df 91       	pop	r29
 400:	cf 91       	pop	r28
 402:	1f 91       	pop	r17
 404:	0f 91       	pop	r16
 406:	08 95       	ret

00000408 <vfprintf>:
 408:	ab e0       	ldi	r26, 0x0B	; 11
 40a:	b0 e0       	ldi	r27, 0x00	; 0
 40c:	ea e0       	ldi	r30, 0x0A	; 10
 40e:	f2 e0       	ldi	r31, 0x02	; 2
 410:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__prologue_saves__>
 414:	6c 01       	movw	r12, r24
 416:	7b 01       	movw	r14, r22
 418:	8a 01       	movw	r16, r20
 41a:	fc 01       	movw	r30, r24
 41c:	17 82       	std	Z+7, r1	; 0x07
 41e:	16 82       	std	Z+6, r1	; 0x06
 420:	83 81       	ldd	r24, Z+3	; 0x03
 422:	81 ff       	sbrs	r24, 1
 424:	cc c1       	rjmp	.+920    	; 0x7be <__stack+0x2bf>
 426:	ce 01       	movw	r24, r28
 428:	01 96       	adiw	r24, 0x01	; 1
 42a:	3c 01       	movw	r6, r24
 42c:	f6 01       	movw	r30, r12
 42e:	93 81       	ldd	r25, Z+3	; 0x03
 430:	f7 01       	movw	r30, r14
 432:	93 fd       	sbrc	r25, 3
 434:	85 91       	lpm	r24, Z+
 436:	93 ff       	sbrs	r25, 3
 438:	81 91       	ld	r24, Z+
 43a:	7f 01       	movw	r14, r30
 43c:	88 23       	and	r24, r24
 43e:	09 f4       	brne	.+2      	; 0x442 <vfprintf+0x3a>
 440:	ba c1       	rjmp	.+884    	; 0x7b6 <__stack+0x2b7>
 442:	85 32       	cpi	r24, 0x25	; 37
 444:	39 f4       	brne	.+14     	; 0x454 <vfprintf+0x4c>
 446:	93 fd       	sbrc	r25, 3
 448:	85 91       	lpm	r24, Z+
 44a:	93 ff       	sbrs	r25, 3
 44c:	81 91       	ld	r24, Z+
 44e:	7f 01       	movw	r14, r30
 450:	85 32       	cpi	r24, 0x25	; 37
 452:	29 f4       	brne	.+10     	; 0x45e <vfprintf+0x56>
 454:	b6 01       	movw	r22, r12
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	0e 94 3f 05 	call	0xa7e	; 0xa7e <fputc>
 45c:	e7 cf       	rjmp	.-50     	; 0x42c <vfprintf+0x24>
 45e:	91 2c       	mov	r9, r1
 460:	21 2c       	mov	r2, r1
 462:	31 2c       	mov	r3, r1
 464:	ff e1       	ldi	r31, 0x1F	; 31
 466:	f3 15       	cp	r31, r3
 468:	d8 f0       	brcs	.+54     	; 0x4a0 <vfprintf+0x98>
 46a:	8b 32       	cpi	r24, 0x2B	; 43
 46c:	79 f0       	breq	.+30     	; 0x48c <vfprintf+0x84>
 46e:	38 f4       	brcc	.+14     	; 0x47e <vfprintf+0x76>
 470:	80 32       	cpi	r24, 0x20	; 32
 472:	79 f0       	breq	.+30     	; 0x492 <vfprintf+0x8a>
 474:	83 32       	cpi	r24, 0x23	; 35
 476:	a1 f4       	brne	.+40     	; 0x4a0 <vfprintf+0x98>
 478:	23 2d       	mov	r18, r3
 47a:	20 61       	ori	r18, 0x10	; 16
 47c:	1d c0       	rjmp	.+58     	; 0x4b8 <vfprintf+0xb0>
 47e:	8d 32       	cpi	r24, 0x2D	; 45
 480:	61 f0       	breq	.+24     	; 0x49a <vfprintf+0x92>
 482:	80 33       	cpi	r24, 0x30	; 48
 484:	69 f4       	brne	.+26     	; 0x4a0 <vfprintf+0x98>
 486:	23 2d       	mov	r18, r3
 488:	21 60       	ori	r18, 0x01	; 1
 48a:	16 c0       	rjmp	.+44     	; 0x4b8 <vfprintf+0xb0>
 48c:	83 2d       	mov	r24, r3
 48e:	82 60       	ori	r24, 0x02	; 2
 490:	38 2e       	mov	r3, r24
 492:	e3 2d       	mov	r30, r3
 494:	e4 60       	ori	r30, 0x04	; 4
 496:	3e 2e       	mov	r3, r30
 498:	2a c0       	rjmp	.+84     	; 0x4ee <vfprintf+0xe6>
 49a:	f3 2d       	mov	r31, r3
 49c:	f8 60       	ori	r31, 0x08	; 8
 49e:	1d c0       	rjmp	.+58     	; 0x4da <vfprintf+0xd2>
 4a0:	37 fc       	sbrc	r3, 7
 4a2:	2d c0       	rjmp	.+90     	; 0x4fe <vfprintf+0xf6>
 4a4:	20 ed       	ldi	r18, 0xD0	; 208
 4a6:	28 0f       	add	r18, r24
 4a8:	2a 30       	cpi	r18, 0x0A	; 10
 4aa:	40 f0       	brcs	.+16     	; 0x4bc <vfprintf+0xb4>
 4ac:	8e 32       	cpi	r24, 0x2E	; 46
 4ae:	b9 f4       	brne	.+46     	; 0x4de <vfprintf+0xd6>
 4b0:	36 fc       	sbrc	r3, 6
 4b2:	81 c1       	rjmp	.+770    	; 0x7b6 <__stack+0x2b7>
 4b4:	23 2d       	mov	r18, r3
 4b6:	20 64       	ori	r18, 0x40	; 64
 4b8:	32 2e       	mov	r3, r18
 4ba:	19 c0       	rjmp	.+50     	; 0x4ee <vfprintf+0xe6>
 4bc:	36 fe       	sbrs	r3, 6
 4be:	06 c0       	rjmp	.+12     	; 0x4cc <vfprintf+0xc4>
 4c0:	8a e0       	ldi	r24, 0x0A	; 10
 4c2:	98 9e       	mul	r9, r24
 4c4:	20 0d       	add	r18, r0
 4c6:	11 24       	eor	r1, r1
 4c8:	92 2e       	mov	r9, r18
 4ca:	11 c0       	rjmp	.+34     	; 0x4ee <vfprintf+0xe6>
 4cc:	ea e0       	ldi	r30, 0x0A	; 10
 4ce:	2e 9e       	mul	r2, r30
 4d0:	20 0d       	add	r18, r0
 4d2:	11 24       	eor	r1, r1
 4d4:	22 2e       	mov	r2, r18
 4d6:	f3 2d       	mov	r31, r3
 4d8:	f0 62       	ori	r31, 0x20	; 32
 4da:	3f 2e       	mov	r3, r31
 4dc:	08 c0       	rjmp	.+16     	; 0x4ee <vfprintf+0xe6>
 4de:	8c 36       	cpi	r24, 0x6C	; 108
 4e0:	21 f4       	brne	.+8      	; 0x4ea <vfprintf+0xe2>
 4e2:	83 2d       	mov	r24, r3
 4e4:	80 68       	ori	r24, 0x80	; 128
 4e6:	38 2e       	mov	r3, r24
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <vfprintf+0xe6>
 4ea:	88 36       	cpi	r24, 0x68	; 104
 4ec:	41 f4       	brne	.+16     	; 0x4fe <vfprintf+0xf6>
 4ee:	f7 01       	movw	r30, r14
 4f0:	93 fd       	sbrc	r25, 3
 4f2:	85 91       	lpm	r24, Z+
 4f4:	93 ff       	sbrs	r25, 3
 4f6:	81 91       	ld	r24, Z+
 4f8:	7f 01       	movw	r14, r30
 4fa:	81 11       	cpse	r24, r1
 4fc:	b3 cf       	rjmp	.-154    	; 0x464 <vfprintf+0x5c>
 4fe:	98 2f       	mov	r25, r24
 500:	9f 7d       	andi	r25, 0xDF	; 223
 502:	95 54       	subi	r25, 0x45	; 69
 504:	93 30       	cpi	r25, 0x03	; 3
 506:	28 f4       	brcc	.+10     	; 0x512 <__stack+0x13>
 508:	0c 5f       	subi	r16, 0xFC	; 252
 50a:	1f 4f       	sbci	r17, 0xFF	; 255
 50c:	9f e3       	ldi	r25, 0x3F	; 63
 50e:	99 83       	std	Y+1, r25	; 0x01
 510:	0d c0       	rjmp	.+26     	; 0x52c <__stack+0x2d>
 512:	83 36       	cpi	r24, 0x63	; 99
 514:	31 f0       	breq	.+12     	; 0x522 <__stack+0x23>
 516:	83 37       	cpi	r24, 0x73	; 115
 518:	71 f0       	breq	.+28     	; 0x536 <__stack+0x37>
 51a:	83 35       	cpi	r24, 0x53	; 83
 51c:	09 f0       	breq	.+2      	; 0x520 <__stack+0x21>
 51e:	59 c0       	rjmp	.+178    	; 0x5d2 <__stack+0xd3>
 520:	21 c0       	rjmp	.+66     	; 0x564 <__stack+0x65>
 522:	f8 01       	movw	r30, r16
 524:	80 81       	ld	r24, Z
 526:	89 83       	std	Y+1, r24	; 0x01
 528:	0e 5f       	subi	r16, 0xFE	; 254
 52a:	1f 4f       	sbci	r17, 0xFF	; 255
 52c:	88 24       	eor	r8, r8
 52e:	83 94       	inc	r8
 530:	91 2c       	mov	r9, r1
 532:	53 01       	movw	r10, r6
 534:	13 c0       	rjmp	.+38     	; 0x55c <__stack+0x5d>
 536:	28 01       	movw	r4, r16
 538:	f2 e0       	ldi	r31, 0x02	; 2
 53a:	4f 0e       	add	r4, r31
 53c:	51 1c       	adc	r5, r1
 53e:	f8 01       	movw	r30, r16
 540:	a0 80       	ld	r10, Z
 542:	b1 80       	ldd	r11, Z+1	; 0x01
 544:	36 fe       	sbrs	r3, 6
 546:	03 c0       	rjmp	.+6      	; 0x54e <__stack+0x4f>
 548:	69 2d       	mov	r22, r9
 54a:	70 e0       	ldi	r23, 0x00	; 0
 54c:	02 c0       	rjmp	.+4      	; 0x552 <__stack+0x53>
 54e:	6f ef       	ldi	r22, 0xFF	; 255
 550:	7f ef       	ldi	r23, 0xFF	; 255
 552:	c5 01       	movw	r24, r10
 554:	0e 94 34 05 	call	0xa68	; 0xa68 <strnlen>
 558:	4c 01       	movw	r8, r24
 55a:	82 01       	movw	r16, r4
 55c:	f3 2d       	mov	r31, r3
 55e:	ff 77       	andi	r31, 0x7F	; 127
 560:	3f 2e       	mov	r3, r31
 562:	16 c0       	rjmp	.+44     	; 0x590 <__stack+0x91>
 564:	28 01       	movw	r4, r16
 566:	22 e0       	ldi	r18, 0x02	; 2
 568:	42 0e       	add	r4, r18
 56a:	51 1c       	adc	r5, r1
 56c:	f8 01       	movw	r30, r16
 56e:	a0 80       	ld	r10, Z
 570:	b1 80       	ldd	r11, Z+1	; 0x01
 572:	36 fe       	sbrs	r3, 6
 574:	03 c0       	rjmp	.+6      	; 0x57c <__stack+0x7d>
 576:	69 2d       	mov	r22, r9
 578:	70 e0       	ldi	r23, 0x00	; 0
 57a:	02 c0       	rjmp	.+4      	; 0x580 <__stack+0x81>
 57c:	6f ef       	ldi	r22, 0xFF	; 255
 57e:	7f ef       	ldi	r23, 0xFF	; 255
 580:	c5 01       	movw	r24, r10
 582:	0e 94 22 05 	call	0xa44	; 0xa44 <strnlen_P>
 586:	4c 01       	movw	r8, r24
 588:	f3 2d       	mov	r31, r3
 58a:	f0 68       	ori	r31, 0x80	; 128
 58c:	3f 2e       	mov	r3, r31
 58e:	82 01       	movw	r16, r4
 590:	33 fc       	sbrc	r3, 3
 592:	1b c0       	rjmp	.+54     	; 0x5ca <__stack+0xcb>
 594:	82 2d       	mov	r24, r2
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	88 16       	cp	r8, r24
 59a:	99 06       	cpc	r9, r25
 59c:	b0 f4       	brcc	.+44     	; 0x5ca <__stack+0xcb>
 59e:	b6 01       	movw	r22, r12
 5a0:	80 e2       	ldi	r24, 0x20	; 32
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	0e 94 3f 05 	call	0xa7e	; 0xa7e <fputc>
 5a8:	2a 94       	dec	r2
 5aa:	f4 cf       	rjmp	.-24     	; 0x594 <__stack+0x95>
 5ac:	f5 01       	movw	r30, r10
 5ae:	37 fc       	sbrc	r3, 7
 5b0:	85 91       	lpm	r24, Z+
 5b2:	37 fe       	sbrs	r3, 7
 5b4:	81 91       	ld	r24, Z+
 5b6:	5f 01       	movw	r10, r30
 5b8:	b6 01       	movw	r22, r12
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	0e 94 3f 05 	call	0xa7e	; 0xa7e <fputc>
 5c0:	21 10       	cpse	r2, r1
 5c2:	2a 94       	dec	r2
 5c4:	21 e0       	ldi	r18, 0x01	; 1
 5c6:	82 1a       	sub	r8, r18
 5c8:	91 08       	sbc	r9, r1
 5ca:	81 14       	cp	r8, r1
 5cc:	91 04       	cpc	r9, r1
 5ce:	71 f7       	brne	.-36     	; 0x5ac <__stack+0xad>
 5d0:	e8 c0       	rjmp	.+464    	; 0x7a2 <__stack+0x2a3>
 5d2:	84 36       	cpi	r24, 0x64	; 100
 5d4:	11 f0       	breq	.+4      	; 0x5da <__stack+0xdb>
 5d6:	89 36       	cpi	r24, 0x69	; 105
 5d8:	41 f5       	brne	.+80     	; 0x62a <__stack+0x12b>
 5da:	f8 01       	movw	r30, r16
 5dc:	37 fe       	sbrs	r3, 7
 5de:	07 c0       	rjmp	.+14     	; 0x5ee <__stack+0xef>
 5e0:	60 81       	ld	r22, Z
 5e2:	71 81       	ldd	r23, Z+1	; 0x01
 5e4:	82 81       	ldd	r24, Z+2	; 0x02
 5e6:	93 81       	ldd	r25, Z+3	; 0x03
 5e8:	0c 5f       	subi	r16, 0xFC	; 252
 5ea:	1f 4f       	sbci	r17, 0xFF	; 255
 5ec:	08 c0       	rjmp	.+16     	; 0x5fe <__stack+0xff>
 5ee:	60 81       	ld	r22, Z
 5f0:	71 81       	ldd	r23, Z+1	; 0x01
 5f2:	07 2e       	mov	r0, r23
 5f4:	00 0c       	add	r0, r0
 5f6:	88 0b       	sbc	r24, r24
 5f8:	99 0b       	sbc	r25, r25
 5fa:	0e 5f       	subi	r16, 0xFE	; 254
 5fc:	1f 4f       	sbci	r17, 0xFF	; 255
 5fe:	f3 2d       	mov	r31, r3
 600:	ff 76       	andi	r31, 0x6F	; 111
 602:	3f 2e       	mov	r3, r31
 604:	97 ff       	sbrs	r25, 7
 606:	09 c0       	rjmp	.+18     	; 0x61a <__stack+0x11b>
 608:	90 95       	com	r25
 60a:	80 95       	com	r24
 60c:	70 95       	com	r23
 60e:	61 95       	neg	r22
 610:	7f 4f       	sbci	r23, 0xFF	; 255
 612:	8f 4f       	sbci	r24, 0xFF	; 255
 614:	9f 4f       	sbci	r25, 0xFF	; 255
 616:	f0 68       	ori	r31, 0x80	; 128
 618:	3f 2e       	mov	r3, r31
 61a:	2a e0       	ldi	r18, 0x0A	; 10
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	a3 01       	movw	r20, r6
 620:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <__ultoa_invert>
 624:	88 2e       	mov	r8, r24
 626:	86 18       	sub	r8, r6
 628:	45 c0       	rjmp	.+138    	; 0x6b4 <__stack+0x1b5>
 62a:	85 37       	cpi	r24, 0x75	; 117
 62c:	31 f4       	brne	.+12     	; 0x63a <__stack+0x13b>
 62e:	23 2d       	mov	r18, r3
 630:	2f 7e       	andi	r18, 0xEF	; 239
 632:	b2 2e       	mov	r11, r18
 634:	2a e0       	ldi	r18, 0x0A	; 10
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	25 c0       	rjmp	.+74     	; 0x684 <__stack+0x185>
 63a:	93 2d       	mov	r25, r3
 63c:	99 7f       	andi	r25, 0xF9	; 249
 63e:	b9 2e       	mov	r11, r25
 640:	8f 36       	cpi	r24, 0x6F	; 111
 642:	c1 f0       	breq	.+48     	; 0x674 <__stack+0x175>
 644:	18 f4       	brcc	.+6      	; 0x64c <__stack+0x14d>
 646:	88 35       	cpi	r24, 0x58	; 88
 648:	79 f0       	breq	.+30     	; 0x668 <__stack+0x169>
 64a:	b5 c0       	rjmp	.+362    	; 0x7b6 <__stack+0x2b7>
 64c:	80 37       	cpi	r24, 0x70	; 112
 64e:	19 f0       	breq	.+6      	; 0x656 <__stack+0x157>
 650:	88 37       	cpi	r24, 0x78	; 120
 652:	21 f0       	breq	.+8      	; 0x65c <__stack+0x15d>
 654:	b0 c0       	rjmp	.+352    	; 0x7b6 <__stack+0x2b7>
 656:	e9 2f       	mov	r30, r25
 658:	e0 61       	ori	r30, 0x10	; 16
 65a:	be 2e       	mov	r11, r30
 65c:	b4 fe       	sbrs	r11, 4
 65e:	0d c0       	rjmp	.+26     	; 0x67a <__stack+0x17b>
 660:	fb 2d       	mov	r31, r11
 662:	f4 60       	ori	r31, 0x04	; 4
 664:	bf 2e       	mov	r11, r31
 666:	09 c0       	rjmp	.+18     	; 0x67a <__stack+0x17b>
 668:	34 fe       	sbrs	r3, 4
 66a:	0a c0       	rjmp	.+20     	; 0x680 <__stack+0x181>
 66c:	29 2f       	mov	r18, r25
 66e:	26 60       	ori	r18, 0x06	; 6
 670:	b2 2e       	mov	r11, r18
 672:	06 c0       	rjmp	.+12     	; 0x680 <__stack+0x181>
 674:	28 e0       	ldi	r18, 0x08	; 8
 676:	30 e0       	ldi	r19, 0x00	; 0
 678:	05 c0       	rjmp	.+10     	; 0x684 <__stack+0x185>
 67a:	20 e1       	ldi	r18, 0x10	; 16
 67c:	30 e0       	ldi	r19, 0x00	; 0
 67e:	02 c0       	rjmp	.+4      	; 0x684 <__stack+0x185>
 680:	20 e1       	ldi	r18, 0x10	; 16
 682:	32 e0       	ldi	r19, 0x02	; 2
 684:	f8 01       	movw	r30, r16
 686:	b7 fe       	sbrs	r11, 7
 688:	07 c0       	rjmp	.+14     	; 0x698 <__stack+0x199>
 68a:	60 81       	ld	r22, Z
 68c:	71 81       	ldd	r23, Z+1	; 0x01
 68e:	82 81       	ldd	r24, Z+2	; 0x02
 690:	93 81       	ldd	r25, Z+3	; 0x03
 692:	0c 5f       	subi	r16, 0xFC	; 252
 694:	1f 4f       	sbci	r17, 0xFF	; 255
 696:	06 c0       	rjmp	.+12     	; 0x6a4 <__stack+0x1a5>
 698:	60 81       	ld	r22, Z
 69a:	71 81       	ldd	r23, Z+1	; 0x01
 69c:	80 e0       	ldi	r24, 0x00	; 0
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	0e 5f       	subi	r16, 0xFE	; 254
 6a2:	1f 4f       	sbci	r17, 0xFF	; 255
 6a4:	a3 01       	movw	r20, r6
 6a6:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <__ultoa_invert>
 6aa:	88 2e       	mov	r8, r24
 6ac:	86 18       	sub	r8, r6
 6ae:	fb 2d       	mov	r31, r11
 6b0:	ff 77       	andi	r31, 0x7F	; 127
 6b2:	3f 2e       	mov	r3, r31
 6b4:	36 fe       	sbrs	r3, 6
 6b6:	0d c0       	rjmp	.+26     	; 0x6d2 <__stack+0x1d3>
 6b8:	23 2d       	mov	r18, r3
 6ba:	2e 7f       	andi	r18, 0xFE	; 254
 6bc:	a2 2e       	mov	r10, r18
 6be:	89 14       	cp	r8, r9
 6c0:	58 f4       	brcc	.+22     	; 0x6d8 <__stack+0x1d9>
 6c2:	34 fe       	sbrs	r3, 4
 6c4:	0b c0       	rjmp	.+22     	; 0x6dc <__stack+0x1dd>
 6c6:	32 fc       	sbrc	r3, 2
 6c8:	09 c0       	rjmp	.+18     	; 0x6dc <__stack+0x1dd>
 6ca:	83 2d       	mov	r24, r3
 6cc:	8e 7e       	andi	r24, 0xEE	; 238
 6ce:	a8 2e       	mov	r10, r24
 6d0:	05 c0       	rjmp	.+10     	; 0x6dc <__stack+0x1dd>
 6d2:	b8 2c       	mov	r11, r8
 6d4:	a3 2c       	mov	r10, r3
 6d6:	03 c0       	rjmp	.+6      	; 0x6de <__stack+0x1df>
 6d8:	b8 2c       	mov	r11, r8
 6da:	01 c0       	rjmp	.+2      	; 0x6de <__stack+0x1df>
 6dc:	b9 2c       	mov	r11, r9
 6de:	a4 fe       	sbrs	r10, 4
 6e0:	0f c0       	rjmp	.+30     	; 0x700 <__stack+0x201>
 6e2:	fe 01       	movw	r30, r28
 6e4:	e8 0d       	add	r30, r8
 6e6:	f1 1d       	adc	r31, r1
 6e8:	80 81       	ld	r24, Z
 6ea:	80 33       	cpi	r24, 0x30	; 48
 6ec:	21 f4       	brne	.+8      	; 0x6f6 <__stack+0x1f7>
 6ee:	9a 2d       	mov	r25, r10
 6f0:	99 7e       	andi	r25, 0xE9	; 233
 6f2:	a9 2e       	mov	r10, r25
 6f4:	09 c0       	rjmp	.+18     	; 0x708 <__stack+0x209>
 6f6:	a2 fe       	sbrs	r10, 2
 6f8:	06 c0       	rjmp	.+12     	; 0x706 <__stack+0x207>
 6fa:	b3 94       	inc	r11
 6fc:	b3 94       	inc	r11
 6fe:	04 c0       	rjmp	.+8      	; 0x708 <__stack+0x209>
 700:	8a 2d       	mov	r24, r10
 702:	86 78       	andi	r24, 0x86	; 134
 704:	09 f0       	breq	.+2      	; 0x708 <__stack+0x209>
 706:	b3 94       	inc	r11
 708:	a3 fc       	sbrc	r10, 3
 70a:	11 c0       	rjmp	.+34     	; 0x72e <__stack+0x22f>
 70c:	a0 fe       	sbrs	r10, 0
 70e:	06 c0       	rjmp	.+12     	; 0x71c <__stack+0x21d>
 710:	b2 14       	cp	r11, r2
 712:	88 f4       	brcc	.+34     	; 0x736 <__stack+0x237>
 714:	28 0c       	add	r2, r8
 716:	92 2c       	mov	r9, r2
 718:	9b 18       	sub	r9, r11
 71a:	0e c0       	rjmp	.+28     	; 0x738 <__stack+0x239>
 71c:	b2 14       	cp	r11, r2
 71e:	60 f4       	brcc	.+24     	; 0x738 <__stack+0x239>
 720:	b6 01       	movw	r22, r12
 722:	80 e2       	ldi	r24, 0x20	; 32
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	0e 94 3f 05 	call	0xa7e	; 0xa7e <fputc>
 72a:	b3 94       	inc	r11
 72c:	f7 cf       	rjmp	.-18     	; 0x71c <__stack+0x21d>
 72e:	b2 14       	cp	r11, r2
 730:	18 f4       	brcc	.+6      	; 0x738 <__stack+0x239>
 732:	2b 18       	sub	r2, r11
 734:	02 c0       	rjmp	.+4      	; 0x73a <__stack+0x23b>
 736:	98 2c       	mov	r9, r8
 738:	21 2c       	mov	r2, r1
 73a:	a4 fe       	sbrs	r10, 4
 73c:	10 c0       	rjmp	.+32     	; 0x75e <__stack+0x25f>
 73e:	b6 01       	movw	r22, r12
 740:	80 e3       	ldi	r24, 0x30	; 48
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	0e 94 3f 05 	call	0xa7e	; 0xa7e <fputc>
 748:	a2 fe       	sbrs	r10, 2
 74a:	17 c0       	rjmp	.+46     	; 0x77a <__stack+0x27b>
 74c:	a1 fc       	sbrc	r10, 1
 74e:	03 c0       	rjmp	.+6      	; 0x756 <__stack+0x257>
 750:	88 e7       	ldi	r24, 0x78	; 120
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	02 c0       	rjmp	.+4      	; 0x75a <__stack+0x25b>
 756:	88 e5       	ldi	r24, 0x58	; 88
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	b6 01       	movw	r22, r12
 75c:	0c c0       	rjmp	.+24     	; 0x776 <__stack+0x277>
 75e:	8a 2d       	mov	r24, r10
 760:	86 78       	andi	r24, 0x86	; 134
 762:	59 f0       	breq	.+22     	; 0x77a <__stack+0x27b>
 764:	a1 fe       	sbrs	r10, 1
 766:	02 c0       	rjmp	.+4      	; 0x76c <__stack+0x26d>
 768:	8b e2       	ldi	r24, 0x2B	; 43
 76a:	01 c0       	rjmp	.+2      	; 0x76e <__stack+0x26f>
 76c:	80 e2       	ldi	r24, 0x20	; 32
 76e:	a7 fc       	sbrc	r10, 7
 770:	8d e2       	ldi	r24, 0x2D	; 45
 772:	b6 01       	movw	r22, r12
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	0e 94 3f 05 	call	0xa7e	; 0xa7e <fputc>
 77a:	89 14       	cp	r8, r9
 77c:	38 f4       	brcc	.+14     	; 0x78c <__stack+0x28d>
 77e:	b6 01       	movw	r22, r12
 780:	80 e3       	ldi	r24, 0x30	; 48
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	0e 94 3f 05 	call	0xa7e	; 0xa7e <fputc>
 788:	9a 94       	dec	r9
 78a:	f7 cf       	rjmp	.-18     	; 0x77a <__stack+0x27b>
 78c:	8a 94       	dec	r8
 78e:	f3 01       	movw	r30, r6
 790:	e8 0d       	add	r30, r8
 792:	f1 1d       	adc	r31, r1
 794:	80 81       	ld	r24, Z
 796:	b6 01       	movw	r22, r12
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	0e 94 3f 05 	call	0xa7e	; 0xa7e <fputc>
 79e:	81 10       	cpse	r8, r1
 7a0:	f5 cf       	rjmp	.-22     	; 0x78c <__stack+0x28d>
 7a2:	22 20       	and	r2, r2
 7a4:	09 f4       	brne	.+2      	; 0x7a8 <__stack+0x2a9>
 7a6:	42 ce       	rjmp	.-892    	; 0x42c <vfprintf+0x24>
 7a8:	b6 01       	movw	r22, r12
 7aa:	80 e2       	ldi	r24, 0x20	; 32
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	0e 94 3f 05 	call	0xa7e	; 0xa7e <fputc>
 7b2:	2a 94       	dec	r2
 7b4:	f6 cf       	rjmp	.-20     	; 0x7a2 <__stack+0x2a3>
 7b6:	f6 01       	movw	r30, r12
 7b8:	86 81       	ldd	r24, Z+6	; 0x06
 7ba:	97 81       	ldd	r25, Z+7	; 0x07
 7bc:	02 c0       	rjmp	.+4      	; 0x7c2 <__stack+0x2c3>
 7be:	8f ef       	ldi	r24, 0xFF	; 255
 7c0:	9f ef       	ldi	r25, 0xFF	; 255
 7c2:	2b 96       	adiw	r28, 0x0b	; 11
 7c4:	e2 e1       	ldi	r30, 0x12	; 18
 7c6:	0c 94 27 06 	jmp	0xc4e	; 0xc4e <__epilogue_restores__>

000007ca <calloc>:
 7ca:	0f 93       	push	r16
 7cc:	1f 93       	push	r17
 7ce:	cf 93       	push	r28
 7d0:	df 93       	push	r29
 7d2:	86 9f       	mul	r24, r22
 7d4:	80 01       	movw	r16, r0
 7d6:	87 9f       	mul	r24, r23
 7d8:	10 0d       	add	r17, r0
 7da:	96 9f       	mul	r25, r22
 7dc:	10 0d       	add	r17, r0
 7de:	11 24       	eor	r1, r1
 7e0:	c8 01       	movw	r24, r16
 7e2:	0e 94 01 04 	call	0x802	; 0x802 <malloc>
 7e6:	ec 01       	movw	r28, r24
 7e8:	00 97       	sbiw	r24, 0x00	; 0
 7ea:	29 f0       	breq	.+10     	; 0x7f6 <calloc+0x2c>
 7ec:	a8 01       	movw	r20, r16
 7ee:	60 e0       	ldi	r22, 0x00	; 0
 7f0:	70 e0       	ldi	r23, 0x00	; 0
 7f2:	0e 94 2d 05 	call	0xa5a	; 0xa5a <memset>
 7f6:	ce 01       	movw	r24, r28
 7f8:	df 91       	pop	r29
 7fa:	cf 91       	pop	r28
 7fc:	1f 91       	pop	r17
 7fe:	0f 91       	pop	r16
 800:	08 95       	ret

00000802 <malloc>:
 802:	0f 93       	push	r16
 804:	1f 93       	push	r17
 806:	cf 93       	push	r28
 808:	df 93       	push	r29
 80a:	82 30       	cpi	r24, 0x02	; 2
 80c:	91 05       	cpc	r25, r1
 80e:	10 f4       	brcc	.+4      	; 0x814 <malloc+0x12>
 810:	82 e0       	ldi	r24, 0x02	; 2
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <__flp>
 818:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <__flp+0x1>
 81c:	20 e0       	ldi	r18, 0x00	; 0
 81e:	30 e0       	ldi	r19, 0x00	; 0
 820:	a0 e0       	ldi	r26, 0x00	; 0
 822:	b0 e0       	ldi	r27, 0x00	; 0
 824:	30 97       	sbiw	r30, 0x00	; 0
 826:	19 f1       	breq	.+70     	; 0x86e <malloc+0x6c>
 828:	40 81       	ld	r20, Z
 82a:	51 81       	ldd	r21, Z+1	; 0x01
 82c:	02 81       	ldd	r16, Z+2	; 0x02
 82e:	13 81       	ldd	r17, Z+3	; 0x03
 830:	48 17       	cp	r20, r24
 832:	59 07       	cpc	r21, r25
 834:	c8 f0       	brcs	.+50     	; 0x868 <malloc+0x66>
 836:	84 17       	cp	r24, r20
 838:	95 07       	cpc	r25, r21
 83a:	69 f4       	brne	.+26     	; 0x856 <malloc+0x54>
 83c:	10 97       	sbiw	r26, 0x00	; 0
 83e:	31 f0       	breq	.+12     	; 0x84c <malloc+0x4a>
 840:	12 96       	adiw	r26, 0x02	; 2
 842:	0c 93       	st	X, r16
 844:	12 97       	sbiw	r26, 0x02	; 2
 846:	13 96       	adiw	r26, 0x03	; 3
 848:	1c 93       	st	X, r17
 84a:	27 c0       	rjmp	.+78     	; 0x89a <malloc+0x98>
 84c:	00 93 06 02 	sts	0x0206, r16	; 0x800206 <__flp>
 850:	10 93 07 02 	sts	0x0207, r17	; 0x800207 <__flp+0x1>
 854:	22 c0       	rjmp	.+68     	; 0x89a <malloc+0x98>
 856:	21 15       	cp	r18, r1
 858:	31 05       	cpc	r19, r1
 85a:	19 f0       	breq	.+6      	; 0x862 <malloc+0x60>
 85c:	42 17       	cp	r20, r18
 85e:	53 07       	cpc	r21, r19
 860:	18 f4       	brcc	.+6      	; 0x868 <malloc+0x66>
 862:	9a 01       	movw	r18, r20
 864:	bd 01       	movw	r22, r26
 866:	ef 01       	movw	r28, r30
 868:	df 01       	movw	r26, r30
 86a:	f8 01       	movw	r30, r16
 86c:	db cf       	rjmp	.-74     	; 0x824 <malloc+0x22>
 86e:	21 15       	cp	r18, r1
 870:	31 05       	cpc	r19, r1
 872:	f9 f0       	breq	.+62     	; 0x8b2 <malloc+0xb0>
 874:	28 1b       	sub	r18, r24
 876:	39 0b       	sbc	r19, r25
 878:	24 30       	cpi	r18, 0x04	; 4
 87a:	31 05       	cpc	r19, r1
 87c:	80 f4       	brcc	.+32     	; 0x89e <malloc+0x9c>
 87e:	8a 81       	ldd	r24, Y+2	; 0x02
 880:	9b 81       	ldd	r25, Y+3	; 0x03
 882:	61 15       	cp	r22, r1
 884:	71 05       	cpc	r23, r1
 886:	21 f0       	breq	.+8      	; 0x890 <malloc+0x8e>
 888:	fb 01       	movw	r30, r22
 88a:	93 83       	std	Z+3, r25	; 0x03
 88c:	82 83       	std	Z+2, r24	; 0x02
 88e:	04 c0       	rjmp	.+8      	; 0x898 <malloc+0x96>
 890:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <__flp+0x1>
 894:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__flp>
 898:	fe 01       	movw	r30, r28
 89a:	32 96       	adiw	r30, 0x02	; 2
 89c:	44 c0       	rjmp	.+136    	; 0x926 <malloc+0x124>
 89e:	fe 01       	movw	r30, r28
 8a0:	e2 0f       	add	r30, r18
 8a2:	f3 1f       	adc	r31, r19
 8a4:	81 93       	st	Z+, r24
 8a6:	91 93       	st	Z+, r25
 8a8:	22 50       	subi	r18, 0x02	; 2
 8aa:	31 09       	sbc	r19, r1
 8ac:	39 83       	std	Y+1, r19	; 0x01
 8ae:	28 83       	st	Y, r18
 8b0:	3a c0       	rjmp	.+116    	; 0x926 <malloc+0x124>
 8b2:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__brkval>
 8b6:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__brkval+0x1>
 8ba:	23 2b       	or	r18, r19
 8bc:	41 f4       	brne	.+16     	; 0x8ce <malloc+0xcc>
 8be:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 8c2:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 8c6:	30 93 05 02 	sts	0x0205, r19	; 0x800205 <__brkval+0x1>
 8ca:	20 93 04 02 	sts	0x0204, r18	; 0x800204 <__brkval>
 8ce:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 8d2:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 8d6:	21 15       	cp	r18, r1
 8d8:	31 05       	cpc	r19, r1
 8da:	41 f4       	brne	.+16     	; 0x8ec <malloc+0xea>
 8dc:	2d b7       	in	r18, 0x3d	; 61
 8de:	3e b7       	in	r19, 0x3e	; 62
 8e0:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 8e4:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 8e8:	24 1b       	sub	r18, r20
 8ea:	35 0b       	sbc	r19, r21
 8ec:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <__brkval>
 8f0:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <__brkval+0x1>
 8f4:	e2 17       	cp	r30, r18
 8f6:	f3 07       	cpc	r31, r19
 8f8:	a0 f4       	brcc	.+40     	; 0x922 <malloc+0x120>
 8fa:	2e 1b       	sub	r18, r30
 8fc:	3f 0b       	sbc	r19, r31
 8fe:	28 17       	cp	r18, r24
 900:	39 07       	cpc	r19, r25
 902:	78 f0       	brcs	.+30     	; 0x922 <malloc+0x120>
 904:	ac 01       	movw	r20, r24
 906:	4e 5f       	subi	r20, 0xFE	; 254
 908:	5f 4f       	sbci	r21, 0xFF	; 255
 90a:	24 17       	cp	r18, r20
 90c:	35 07       	cpc	r19, r21
 90e:	48 f0       	brcs	.+18     	; 0x922 <malloc+0x120>
 910:	4e 0f       	add	r20, r30
 912:	5f 1f       	adc	r21, r31
 914:	50 93 05 02 	sts	0x0205, r21	; 0x800205 <__brkval+0x1>
 918:	40 93 04 02 	sts	0x0204, r20	; 0x800204 <__brkval>
 91c:	81 93       	st	Z+, r24
 91e:	91 93       	st	Z+, r25
 920:	02 c0       	rjmp	.+4      	; 0x926 <malloc+0x124>
 922:	e0 e0       	ldi	r30, 0x00	; 0
 924:	f0 e0       	ldi	r31, 0x00	; 0
 926:	cf 01       	movw	r24, r30
 928:	df 91       	pop	r29
 92a:	cf 91       	pop	r28
 92c:	1f 91       	pop	r17
 92e:	0f 91       	pop	r16
 930:	08 95       	ret

00000932 <free>:
 932:	cf 93       	push	r28
 934:	df 93       	push	r29
 936:	00 97       	sbiw	r24, 0x00	; 0
 938:	09 f4       	brne	.+2      	; 0x93c <free+0xa>
 93a:	81 c0       	rjmp	.+258    	; 0xa3e <free+0x10c>
 93c:	fc 01       	movw	r30, r24
 93e:	32 97       	sbiw	r30, 0x02	; 2
 940:	13 82       	std	Z+3, r1	; 0x03
 942:	12 82       	std	Z+2, r1	; 0x02
 944:	a0 91 06 02 	lds	r26, 0x0206	; 0x800206 <__flp>
 948:	b0 91 07 02 	lds	r27, 0x0207	; 0x800207 <__flp+0x1>
 94c:	10 97       	sbiw	r26, 0x00	; 0
 94e:	81 f4       	brne	.+32     	; 0x970 <free+0x3e>
 950:	20 81       	ld	r18, Z
 952:	31 81       	ldd	r19, Z+1	; 0x01
 954:	82 0f       	add	r24, r18
 956:	93 1f       	adc	r25, r19
 958:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__brkval>
 95c:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__brkval+0x1>
 960:	28 17       	cp	r18, r24
 962:	39 07       	cpc	r19, r25
 964:	51 f5       	brne	.+84     	; 0x9ba <free+0x88>
 966:	f0 93 05 02 	sts	0x0205, r31	; 0x800205 <__brkval+0x1>
 96a:	e0 93 04 02 	sts	0x0204, r30	; 0x800204 <__brkval>
 96e:	67 c0       	rjmp	.+206    	; 0xa3e <free+0x10c>
 970:	ed 01       	movw	r28, r26
 972:	20 e0       	ldi	r18, 0x00	; 0
 974:	30 e0       	ldi	r19, 0x00	; 0
 976:	ce 17       	cp	r28, r30
 978:	df 07       	cpc	r29, r31
 97a:	40 f4       	brcc	.+16     	; 0x98c <free+0x5a>
 97c:	4a 81       	ldd	r20, Y+2	; 0x02
 97e:	5b 81       	ldd	r21, Y+3	; 0x03
 980:	9e 01       	movw	r18, r28
 982:	41 15       	cp	r20, r1
 984:	51 05       	cpc	r21, r1
 986:	f1 f0       	breq	.+60     	; 0x9c4 <free+0x92>
 988:	ea 01       	movw	r28, r20
 98a:	f5 cf       	rjmp	.-22     	; 0x976 <free+0x44>
 98c:	d3 83       	std	Z+3, r29	; 0x03
 98e:	c2 83       	std	Z+2, r28	; 0x02
 990:	40 81       	ld	r20, Z
 992:	51 81       	ldd	r21, Z+1	; 0x01
 994:	84 0f       	add	r24, r20
 996:	95 1f       	adc	r25, r21
 998:	c8 17       	cp	r28, r24
 99a:	d9 07       	cpc	r29, r25
 99c:	59 f4       	brne	.+22     	; 0x9b4 <free+0x82>
 99e:	88 81       	ld	r24, Y
 9a0:	99 81       	ldd	r25, Y+1	; 0x01
 9a2:	84 0f       	add	r24, r20
 9a4:	95 1f       	adc	r25, r21
 9a6:	02 96       	adiw	r24, 0x02	; 2
 9a8:	91 83       	std	Z+1, r25	; 0x01
 9aa:	80 83       	st	Z, r24
 9ac:	8a 81       	ldd	r24, Y+2	; 0x02
 9ae:	9b 81       	ldd	r25, Y+3	; 0x03
 9b0:	93 83       	std	Z+3, r25	; 0x03
 9b2:	82 83       	std	Z+2, r24	; 0x02
 9b4:	21 15       	cp	r18, r1
 9b6:	31 05       	cpc	r19, r1
 9b8:	29 f4       	brne	.+10     	; 0x9c4 <free+0x92>
 9ba:	f0 93 07 02 	sts	0x0207, r31	; 0x800207 <__flp+0x1>
 9be:	e0 93 06 02 	sts	0x0206, r30	; 0x800206 <__flp>
 9c2:	3d c0       	rjmp	.+122    	; 0xa3e <free+0x10c>
 9c4:	e9 01       	movw	r28, r18
 9c6:	fb 83       	std	Y+3, r31	; 0x03
 9c8:	ea 83       	std	Y+2, r30	; 0x02
 9ca:	49 91       	ld	r20, Y+
 9cc:	59 91       	ld	r21, Y+
 9ce:	c4 0f       	add	r28, r20
 9d0:	d5 1f       	adc	r29, r21
 9d2:	ec 17       	cp	r30, r28
 9d4:	fd 07       	cpc	r31, r29
 9d6:	61 f4       	brne	.+24     	; 0x9f0 <free+0xbe>
 9d8:	80 81       	ld	r24, Z
 9da:	91 81       	ldd	r25, Z+1	; 0x01
 9dc:	84 0f       	add	r24, r20
 9de:	95 1f       	adc	r25, r21
 9e0:	02 96       	adiw	r24, 0x02	; 2
 9e2:	e9 01       	movw	r28, r18
 9e4:	99 83       	std	Y+1, r25	; 0x01
 9e6:	88 83       	st	Y, r24
 9e8:	82 81       	ldd	r24, Z+2	; 0x02
 9ea:	93 81       	ldd	r25, Z+3	; 0x03
 9ec:	9b 83       	std	Y+3, r25	; 0x03
 9ee:	8a 83       	std	Y+2, r24	; 0x02
 9f0:	e0 e0       	ldi	r30, 0x00	; 0
 9f2:	f0 e0       	ldi	r31, 0x00	; 0
 9f4:	12 96       	adiw	r26, 0x02	; 2
 9f6:	8d 91       	ld	r24, X+
 9f8:	9c 91       	ld	r25, X
 9fa:	13 97       	sbiw	r26, 0x03	; 3
 9fc:	00 97       	sbiw	r24, 0x00	; 0
 9fe:	19 f0       	breq	.+6      	; 0xa06 <free+0xd4>
 a00:	fd 01       	movw	r30, r26
 a02:	dc 01       	movw	r26, r24
 a04:	f7 cf       	rjmp	.-18     	; 0x9f4 <free+0xc2>
 a06:	8d 91       	ld	r24, X+
 a08:	9c 91       	ld	r25, X
 a0a:	11 97       	sbiw	r26, 0x01	; 1
 a0c:	9d 01       	movw	r18, r26
 a0e:	2e 5f       	subi	r18, 0xFE	; 254
 a10:	3f 4f       	sbci	r19, 0xFF	; 255
 a12:	82 0f       	add	r24, r18
 a14:	93 1f       	adc	r25, r19
 a16:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__brkval>
 a1a:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__brkval+0x1>
 a1e:	28 17       	cp	r18, r24
 a20:	39 07       	cpc	r19, r25
 a22:	69 f4       	brne	.+26     	; 0xa3e <free+0x10c>
 a24:	30 97       	sbiw	r30, 0x00	; 0
 a26:	29 f4       	brne	.+10     	; 0xa32 <free+0x100>
 a28:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <__flp+0x1>
 a2c:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <__flp>
 a30:	02 c0       	rjmp	.+4      	; 0xa36 <free+0x104>
 a32:	13 82       	std	Z+3, r1	; 0x03
 a34:	12 82       	std	Z+2, r1	; 0x02
 a36:	b0 93 05 02 	sts	0x0205, r27	; 0x800205 <__brkval+0x1>
 a3a:	a0 93 04 02 	sts	0x0204, r26	; 0x800204 <__brkval>
 a3e:	df 91       	pop	r29
 a40:	cf 91       	pop	r28
 a42:	08 95       	ret

00000a44 <strnlen_P>:
 a44:	fc 01       	movw	r30, r24
 a46:	05 90       	lpm	r0, Z+
 a48:	61 50       	subi	r22, 0x01	; 1
 a4a:	70 40       	sbci	r23, 0x00	; 0
 a4c:	01 10       	cpse	r0, r1
 a4e:	d8 f7       	brcc	.-10     	; 0xa46 <strnlen_P+0x2>
 a50:	80 95       	com	r24
 a52:	90 95       	com	r25
 a54:	8e 0f       	add	r24, r30
 a56:	9f 1f       	adc	r25, r31
 a58:	08 95       	ret

00000a5a <memset>:
 a5a:	dc 01       	movw	r26, r24
 a5c:	01 c0       	rjmp	.+2      	; 0xa60 <memset+0x6>
 a5e:	6d 93       	st	X+, r22
 a60:	41 50       	subi	r20, 0x01	; 1
 a62:	50 40       	sbci	r21, 0x00	; 0
 a64:	e0 f7       	brcc	.-8      	; 0xa5e <memset+0x4>
 a66:	08 95       	ret

00000a68 <strnlen>:
 a68:	fc 01       	movw	r30, r24
 a6a:	61 50       	subi	r22, 0x01	; 1
 a6c:	70 40       	sbci	r23, 0x00	; 0
 a6e:	01 90       	ld	r0, Z+
 a70:	01 10       	cpse	r0, r1
 a72:	d8 f7       	brcc	.-10     	; 0xa6a <strnlen+0x2>
 a74:	80 95       	com	r24
 a76:	90 95       	com	r25
 a78:	8e 0f       	add	r24, r30
 a7a:	9f 1f       	adc	r25, r31
 a7c:	08 95       	ret

00000a7e <fputc>:
 a7e:	0f 93       	push	r16
 a80:	1f 93       	push	r17
 a82:	cf 93       	push	r28
 a84:	df 93       	push	r29
 a86:	fb 01       	movw	r30, r22
 a88:	23 81       	ldd	r18, Z+3	; 0x03
 a8a:	21 fd       	sbrc	r18, 1
 a8c:	03 c0       	rjmp	.+6      	; 0xa94 <fputc+0x16>
 a8e:	8f ef       	ldi	r24, 0xFF	; 255
 a90:	9f ef       	ldi	r25, 0xFF	; 255
 a92:	2c c0       	rjmp	.+88     	; 0xaec <fputc+0x6e>
 a94:	22 ff       	sbrs	r18, 2
 a96:	16 c0       	rjmp	.+44     	; 0xac4 <fputc+0x46>
 a98:	46 81       	ldd	r20, Z+6	; 0x06
 a9a:	57 81       	ldd	r21, Z+7	; 0x07
 a9c:	24 81       	ldd	r18, Z+4	; 0x04
 a9e:	35 81       	ldd	r19, Z+5	; 0x05
 aa0:	42 17       	cp	r20, r18
 aa2:	53 07       	cpc	r21, r19
 aa4:	44 f4       	brge	.+16     	; 0xab6 <fputc+0x38>
 aa6:	a0 81       	ld	r26, Z
 aa8:	b1 81       	ldd	r27, Z+1	; 0x01
 aaa:	9d 01       	movw	r18, r26
 aac:	2f 5f       	subi	r18, 0xFF	; 255
 aae:	3f 4f       	sbci	r19, 0xFF	; 255
 ab0:	31 83       	std	Z+1, r19	; 0x01
 ab2:	20 83       	st	Z, r18
 ab4:	8c 93       	st	X, r24
 ab6:	26 81       	ldd	r18, Z+6	; 0x06
 ab8:	37 81       	ldd	r19, Z+7	; 0x07
 aba:	2f 5f       	subi	r18, 0xFF	; 255
 abc:	3f 4f       	sbci	r19, 0xFF	; 255
 abe:	37 83       	std	Z+7, r19	; 0x07
 ac0:	26 83       	std	Z+6, r18	; 0x06
 ac2:	14 c0       	rjmp	.+40     	; 0xaec <fputc+0x6e>
 ac4:	8b 01       	movw	r16, r22
 ac6:	ec 01       	movw	r28, r24
 ac8:	fb 01       	movw	r30, r22
 aca:	00 84       	ldd	r0, Z+8	; 0x08
 acc:	f1 85       	ldd	r31, Z+9	; 0x09
 ace:	e0 2d       	mov	r30, r0
 ad0:	09 95       	icall
 ad2:	89 2b       	or	r24, r25
 ad4:	e1 f6       	brne	.-72     	; 0xa8e <fputc+0x10>
 ad6:	d8 01       	movw	r26, r16
 ad8:	16 96       	adiw	r26, 0x06	; 6
 ada:	8d 91       	ld	r24, X+
 adc:	9c 91       	ld	r25, X
 ade:	17 97       	sbiw	r26, 0x07	; 7
 ae0:	01 96       	adiw	r24, 0x01	; 1
 ae2:	17 96       	adiw	r26, 0x07	; 7
 ae4:	9c 93       	st	X, r25
 ae6:	8e 93       	st	-X, r24
 ae8:	16 97       	sbiw	r26, 0x06	; 6
 aea:	ce 01       	movw	r24, r28
 aec:	df 91       	pop	r29
 aee:	cf 91       	pop	r28
 af0:	1f 91       	pop	r17
 af2:	0f 91       	pop	r16
 af4:	08 95       	ret

00000af6 <__ultoa_invert>:
 af6:	fa 01       	movw	r30, r20
 af8:	aa 27       	eor	r26, r26
 afa:	28 30       	cpi	r18, 0x08	; 8
 afc:	51 f1       	breq	.+84     	; 0xb52 <__ultoa_invert+0x5c>
 afe:	20 31       	cpi	r18, 0x10	; 16
 b00:	81 f1       	breq	.+96     	; 0xb62 <__ultoa_invert+0x6c>
 b02:	e8 94       	clt
 b04:	6f 93       	push	r22
 b06:	6e 7f       	andi	r22, 0xFE	; 254
 b08:	6e 5f       	subi	r22, 0xFE	; 254
 b0a:	7f 4f       	sbci	r23, 0xFF	; 255
 b0c:	8f 4f       	sbci	r24, 0xFF	; 255
 b0e:	9f 4f       	sbci	r25, 0xFF	; 255
 b10:	af 4f       	sbci	r26, 0xFF	; 255
 b12:	b1 e0       	ldi	r27, 0x01	; 1
 b14:	3e d0       	rcall	.+124    	; 0xb92 <__ultoa_invert+0x9c>
 b16:	b4 e0       	ldi	r27, 0x04	; 4
 b18:	3c d0       	rcall	.+120    	; 0xb92 <__ultoa_invert+0x9c>
 b1a:	67 0f       	add	r22, r23
 b1c:	78 1f       	adc	r23, r24
 b1e:	89 1f       	adc	r24, r25
 b20:	9a 1f       	adc	r25, r26
 b22:	a1 1d       	adc	r26, r1
 b24:	68 0f       	add	r22, r24
 b26:	79 1f       	adc	r23, r25
 b28:	8a 1f       	adc	r24, r26
 b2a:	91 1d       	adc	r25, r1
 b2c:	a1 1d       	adc	r26, r1
 b2e:	6a 0f       	add	r22, r26
 b30:	71 1d       	adc	r23, r1
 b32:	81 1d       	adc	r24, r1
 b34:	91 1d       	adc	r25, r1
 b36:	a1 1d       	adc	r26, r1
 b38:	20 d0       	rcall	.+64     	; 0xb7a <__ultoa_invert+0x84>
 b3a:	09 f4       	brne	.+2      	; 0xb3e <__ultoa_invert+0x48>
 b3c:	68 94       	set
 b3e:	3f 91       	pop	r19
 b40:	2a e0       	ldi	r18, 0x0A	; 10
 b42:	26 9f       	mul	r18, r22
 b44:	11 24       	eor	r1, r1
 b46:	30 19       	sub	r19, r0
 b48:	30 5d       	subi	r19, 0xD0	; 208
 b4a:	31 93       	st	Z+, r19
 b4c:	de f6       	brtc	.-74     	; 0xb04 <__ultoa_invert+0xe>
 b4e:	cf 01       	movw	r24, r30
 b50:	08 95       	ret
 b52:	46 2f       	mov	r20, r22
 b54:	47 70       	andi	r20, 0x07	; 7
 b56:	40 5d       	subi	r20, 0xD0	; 208
 b58:	41 93       	st	Z+, r20
 b5a:	b3 e0       	ldi	r27, 0x03	; 3
 b5c:	0f d0       	rcall	.+30     	; 0xb7c <__ultoa_invert+0x86>
 b5e:	c9 f7       	brne	.-14     	; 0xb52 <__ultoa_invert+0x5c>
 b60:	f6 cf       	rjmp	.-20     	; 0xb4e <__ultoa_invert+0x58>
 b62:	46 2f       	mov	r20, r22
 b64:	4f 70       	andi	r20, 0x0F	; 15
 b66:	40 5d       	subi	r20, 0xD0	; 208
 b68:	4a 33       	cpi	r20, 0x3A	; 58
 b6a:	18 f0       	brcs	.+6      	; 0xb72 <__ultoa_invert+0x7c>
 b6c:	49 5d       	subi	r20, 0xD9	; 217
 b6e:	31 fd       	sbrc	r19, 1
 b70:	40 52       	subi	r20, 0x20	; 32
 b72:	41 93       	st	Z+, r20
 b74:	02 d0       	rcall	.+4      	; 0xb7a <__ultoa_invert+0x84>
 b76:	a9 f7       	brne	.-22     	; 0xb62 <__ultoa_invert+0x6c>
 b78:	ea cf       	rjmp	.-44     	; 0xb4e <__ultoa_invert+0x58>
 b7a:	b4 e0       	ldi	r27, 0x04	; 4
 b7c:	a6 95       	lsr	r26
 b7e:	97 95       	ror	r25
 b80:	87 95       	ror	r24
 b82:	77 95       	ror	r23
 b84:	67 95       	ror	r22
 b86:	ba 95       	dec	r27
 b88:	c9 f7       	brne	.-14     	; 0xb7c <__ultoa_invert+0x86>
 b8a:	00 97       	sbiw	r24, 0x00	; 0
 b8c:	61 05       	cpc	r22, r1
 b8e:	71 05       	cpc	r23, r1
 b90:	08 95       	ret
 b92:	9b 01       	movw	r18, r22
 b94:	ac 01       	movw	r20, r24
 b96:	0a 2e       	mov	r0, r26
 b98:	06 94       	lsr	r0
 b9a:	57 95       	ror	r21
 b9c:	47 95       	ror	r20
 b9e:	37 95       	ror	r19
 ba0:	27 95       	ror	r18
 ba2:	ba 95       	dec	r27
 ba4:	c9 f7       	brne	.-14     	; 0xb98 <__ultoa_invert+0xa2>
 ba6:	62 0f       	add	r22, r18
 ba8:	73 1f       	adc	r23, r19
 baa:	84 1f       	adc	r24, r20
 bac:	95 1f       	adc	r25, r21
 bae:	a0 1d       	adc	r26, r0
 bb0:	08 95       	ret

00000bb2 <__divmodsi4>:
 bb2:	05 2e       	mov	r0, r21
 bb4:	97 fb       	bst	r25, 7
 bb6:	1e f4       	brtc	.+6      	; 0xbbe <__divmodsi4+0xc>
 bb8:	00 94       	com	r0
 bba:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__negsi2>
 bbe:	57 fd       	sbrc	r21, 7
 bc0:	07 d0       	rcall	.+14     	; 0xbd0 <__divmodsi4_neg2>
 bc2:	0e 94 42 06 	call	0xc84	; 0xc84 <__udivmodsi4>
 bc6:	07 fc       	sbrc	r0, 7
 bc8:	03 d0       	rcall	.+6      	; 0xbd0 <__divmodsi4_neg2>
 bca:	4e f4       	brtc	.+18     	; 0xbde <__divmodsi4_exit>
 bcc:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__negsi2>

00000bd0 <__divmodsi4_neg2>:
 bd0:	50 95       	com	r21
 bd2:	40 95       	com	r20
 bd4:	30 95       	com	r19
 bd6:	21 95       	neg	r18
 bd8:	3f 4f       	sbci	r19, 0xFF	; 255
 bda:	4f 4f       	sbci	r20, 0xFF	; 255
 bdc:	5f 4f       	sbci	r21, 0xFF	; 255

00000bde <__divmodsi4_exit>:
 bde:	08 95       	ret

00000be0 <__negsi2>:
 be0:	90 95       	com	r25
 be2:	80 95       	com	r24
 be4:	70 95       	com	r23
 be6:	61 95       	neg	r22
 be8:	7f 4f       	sbci	r23, 0xFF	; 255
 bea:	8f 4f       	sbci	r24, 0xFF	; 255
 bec:	9f 4f       	sbci	r25, 0xFF	; 255
 bee:	08 95       	ret

00000bf0 <__muluhisi3>:
 bf0:	0e 94 64 06 	call	0xcc8	; 0xcc8 <__umulhisi3>
 bf4:	a5 9f       	mul	r26, r21
 bf6:	90 0d       	add	r25, r0
 bf8:	b4 9f       	mul	r27, r20
 bfa:	90 0d       	add	r25, r0
 bfc:	a4 9f       	mul	r26, r20
 bfe:	80 0d       	add	r24, r0
 c00:	91 1d       	adc	r25, r1
 c02:	11 24       	eor	r1, r1
 c04:	08 95       	ret

00000c06 <__mulshisi3>:
 c06:	b7 ff       	sbrs	r27, 7
 c08:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <__muluhisi3>

00000c0c <__mulohisi3>:
 c0c:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <__muluhisi3>
 c10:	82 1b       	sub	r24, r18
 c12:	93 0b       	sbc	r25, r19
 c14:	08 95       	ret

00000c16 <__prologue_saves__>:
 c16:	2f 92       	push	r2
 c18:	3f 92       	push	r3
 c1a:	4f 92       	push	r4
 c1c:	5f 92       	push	r5
 c1e:	6f 92       	push	r6
 c20:	7f 92       	push	r7
 c22:	8f 92       	push	r8
 c24:	9f 92       	push	r9
 c26:	af 92       	push	r10
 c28:	bf 92       	push	r11
 c2a:	cf 92       	push	r12
 c2c:	df 92       	push	r13
 c2e:	ef 92       	push	r14
 c30:	ff 92       	push	r15
 c32:	0f 93       	push	r16
 c34:	1f 93       	push	r17
 c36:	cf 93       	push	r28
 c38:	df 93       	push	r29
 c3a:	cd b7       	in	r28, 0x3d	; 61
 c3c:	de b7       	in	r29, 0x3e	; 62
 c3e:	ca 1b       	sub	r28, r26
 c40:	db 0b       	sbc	r29, r27
 c42:	0f b6       	in	r0, 0x3f	; 63
 c44:	f8 94       	cli
 c46:	de bf       	out	0x3e, r29	; 62
 c48:	0f be       	out	0x3f, r0	; 63
 c4a:	cd bf       	out	0x3d, r28	; 61
 c4c:	09 94       	ijmp

00000c4e <__epilogue_restores__>:
 c4e:	2a 88       	ldd	r2, Y+18	; 0x12
 c50:	39 88       	ldd	r3, Y+17	; 0x11
 c52:	48 88       	ldd	r4, Y+16	; 0x10
 c54:	5f 84       	ldd	r5, Y+15	; 0x0f
 c56:	6e 84       	ldd	r6, Y+14	; 0x0e
 c58:	7d 84       	ldd	r7, Y+13	; 0x0d
 c5a:	8c 84       	ldd	r8, Y+12	; 0x0c
 c5c:	9b 84       	ldd	r9, Y+11	; 0x0b
 c5e:	aa 84       	ldd	r10, Y+10	; 0x0a
 c60:	b9 84       	ldd	r11, Y+9	; 0x09
 c62:	c8 84       	ldd	r12, Y+8	; 0x08
 c64:	df 80       	ldd	r13, Y+7	; 0x07
 c66:	ee 80       	ldd	r14, Y+6	; 0x06
 c68:	fd 80       	ldd	r15, Y+5	; 0x05
 c6a:	0c 81       	ldd	r16, Y+4	; 0x04
 c6c:	1b 81       	ldd	r17, Y+3	; 0x03
 c6e:	aa 81       	ldd	r26, Y+2	; 0x02
 c70:	b9 81       	ldd	r27, Y+1	; 0x01
 c72:	ce 0f       	add	r28, r30
 c74:	d1 1d       	adc	r29, r1
 c76:	0f b6       	in	r0, 0x3f	; 63
 c78:	f8 94       	cli
 c7a:	de bf       	out	0x3e, r29	; 62
 c7c:	0f be       	out	0x3f, r0	; 63
 c7e:	cd bf       	out	0x3d, r28	; 61
 c80:	ed 01       	movw	r28, r26
 c82:	08 95       	ret

00000c84 <__udivmodsi4>:
 c84:	a1 e2       	ldi	r26, 0x21	; 33
 c86:	1a 2e       	mov	r1, r26
 c88:	aa 1b       	sub	r26, r26
 c8a:	bb 1b       	sub	r27, r27
 c8c:	fd 01       	movw	r30, r26
 c8e:	0d c0       	rjmp	.+26     	; 0xcaa <__udivmodsi4_ep>

00000c90 <__udivmodsi4_loop>:
 c90:	aa 1f       	adc	r26, r26
 c92:	bb 1f       	adc	r27, r27
 c94:	ee 1f       	adc	r30, r30
 c96:	ff 1f       	adc	r31, r31
 c98:	a2 17       	cp	r26, r18
 c9a:	b3 07       	cpc	r27, r19
 c9c:	e4 07       	cpc	r30, r20
 c9e:	f5 07       	cpc	r31, r21
 ca0:	20 f0       	brcs	.+8      	; 0xcaa <__udivmodsi4_ep>
 ca2:	a2 1b       	sub	r26, r18
 ca4:	b3 0b       	sbc	r27, r19
 ca6:	e4 0b       	sbc	r30, r20
 ca8:	f5 0b       	sbc	r31, r21

00000caa <__udivmodsi4_ep>:
 caa:	66 1f       	adc	r22, r22
 cac:	77 1f       	adc	r23, r23
 cae:	88 1f       	adc	r24, r24
 cb0:	99 1f       	adc	r25, r25
 cb2:	1a 94       	dec	r1
 cb4:	69 f7       	brne	.-38     	; 0xc90 <__udivmodsi4_loop>
 cb6:	60 95       	com	r22
 cb8:	70 95       	com	r23
 cba:	80 95       	com	r24
 cbc:	90 95       	com	r25
 cbe:	9b 01       	movw	r18, r22
 cc0:	ac 01       	movw	r20, r24
 cc2:	bd 01       	movw	r22, r26
 cc4:	cf 01       	movw	r24, r30
 cc6:	08 95       	ret

00000cc8 <__umulhisi3>:
 cc8:	a2 9f       	mul	r26, r18
 cca:	b0 01       	movw	r22, r0
 ccc:	b3 9f       	mul	r27, r19
 cce:	c0 01       	movw	r24, r0
 cd0:	a3 9f       	mul	r26, r19
 cd2:	70 0d       	add	r23, r0
 cd4:	81 1d       	adc	r24, r1
 cd6:	11 24       	eor	r1, r1
 cd8:	91 1d       	adc	r25, r1
 cda:	b2 9f       	mul	r27, r18
 cdc:	70 0d       	add	r23, r0
 cde:	81 1d       	adc	r24, r1
 ce0:	11 24       	eor	r1, r1
 ce2:	91 1d       	adc	r25, r1
 ce4:	08 95       	ret

00000ce6 <_exit>:
 ce6:	f8 94       	cli

00000ce8 <__stop_program>:
 ce8:	ff cf       	rjmp	.-2      	; 0xce8 <__stop_program>
