
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000013c  00800100  00000d88  00000e1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d88  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080023c  0080023c  00000f58  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f58  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000fb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000ff0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f3c  00000000  00000000  000010c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b06  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006ed  00000000  00000000  00002b0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f0  00000000  00000000  000031f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000056b  00000000  00000000  000033e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000045c  00000000  00000000  00003953  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00003daf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	12 e0       	ldi	r17, 0x02	; 2
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 e8       	ldi	r30, 0x88	; 136
  84:	fd e0       	ldi	r31, 0x0D	; 13
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ac 33       	cpi	r26, 0x3C	; 60
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	ac e3       	ldi	r26, 0x3C	; 60
  96:	b2 e0       	ldi	r27, 0x02	; 2
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a6 34       	cpi	r26, 0x46	; 70
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 82 00 	call	0x104	; 0x104 <main>
  a6:	0c 94 c2 06 	jmp	0xd84	; 0xd84 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_Read>:
	} 
	else 
	{
		return NEUTRAL;
	}
}
  ae:	e0 e0       	ldi	r30, 0x00	; 0
  b0:	f4 e1       	ldi	r31, 0x14	; 20
  b2:	80 83       	st	Z, r24
  b4:	80 81       	ld	r24, Z
  b6:	08 95       	ret

000000b8 <Get_Joystick_Position>:
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	0e 94 57 00 	call	0xae	; 0xae <ADC_Read>
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	80 58       	subi	r24, 0x80	; 128
  c2:	91 09       	sbc	r25, r1
  c4:	44 e6       	ldi	r20, 0x64	; 100
  c6:	48 9f       	mul	r20, r24
  c8:	90 01       	movw	r18, r0
  ca:	49 9f       	mul	r20, r25
  cc:	30 0d       	add	r19, r0
  ce:	11 24       	eor	r1, r1
  d0:	33 23       	and	r19, r19
  d2:	14 f4       	brge	.+4      	; 0xd8 <Get_Joystick_Position+0x20>
  d4:	21 58       	subi	r18, 0x81	; 129
  d6:	3f 4f       	sbci	r19, 0xFF	; 255
  d8:	22 0f       	add	r18, r18
  da:	23 2f       	mov	r18, r19
  dc:	22 1f       	adc	r18, r18
  de:	33 0b       	sbc	r19, r19
  e0:	8c e9       	ldi	r24, 0x9C	; 156
  e2:	92 2f       	mov	r25, r18
  e4:	08 95       	ret

000000e6 <Init_ADC>:

void Init_ADC()
{
/*AS2 = 0 Timer/Counter is clocked form the I/O clock*/
	ASSR &= ~(1 << AS2);
  e6:	86 b5       	in	r24, 0x26	; 38
  e8:	87 7f       	andi	r24, 0xF7	; 247
  ea:	86 bd       	out	0x26, r24	; 38
/*Configure PD5 as output (to provide a clock to the ADC)*/
	DDRD |= (1 << ADC_CLOCK_PIN);
  ec:	81 b3       	in	r24, 0x11	; 17
  ee:	80 62       	ori	r24, 0x20	; 32
  f0:	81 bb       	out	0x11, r24	; 17

	// Set up Timer1 to generate a PWM signal
	TCCR1A = (1 << COM1A0) | (1 << WGM10);  // Toggle OC1A on compare match, fast PWM mode
  f2:	81 e4       	ldi	r24, 0x41	; 65
  f4:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1 << WGM12) | (1 << CS10);    // No prescaling
  f6:	89 e0       	ldi	r24, 0x09	; 9
  f8:	8e bd       	out	0x2e, r24	; 46

	// Set the compare match value to generate a suitable clock signal
	
/*Adjust this value to change the clock frequency*/
	OCR1A = 128; 
  fa:	80 e8       	ldi	r24, 0x80	; 128
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	9b bd       	out	0x2b, r25	; 43
 100:	8a bd       	out	0x2a, r24	; 42
 102:	08 95       	ret

00000104 <main>:

/* === Global variable === */
char tx_data;

int main(void) {
	Init();
 104:	0e 94 bb 00 	call	0x176	; 0x176 <Init>
	USART_Init(UBBR);
 108:	8f e1       	ldi	r24, 0x1F	; 31
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	0e 94 45 01 	call	0x28a	; 0x28a <USART_Init>
	Init_ADC();
 110:	0e 94 73 00 	call	0xe6	; 0xe6 <Init_ADC>
	
	FILE *uart_stream = fdevopen(USART_Transmit_Char, USART_Receive_Char);
 114:	61 e6       	ldi	r22, 0x61	; 97
 116:	71 e0       	ldi	r23, 0x01	; 1
 118:	83 e5       	ldi	r24, 0x53	; 83
 11a:	91 e0       	ldi	r25, 0x01	; 1
 11c:	0e 94 c2 01 	call	0x384	; 0x384 <fdevopen>
	
	stdout = uart_stream;
 120:	ec e3       	ldi	r30, 0x3C	; 60
 122:	f2 e0       	ldi	r31, 0x02	; 2
 124:	93 83       	std	Z+3, r25	; 0x03
 126:	82 83       	std	Z+2, r24	; 0x02
	stdin = uart_stream;
 128:	91 83       	std	Z+1, r25	; 0x01
 12a:	80 83       	st	Z, r24
	
	printf("I am printf!\n\r");
 12c:	8a e0       	ldi	r24, 0x0A	; 10
 12e:	91 e0       	ldi	r25, 0x01	; 1
 130:	9f 93       	push	r25
 132:	8f 93       	push	r24
 134:	0e 94 0d 02 	call	0x41a	; 0x41a <printf>
	
	SRAM_test();
 138:	0e 94 c2 00 	call	0x184	; 0x184 <SRAM_test>
 13c:	0f 90       	pop	r0
 13e:	0f 90       	pop	r0
	
	JoystickPosition pos = {0,0};
		
	while(1)
	{
		pos = Get_Joystick_Position();
 140:	0e 94 5c 00 	call	0xb8	; 0xb8 <Get_Joystick_Position>
		printf("Position x: %d %%, Position y: %d %%\n\r",pos.x, pos.y);
 144:	29 2f       	mov	r18, r25
 146:	09 2e       	mov	r0, r25
 148:	00 0c       	add	r0, r0
 14a:	33 0b       	sbc	r19, r19
 14c:	3f 93       	push	r19
 14e:	9f 93       	push	r25
 150:	28 2f       	mov	r18, r24
 152:	08 2e       	mov	r0, r24
 154:	00 0c       	add	r0, r0
 156:	33 0b       	sbc	r19, r19
 158:	3f 93       	push	r19
 15a:	8f 93       	push	r24
 15c:	89 e1       	ldi	r24, 0x19	; 25
 15e:	91 e0       	ldi	r25, 0x01	; 1
 160:	9f 93       	push	r25
 162:	8f 93       	push	r24
 164:	0e 94 0d 02 	call	0x41a	; 0x41a <printf>
 168:	0f 90       	pop	r0
 16a:	0f 90       	pop	r0
 16c:	0f 90       	pop	r0
 16e:	0f 90       	pop	r0
 170:	0f 90       	pop	r0
 172:	0f 90       	pop	r0
 174:	e5 cf       	rjmp	.-54     	; 0x140 <main+0x3c>

00000176 <Init>:
}

void write_to_latch(uint8_t data) {
/*Write data to the specified address in external memory space*/
	PORTE |= (1 << PE1);
	*(volatile uint8_t *)LATCH_ADDRESS = data;
 176:	85 b7       	in	r24, 0x35	; 53
 178:	80 68       	ori	r24, 0x80	; 128
 17a:	85 bf       	out	0x35, r24	; 53
 17c:	80 b7       	in	r24, 0x30	; 48
 17e:	80 62       	ori	r24, 0x20	; 32
 180:	80 bf       	out	0x30, r24	; 48
 182:	08 95       	ret

00000184 <SRAM_test>:
}

void SRAM_test(void)
{
 184:	ef 92       	push	r14
 186:	ff 92       	push	r15
 188:	0f 93       	push	r16
 18a:	1f 93       	push	r17
 18c:	cf 93       	push	r28
 18e:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
 190:	80 e4       	ldi	r24, 0x40	; 64
 192:	91 e0       	ldi	r25, 0x01	; 1
 194:	0e 94 23 02 	call	0x446	; 0x446 <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
 198:	0e 94 b2 01 	call	0x364	; 0x364 <rand>
 19c:	7c 01       	movw	r14, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
 19e:	0e 94 b7 01 	call	0x36e	; 0x36e <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1a2:	c0 e0       	ldi	r28, 0x00	; 0
 1a4:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
 1a6:	00 e0       	ldi	r16, 0x00	; 0
 1a8:	10 e0       	ldi	r17, 0x00	; 0
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1aa:	20 c0       	rjmp	.+64     	; 0x1ec <SRAM_test+0x68>
		uint8_t some_value = rand();
 1ac:	0e 94 b2 01 	call	0x364	; 0x364 <rand>
		ext_ram[i] = some_value;
 1b0:	fe 01       	movw	r30, r28
 1b2:	f8 5e       	subi	r31, 0xE8	; 232
 1b4:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
 1b6:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 1b8:	28 17       	cp	r18, r24
 1ba:	b9 f0       	breq	.+46     	; 0x1ea <SRAM_test+0x66>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 1bc:	99 27       	eor	r25, r25
 1be:	9f 93       	push	r25
 1c0:	8f 93       	push	r24
 1c2:	1f 92       	push	r1
 1c4:	2f 93       	push	r18
 1c6:	df 93       	push	r29
 1c8:	cf 93       	push	r28
 1ca:	86 e5       	ldi	r24, 0x56	; 86
 1cc:	91 e0       	ldi	r25, 0x01	; 1
 1ce:	9f 93       	push	r25
 1d0:	8f 93       	push	r24
 1d2:	0e 94 0d 02 	call	0x41a	; 0x41a <printf>
			write_errors++;
 1d6:	0f 5f       	subi	r16, 0xFF	; 255
 1d8:	1f 4f       	sbci	r17, 0xFF	; 255
 1da:	8d b7       	in	r24, 0x3d	; 61
 1dc:	9e b7       	in	r25, 0x3e	; 62
 1de:	08 96       	adiw	r24, 0x08	; 8
 1e0:	0f b6       	in	r0, 0x3f	; 63
 1e2:	f8 94       	cli
 1e4:	9e bf       	out	0x3e, r25	; 62
 1e6:	0f be       	out	0x3f, r0	; 63
 1e8:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1ea:	21 96       	adiw	r28, 0x01	; 1
 1ec:	c1 15       	cp	r28, r1
 1ee:	98 e0       	ldi	r25, 0x08	; 8
 1f0:	d9 07       	cpc	r29, r25
 1f2:	e0 f2       	brcs	.-72     	; 0x1ac <SRAM_test+0x28>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
 1f4:	c7 01       	movw	r24, r14
 1f6:	0e 94 b7 01 	call	0x36e	; 0x36e <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1fa:	c0 e0       	ldi	r28, 0x00	; 0
 1fc:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 1fe:	e1 2c       	mov	r14, r1
 200:	f1 2c       	mov	r15, r1
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 202:	20 c0       	rjmp	.+64     	; 0x244 <__EEPROM_REGION_LENGTH__+0x44>
		uint8_t some_value = rand();
 204:	0e 94 b2 01 	call	0x364	; 0x364 <rand>
		uint8_t retreived_value = ext_ram[i];
 208:	fe 01       	movw	r30, r28
 20a:	f8 5e       	subi	r31, 0xE8	; 232
 20c:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 20e:	28 17       	cp	r18, r24
 210:	c1 f0       	breq	.+48     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 212:	99 27       	eor	r25, r25
 214:	9f 93       	push	r25
 216:	8f 93       	push	r24
 218:	1f 92       	push	r1
 21a:	2f 93       	push	r18
 21c:	df 93       	push	r29
 21e:	cf 93       	push	r28
 220:	8f e8       	ldi	r24, 0x8F	; 143
 222:	91 e0       	ldi	r25, 0x01	; 1
 224:	9f 93       	push	r25
 226:	8f 93       	push	r24
 228:	0e 94 0d 02 	call	0x41a	; 0x41a <printf>
			retrieval_errors++;
 22c:	8f ef       	ldi	r24, 0xFF	; 255
 22e:	e8 1a       	sub	r14, r24
 230:	f8 0a       	sbc	r15, r24
 232:	8d b7       	in	r24, 0x3d	; 61
 234:	9e b7       	in	r25, 0x3e	; 62
 236:	08 96       	adiw	r24, 0x08	; 8
 238:	0f b6       	in	r0, 0x3f	; 63
 23a:	f8 94       	cli
 23c:	9e bf       	out	0x3e, r25	; 62
 23e:	0f be       	out	0x3f, r0	; 63
 240:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 242:	21 96       	adiw	r28, 0x01	; 1
 244:	c1 15       	cp	r28, r1
 246:	98 e0       	ldi	r25, 0x08	; 8
 248:	d9 07       	cpc	r29, r25
 24a:	e0 f2       	brcs	.-72     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase\n\r", write_errors);
 24c:	1f 93       	push	r17
 24e:	0f 93       	push	r16
 250:	8c ec       	ldi	r24, 0xCC	; 204
 252:	91 e0       	ldi	r25, 0x01	; 1
 254:	9f 93       	push	r25
 256:	8f 93       	push	r24
 258:	0e 94 0d 02 	call	0x41a	; 0x41a <printf>
	printf("SRAM test completed with \n%4d errors in retrieval phase\n\r", retrieval_errors);
 25c:	ff 92       	push	r15
 25e:	ef 92       	push	r14
 260:	82 e0       	ldi	r24, 0x02	; 2
 262:	92 e0       	ldi	r25, 0x02	; 2
 264:	9f 93       	push	r25
 266:	8f 93       	push	r24
 268:	0e 94 0d 02 	call	0x41a	; 0x41a <printf>
}
 26c:	8d b7       	in	r24, 0x3d	; 61
 26e:	9e b7       	in	r25, 0x3e	; 62
 270:	08 96       	adiw	r24, 0x08	; 8
 272:	0f b6       	in	r0, 0x3f	; 63
 274:	f8 94       	cli
 276:	9e bf       	out	0x3e, r25	; 62
 278:	0f be       	out	0x3f, r0	; 63
 27a:	8d bf       	out	0x3d, r24	; 61
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	1f 91       	pop	r17
 282:	0f 91       	pop	r16
 284:	ff 90       	pop	r15
 286:	ef 90       	pop	r14
 288:	08 95       	ret

0000028a <USART_Init>:
char USART_Receive(void)
{
/*Do nothing until data have been recieved and is ready to be read from UDR*/
	while (!(UCSR0A & (1<<RXC0)));
	return UDR0;
}
 28a:	90 bd       	out	0x20, r25	; 32
 28c:	89 b9       	out	0x09, r24	; 9
 28e:	8b b1       	in	r24, 0x0b	; 11
 290:	8d 7f       	andi	r24, 0xFD	; 253
 292:	8b b9       	out	0x0b, r24	; 11
 294:	88 e1       	ldi	r24, 0x18	; 24
 296:	8a b9       	out	0x0a, r24	; 10
 298:	86 e8       	ldi	r24, 0x86	; 134
 29a:	80 bd       	out	0x20, r24	; 32
 29c:	08 95       	ret

0000029e <USART_Transmit>:
 29e:	5d 9b       	sbis	0x0b, 5	; 11
 2a0:	fe cf       	rjmp	.-4      	; 0x29e <USART_Transmit>
 2a2:	8c b9       	out	0x0c, r24	; 12
 2a4:	08 95       	ret

000002a6 <USART_Transmit_Char>:

int USART_Transmit_Char(char c, FILE *stream)
{
 2a6:	cf 93       	push	r28
 2a8:	c8 2f       	mov	r28, r24
	if (c == '\n')
 2aa:	8a 30       	cpi	r24, 0x0A	; 10
 2ac:	19 f4       	brne	.+6      	; 0x2b4 <USART_Transmit_Char+0xe>
	{
		USART_Transmit('\r');
 2ae:	8d e0       	ldi	r24, 0x0D	; 13
 2b0:	0e 94 4f 01 	call	0x29e	; 0x29e <USART_Transmit>
	}
	USART_Transmit(c);
 2b4:	8c 2f       	mov	r24, r28
 2b6:	0e 94 4f 01 	call	0x29e	; 0x29e <USART_Transmit>
	return 0;
}
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	cf 91       	pop	r28
 2c0:	08 95       	ret

000002c2 <USART_Receive_Char>:

int USART_Receive_Char(FILE *stream)
{
/* Wait until data is received */
	while (!(UCSR0A & (1 << RXC0)));
 2c2:	5f 9b       	sbis	0x0b, 7	; 11
 2c4:	fe cf       	rjmp	.-4      	; 0x2c2 <USART_Receive_Char>
	return UDR0;
 2c6:	8c b1       	in	r24, 0x0c	; 12
}
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	08 95       	ret

000002cc <do_rand>:
 2cc:	8f 92       	push	r8
 2ce:	9f 92       	push	r9
 2d0:	af 92       	push	r10
 2d2:	bf 92       	push	r11
 2d4:	cf 92       	push	r12
 2d6:	df 92       	push	r13
 2d8:	ef 92       	push	r14
 2da:	ff 92       	push	r15
 2dc:	cf 93       	push	r28
 2de:	df 93       	push	r29
 2e0:	ec 01       	movw	r28, r24
 2e2:	68 81       	ld	r22, Y
 2e4:	79 81       	ldd	r23, Y+1	; 0x01
 2e6:	8a 81       	ldd	r24, Y+2	; 0x02
 2e8:	9b 81       	ldd	r25, Y+3	; 0x03
 2ea:	61 15       	cp	r22, r1
 2ec:	71 05       	cpc	r23, r1
 2ee:	81 05       	cpc	r24, r1
 2f0:	91 05       	cpc	r25, r1
 2f2:	21 f4       	brne	.+8      	; 0x2fc <do_rand+0x30>
 2f4:	64 e2       	ldi	r22, 0x24	; 36
 2f6:	79 ed       	ldi	r23, 0xD9	; 217
 2f8:	8b e5       	ldi	r24, 0x5B	; 91
 2fa:	97 e0       	ldi	r25, 0x07	; 7
 2fc:	2d e1       	ldi	r18, 0x1D	; 29
 2fe:	33 ef       	ldi	r19, 0xF3	; 243
 300:	41 e0       	ldi	r20, 0x01	; 1
 302:	50 e0       	ldi	r21, 0x00	; 0
 304:	0e 94 28 06 	call	0xc50	; 0xc50 <__divmodsi4>
 308:	49 01       	movw	r8, r18
 30a:	5a 01       	movw	r10, r20
 30c:	9b 01       	movw	r18, r22
 30e:	ac 01       	movw	r20, r24
 310:	a7 ea       	ldi	r26, 0xA7	; 167
 312:	b1 e4       	ldi	r27, 0x41	; 65
 314:	0e 94 47 06 	call	0xc8e	; 0xc8e <__muluhisi3>
 318:	6b 01       	movw	r12, r22
 31a:	7c 01       	movw	r14, r24
 31c:	ac ee       	ldi	r26, 0xEC	; 236
 31e:	b4 ef       	ldi	r27, 0xF4	; 244
 320:	a5 01       	movw	r20, r10
 322:	94 01       	movw	r18, r8
 324:	0e 94 55 06 	call	0xcaa	; 0xcaa <__mulohisi3>
 328:	dc 01       	movw	r26, r24
 32a:	cb 01       	movw	r24, r22
 32c:	8c 0d       	add	r24, r12
 32e:	9d 1d       	adc	r25, r13
 330:	ae 1d       	adc	r26, r14
 332:	bf 1d       	adc	r27, r15
 334:	b7 ff       	sbrs	r27, 7
 336:	03 c0       	rjmp	.+6      	; 0x33e <do_rand+0x72>
 338:	01 97       	sbiw	r24, 0x01	; 1
 33a:	a1 09       	sbc	r26, r1
 33c:	b0 48       	sbci	r27, 0x80	; 128
 33e:	88 83       	st	Y, r24
 340:	99 83       	std	Y+1, r25	; 0x01
 342:	aa 83       	std	Y+2, r26	; 0x02
 344:	bb 83       	std	Y+3, r27	; 0x03
 346:	9f 77       	andi	r25, 0x7F	; 127
 348:	df 91       	pop	r29
 34a:	cf 91       	pop	r28
 34c:	ff 90       	pop	r15
 34e:	ef 90       	pop	r14
 350:	df 90       	pop	r13
 352:	cf 90       	pop	r12
 354:	bf 90       	pop	r11
 356:	af 90       	pop	r10
 358:	9f 90       	pop	r9
 35a:	8f 90       	pop	r8
 35c:	08 95       	ret

0000035e <rand_r>:
 35e:	0e 94 66 01 	call	0x2cc	; 0x2cc <do_rand>
 362:	08 95       	ret

00000364 <rand>:
 364:	80 e0       	ldi	r24, 0x00	; 0
 366:	91 e0       	ldi	r25, 0x01	; 1
 368:	0e 94 66 01 	call	0x2cc	; 0x2cc <do_rand>
 36c:	08 95       	ret

0000036e <srand>:
 36e:	a0 e0       	ldi	r26, 0x00	; 0
 370:	b0 e0       	ldi	r27, 0x00	; 0
 372:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 376:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 37a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 37e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 382:	08 95       	ret

00000384 <fdevopen>:
 384:	0f 93       	push	r16
 386:	1f 93       	push	r17
 388:	cf 93       	push	r28
 38a:	df 93       	push	r29
 38c:	00 97       	sbiw	r24, 0x00	; 0
 38e:	31 f4       	brne	.+12     	; 0x39c <fdevopen+0x18>
 390:	61 15       	cp	r22, r1
 392:	71 05       	cpc	r23, r1
 394:	19 f4       	brne	.+6      	; 0x39c <fdevopen+0x18>
 396:	80 e0       	ldi	r24, 0x00	; 0
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	3a c0       	rjmp	.+116    	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 39c:	8b 01       	movw	r16, r22
 39e:	ec 01       	movw	r28, r24
 3a0:	6e e0       	ldi	r22, 0x0E	; 14
 3a2:	70 e0       	ldi	r23, 0x00	; 0
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	0e 94 34 04 	call	0x868	; 0x868 <calloc>
 3ac:	fc 01       	movw	r30, r24
 3ae:	89 2b       	or	r24, r25
 3b0:	91 f3       	breq	.-28     	; 0x396 <fdevopen+0x12>
 3b2:	80 e8       	ldi	r24, 0x80	; 128
 3b4:	83 83       	std	Z+3, r24	; 0x03
 3b6:	01 15       	cp	r16, r1
 3b8:	11 05       	cpc	r17, r1
 3ba:	71 f0       	breq	.+28     	; 0x3d8 <fdevopen+0x54>
 3bc:	13 87       	std	Z+11, r17	; 0x0b
 3be:	02 87       	std	Z+10, r16	; 0x0a
 3c0:	81 e8       	ldi	r24, 0x81	; 129
 3c2:	83 83       	std	Z+3, r24	; 0x03
 3c4:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <__data_end>
 3c8:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <__data_end+0x1>
 3cc:	89 2b       	or	r24, r25
 3ce:	21 f4       	brne	.+8      	; 0x3d8 <fdevopen+0x54>
 3d0:	f0 93 3d 02 	sts	0x023D, r31	; 0x80023d <__data_end+0x1>
 3d4:	e0 93 3c 02 	sts	0x023C, r30	; 0x80023c <__data_end>
 3d8:	20 97       	sbiw	r28, 0x00	; 0
 3da:	c9 f0       	breq	.+50     	; 0x40e <__DATA_REGION_LENGTH__+0xe>
 3dc:	d1 87       	std	Z+9, r29	; 0x09
 3de:	c0 87       	std	Z+8, r28	; 0x08
 3e0:	83 81       	ldd	r24, Z+3	; 0x03
 3e2:	82 60       	ori	r24, 0x02	; 2
 3e4:	83 83       	std	Z+3, r24	; 0x03
 3e6:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <__data_end+0x2>
 3ea:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <__data_end+0x3>
 3ee:	89 2b       	or	r24, r25
 3f0:	71 f4       	brne	.+28     	; 0x40e <__DATA_REGION_LENGTH__+0xe>
 3f2:	f0 93 3f 02 	sts	0x023F, r31	; 0x80023f <__data_end+0x3>
 3f6:	e0 93 3e 02 	sts	0x023E, r30	; 0x80023e <__data_end+0x2>
 3fa:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <__data_end+0x4>
 3fe:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <__data_end+0x5>
 402:	89 2b       	or	r24, r25
 404:	21 f4       	brne	.+8      	; 0x40e <__DATA_REGION_LENGTH__+0xe>
 406:	f0 93 41 02 	sts	0x0241, r31	; 0x800241 <__data_end+0x5>
 40a:	e0 93 40 02 	sts	0x0240, r30	; 0x800240 <__data_end+0x4>
 40e:	cf 01       	movw	r24, r30
 410:	df 91       	pop	r29
 412:	cf 91       	pop	r28
 414:	1f 91       	pop	r17
 416:	0f 91       	pop	r16
 418:	08 95       	ret

0000041a <printf>:
 41a:	a0 e0       	ldi	r26, 0x00	; 0
 41c:	b0 e0       	ldi	r27, 0x00	; 0
 41e:	e3 e1       	ldi	r30, 0x13	; 19
 420:	f2 e0       	ldi	r31, 0x02	; 2
 422:	0c 94 6a 06 	jmp	0xcd4	; 0xcd4 <__prologue_saves__+0x20>
 426:	ae 01       	movw	r20, r28
 428:	4b 5f       	subi	r20, 0xFB	; 251
 42a:	5f 4f       	sbci	r21, 0xFF	; 255
 42c:	fa 01       	movw	r30, r20
 42e:	61 91       	ld	r22, Z+
 430:	71 91       	ld	r23, Z+
 432:	af 01       	movw	r20, r30
 434:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <__data_end+0x2>
 438:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <__data_end+0x3>
 43c:	0e 94 53 02 	call	0x4a6	; 0x4a6 <vfprintf>
 440:	e2 e0       	ldi	r30, 0x02	; 2
 442:	0c 94 86 06 	jmp	0xd0c	; 0xd0c <__epilogue_restores__+0x20>

00000446 <puts>:
 446:	0f 93       	push	r16
 448:	1f 93       	push	r17
 44a:	cf 93       	push	r28
 44c:	df 93       	push	r29
 44e:	e0 91 3e 02 	lds	r30, 0x023E	; 0x80023e <__data_end+0x2>
 452:	f0 91 3f 02 	lds	r31, 0x023F	; 0x80023f <__data_end+0x3>
 456:	23 81       	ldd	r18, Z+3	; 0x03
 458:	21 ff       	sbrs	r18, 1
 45a:	1b c0       	rjmp	.+54     	; 0x492 <puts+0x4c>
 45c:	8c 01       	movw	r16, r24
 45e:	d0 e0       	ldi	r29, 0x00	; 0
 460:	c0 e0       	ldi	r28, 0x00	; 0
 462:	f8 01       	movw	r30, r16
 464:	81 91       	ld	r24, Z+
 466:	8f 01       	movw	r16, r30
 468:	60 91 3e 02 	lds	r22, 0x023E	; 0x80023e <__data_end+0x2>
 46c:	70 91 3f 02 	lds	r23, 0x023F	; 0x80023f <__data_end+0x3>
 470:	db 01       	movw	r26, r22
 472:	18 96       	adiw	r26, 0x08	; 8
 474:	ed 91       	ld	r30, X+
 476:	fc 91       	ld	r31, X
 478:	19 97       	sbiw	r26, 0x09	; 9
 47a:	88 23       	and	r24, r24
 47c:	31 f0       	breq	.+12     	; 0x48a <puts+0x44>
 47e:	09 95       	icall
 480:	89 2b       	or	r24, r25
 482:	79 f3       	breq	.-34     	; 0x462 <puts+0x1c>
 484:	df ef       	ldi	r29, 0xFF	; 255
 486:	cf ef       	ldi	r28, 0xFF	; 255
 488:	ec cf       	rjmp	.-40     	; 0x462 <puts+0x1c>
 48a:	8a e0       	ldi	r24, 0x0A	; 10
 48c:	09 95       	icall
 48e:	89 2b       	or	r24, r25
 490:	19 f0       	breq	.+6      	; 0x498 <puts+0x52>
 492:	8f ef       	ldi	r24, 0xFF	; 255
 494:	9f ef       	ldi	r25, 0xFF	; 255
 496:	02 c0       	rjmp	.+4      	; 0x49c <puts+0x56>
 498:	8d 2f       	mov	r24, r29
 49a:	9c 2f       	mov	r25, r28
 49c:	df 91       	pop	r29
 49e:	cf 91       	pop	r28
 4a0:	1f 91       	pop	r17
 4a2:	0f 91       	pop	r16
 4a4:	08 95       	ret

000004a6 <vfprintf>:
 4a6:	ab e0       	ldi	r26, 0x0B	; 11
 4a8:	b0 e0       	ldi	r27, 0x00	; 0
 4aa:	e9 e5       	ldi	r30, 0x59	; 89
 4ac:	f2 e0       	ldi	r31, 0x02	; 2
 4ae:	0c 94 5a 06 	jmp	0xcb4	; 0xcb4 <__prologue_saves__>
 4b2:	6c 01       	movw	r12, r24
 4b4:	7b 01       	movw	r14, r22
 4b6:	8a 01       	movw	r16, r20
 4b8:	fc 01       	movw	r30, r24
 4ba:	17 82       	std	Z+7, r1	; 0x07
 4bc:	16 82       	std	Z+6, r1	; 0x06
 4be:	83 81       	ldd	r24, Z+3	; 0x03
 4c0:	81 ff       	sbrs	r24, 1
 4c2:	cc c1       	rjmp	.+920    	; 0x85c <__stack+0x35d>
 4c4:	ce 01       	movw	r24, r28
 4c6:	01 96       	adiw	r24, 0x01	; 1
 4c8:	3c 01       	movw	r6, r24
 4ca:	f6 01       	movw	r30, r12
 4cc:	93 81       	ldd	r25, Z+3	; 0x03
 4ce:	f7 01       	movw	r30, r14
 4d0:	93 fd       	sbrc	r25, 3
 4d2:	85 91       	lpm	r24, Z+
 4d4:	93 ff       	sbrs	r25, 3
 4d6:	81 91       	ld	r24, Z+
 4d8:	7f 01       	movw	r14, r30
 4da:	88 23       	and	r24, r24
 4dc:	09 f4       	brne	.+2      	; 0x4e0 <vfprintf+0x3a>
 4de:	ba c1       	rjmp	.+884    	; 0x854 <__stack+0x355>
 4e0:	85 32       	cpi	r24, 0x25	; 37
 4e2:	39 f4       	brne	.+14     	; 0x4f2 <vfprintf+0x4c>
 4e4:	93 fd       	sbrc	r25, 3
 4e6:	85 91       	lpm	r24, Z+
 4e8:	93 ff       	sbrs	r25, 3
 4ea:	81 91       	ld	r24, Z+
 4ec:	7f 01       	movw	r14, r30
 4ee:	85 32       	cpi	r24, 0x25	; 37
 4f0:	29 f4       	brne	.+10     	; 0x4fc <vfprintf+0x56>
 4f2:	b6 01       	movw	r22, r12
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	0e 94 8e 05 	call	0xb1c	; 0xb1c <fputc>
 4fa:	e7 cf       	rjmp	.-50     	; 0x4ca <vfprintf+0x24>
 4fc:	91 2c       	mov	r9, r1
 4fe:	21 2c       	mov	r2, r1
 500:	31 2c       	mov	r3, r1
 502:	ff e1       	ldi	r31, 0x1F	; 31
 504:	f3 15       	cp	r31, r3
 506:	d8 f0       	brcs	.+54     	; 0x53e <__stack+0x3f>
 508:	8b 32       	cpi	r24, 0x2B	; 43
 50a:	79 f0       	breq	.+30     	; 0x52a <__stack+0x2b>
 50c:	38 f4       	brcc	.+14     	; 0x51c <__stack+0x1d>
 50e:	80 32       	cpi	r24, 0x20	; 32
 510:	79 f0       	breq	.+30     	; 0x530 <__stack+0x31>
 512:	83 32       	cpi	r24, 0x23	; 35
 514:	a1 f4       	brne	.+40     	; 0x53e <__stack+0x3f>
 516:	23 2d       	mov	r18, r3
 518:	20 61       	ori	r18, 0x10	; 16
 51a:	1d c0       	rjmp	.+58     	; 0x556 <__stack+0x57>
 51c:	8d 32       	cpi	r24, 0x2D	; 45
 51e:	61 f0       	breq	.+24     	; 0x538 <__stack+0x39>
 520:	80 33       	cpi	r24, 0x30	; 48
 522:	69 f4       	brne	.+26     	; 0x53e <__stack+0x3f>
 524:	23 2d       	mov	r18, r3
 526:	21 60       	ori	r18, 0x01	; 1
 528:	16 c0       	rjmp	.+44     	; 0x556 <__stack+0x57>
 52a:	83 2d       	mov	r24, r3
 52c:	82 60       	ori	r24, 0x02	; 2
 52e:	38 2e       	mov	r3, r24
 530:	e3 2d       	mov	r30, r3
 532:	e4 60       	ori	r30, 0x04	; 4
 534:	3e 2e       	mov	r3, r30
 536:	2a c0       	rjmp	.+84     	; 0x58c <__stack+0x8d>
 538:	f3 2d       	mov	r31, r3
 53a:	f8 60       	ori	r31, 0x08	; 8
 53c:	1d c0       	rjmp	.+58     	; 0x578 <__stack+0x79>
 53e:	37 fc       	sbrc	r3, 7
 540:	2d c0       	rjmp	.+90     	; 0x59c <__stack+0x9d>
 542:	20 ed       	ldi	r18, 0xD0	; 208
 544:	28 0f       	add	r18, r24
 546:	2a 30       	cpi	r18, 0x0A	; 10
 548:	40 f0       	brcs	.+16     	; 0x55a <__stack+0x5b>
 54a:	8e 32       	cpi	r24, 0x2E	; 46
 54c:	b9 f4       	brne	.+46     	; 0x57c <__stack+0x7d>
 54e:	36 fc       	sbrc	r3, 6
 550:	81 c1       	rjmp	.+770    	; 0x854 <__stack+0x355>
 552:	23 2d       	mov	r18, r3
 554:	20 64       	ori	r18, 0x40	; 64
 556:	32 2e       	mov	r3, r18
 558:	19 c0       	rjmp	.+50     	; 0x58c <__stack+0x8d>
 55a:	36 fe       	sbrs	r3, 6
 55c:	06 c0       	rjmp	.+12     	; 0x56a <__stack+0x6b>
 55e:	8a e0       	ldi	r24, 0x0A	; 10
 560:	98 9e       	mul	r9, r24
 562:	20 0d       	add	r18, r0
 564:	11 24       	eor	r1, r1
 566:	92 2e       	mov	r9, r18
 568:	11 c0       	rjmp	.+34     	; 0x58c <__stack+0x8d>
 56a:	ea e0       	ldi	r30, 0x0A	; 10
 56c:	2e 9e       	mul	r2, r30
 56e:	20 0d       	add	r18, r0
 570:	11 24       	eor	r1, r1
 572:	22 2e       	mov	r2, r18
 574:	f3 2d       	mov	r31, r3
 576:	f0 62       	ori	r31, 0x20	; 32
 578:	3f 2e       	mov	r3, r31
 57a:	08 c0       	rjmp	.+16     	; 0x58c <__stack+0x8d>
 57c:	8c 36       	cpi	r24, 0x6C	; 108
 57e:	21 f4       	brne	.+8      	; 0x588 <__stack+0x89>
 580:	83 2d       	mov	r24, r3
 582:	80 68       	ori	r24, 0x80	; 128
 584:	38 2e       	mov	r3, r24
 586:	02 c0       	rjmp	.+4      	; 0x58c <__stack+0x8d>
 588:	88 36       	cpi	r24, 0x68	; 104
 58a:	41 f4       	brne	.+16     	; 0x59c <__stack+0x9d>
 58c:	f7 01       	movw	r30, r14
 58e:	93 fd       	sbrc	r25, 3
 590:	85 91       	lpm	r24, Z+
 592:	93 ff       	sbrs	r25, 3
 594:	81 91       	ld	r24, Z+
 596:	7f 01       	movw	r14, r30
 598:	81 11       	cpse	r24, r1
 59a:	b3 cf       	rjmp	.-154    	; 0x502 <__stack+0x3>
 59c:	98 2f       	mov	r25, r24
 59e:	9f 7d       	andi	r25, 0xDF	; 223
 5a0:	95 54       	subi	r25, 0x45	; 69
 5a2:	93 30       	cpi	r25, 0x03	; 3
 5a4:	28 f4       	brcc	.+10     	; 0x5b0 <__stack+0xb1>
 5a6:	0c 5f       	subi	r16, 0xFC	; 252
 5a8:	1f 4f       	sbci	r17, 0xFF	; 255
 5aa:	9f e3       	ldi	r25, 0x3F	; 63
 5ac:	99 83       	std	Y+1, r25	; 0x01
 5ae:	0d c0       	rjmp	.+26     	; 0x5ca <__stack+0xcb>
 5b0:	83 36       	cpi	r24, 0x63	; 99
 5b2:	31 f0       	breq	.+12     	; 0x5c0 <__stack+0xc1>
 5b4:	83 37       	cpi	r24, 0x73	; 115
 5b6:	71 f0       	breq	.+28     	; 0x5d4 <__stack+0xd5>
 5b8:	83 35       	cpi	r24, 0x53	; 83
 5ba:	09 f0       	breq	.+2      	; 0x5be <__stack+0xbf>
 5bc:	59 c0       	rjmp	.+178    	; 0x670 <__stack+0x171>
 5be:	21 c0       	rjmp	.+66     	; 0x602 <__stack+0x103>
 5c0:	f8 01       	movw	r30, r16
 5c2:	80 81       	ld	r24, Z
 5c4:	89 83       	std	Y+1, r24	; 0x01
 5c6:	0e 5f       	subi	r16, 0xFE	; 254
 5c8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ca:	88 24       	eor	r8, r8
 5cc:	83 94       	inc	r8
 5ce:	91 2c       	mov	r9, r1
 5d0:	53 01       	movw	r10, r6
 5d2:	13 c0       	rjmp	.+38     	; 0x5fa <__stack+0xfb>
 5d4:	28 01       	movw	r4, r16
 5d6:	f2 e0       	ldi	r31, 0x02	; 2
 5d8:	4f 0e       	add	r4, r31
 5da:	51 1c       	adc	r5, r1
 5dc:	f8 01       	movw	r30, r16
 5de:	a0 80       	ld	r10, Z
 5e0:	b1 80       	ldd	r11, Z+1	; 0x01
 5e2:	36 fe       	sbrs	r3, 6
 5e4:	03 c0       	rjmp	.+6      	; 0x5ec <__stack+0xed>
 5e6:	69 2d       	mov	r22, r9
 5e8:	70 e0       	ldi	r23, 0x00	; 0
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <__stack+0xf1>
 5ec:	6f ef       	ldi	r22, 0xFF	; 255
 5ee:	7f ef       	ldi	r23, 0xFF	; 255
 5f0:	c5 01       	movw	r24, r10
 5f2:	0e 94 83 05 	call	0xb06	; 0xb06 <strnlen>
 5f6:	4c 01       	movw	r8, r24
 5f8:	82 01       	movw	r16, r4
 5fa:	f3 2d       	mov	r31, r3
 5fc:	ff 77       	andi	r31, 0x7F	; 127
 5fe:	3f 2e       	mov	r3, r31
 600:	16 c0       	rjmp	.+44     	; 0x62e <__stack+0x12f>
 602:	28 01       	movw	r4, r16
 604:	22 e0       	ldi	r18, 0x02	; 2
 606:	42 0e       	add	r4, r18
 608:	51 1c       	adc	r5, r1
 60a:	f8 01       	movw	r30, r16
 60c:	a0 80       	ld	r10, Z
 60e:	b1 80       	ldd	r11, Z+1	; 0x01
 610:	36 fe       	sbrs	r3, 6
 612:	03 c0       	rjmp	.+6      	; 0x61a <__stack+0x11b>
 614:	69 2d       	mov	r22, r9
 616:	70 e0       	ldi	r23, 0x00	; 0
 618:	02 c0       	rjmp	.+4      	; 0x61e <__stack+0x11f>
 61a:	6f ef       	ldi	r22, 0xFF	; 255
 61c:	7f ef       	ldi	r23, 0xFF	; 255
 61e:	c5 01       	movw	r24, r10
 620:	0e 94 71 05 	call	0xae2	; 0xae2 <strnlen_P>
 624:	4c 01       	movw	r8, r24
 626:	f3 2d       	mov	r31, r3
 628:	f0 68       	ori	r31, 0x80	; 128
 62a:	3f 2e       	mov	r3, r31
 62c:	82 01       	movw	r16, r4
 62e:	33 fc       	sbrc	r3, 3
 630:	1b c0       	rjmp	.+54     	; 0x668 <__stack+0x169>
 632:	82 2d       	mov	r24, r2
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	88 16       	cp	r8, r24
 638:	99 06       	cpc	r9, r25
 63a:	b0 f4       	brcc	.+44     	; 0x668 <__stack+0x169>
 63c:	b6 01       	movw	r22, r12
 63e:	80 e2       	ldi	r24, 0x20	; 32
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	0e 94 8e 05 	call	0xb1c	; 0xb1c <fputc>
 646:	2a 94       	dec	r2
 648:	f4 cf       	rjmp	.-24     	; 0x632 <__stack+0x133>
 64a:	f5 01       	movw	r30, r10
 64c:	37 fc       	sbrc	r3, 7
 64e:	85 91       	lpm	r24, Z+
 650:	37 fe       	sbrs	r3, 7
 652:	81 91       	ld	r24, Z+
 654:	5f 01       	movw	r10, r30
 656:	b6 01       	movw	r22, r12
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	0e 94 8e 05 	call	0xb1c	; 0xb1c <fputc>
 65e:	21 10       	cpse	r2, r1
 660:	2a 94       	dec	r2
 662:	21 e0       	ldi	r18, 0x01	; 1
 664:	82 1a       	sub	r8, r18
 666:	91 08       	sbc	r9, r1
 668:	81 14       	cp	r8, r1
 66a:	91 04       	cpc	r9, r1
 66c:	71 f7       	brne	.-36     	; 0x64a <__stack+0x14b>
 66e:	e8 c0       	rjmp	.+464    	; 0x840 <__stack+0x341>
 670:	84 36       	cpi	r24, 0x64	; 100
 672:	11 f0       	breq	.+4      	; 0x678 <__stack+0x179>
 674:	89 36       	cpi	r24, 0x69	; 105
 676:	41 f5       	brne	.+80     	; 0x6c8 <__stack+0x1c9>
 678:	f8 01       	movw	r30, r16
 67a:	37 fe       	sbrs	r3, 7
 67c:	07 c0       	rjmp	.+14     	; 0x68c <__stack+0x18d>
 67e:	60 81       	ld	r22, Z
 680:	71 81       	ldd	r23, Z+1	; 0x01
 682:	82 81       	ldd	r24, Z+2	; 0x02
 684:	93 81       	ldd	r25, Z+3	; 0x03
 686:	0c 5f       	subi	r16, 0xFC	; 252
 688:	1f 4f       	sbci	r17, 0xFF	; 255
 68a:	08 c0       	rjmp	.+16     	; 0x69c <__stack+0x19d>
 68c:	60 81       	ld	r22, Z
 68e:	71 81       	ldd	r23, Z+1	; 0x01
 690:	07 2e       	mov	r0, r23
 692:	00 0c       	add	r0, r0
 694:	88 0b       	sbc	r24, r24
 696:	99 0b       	sbc	r25, r25
 698:	0e 5f       	subi	r16, 0xFE	; 254
 69a:	1f 4f       	sbci	r17, 0xFF	; 255
 69c:	f3 2d       	mov	r31, r3
 69e:	ff 76       	andi	r31, 0x6F	; 111
 6a0:	3f 2e       	mov	r3, r31
 6a2:	97 ff       	sbrs	r25, 7
 6a4:	09 c0       	rjmp	.+18     	; 0x6b8 <__stack+0x1b9>
 6a6:	90 95       	com	r25
 6a8:	80 95       	com	r24
 6aa:	70 95       	com	r23
 6ac:	61 95       	neg	r22
 6ae:	7f 4f       	sbci	r23, 0xFF	; 255
 6b0:	8f 4f       	sbci	r24, 0xFF	; 255
 6b2:	9f 4f       	sbci	r25, 0xFF	; 255
 6b4:	f0 68       	ori	r31, 0x80	; 128
 6b6:	3f 2e       	mov	r3, r31
 6b8:	2a e0       	ldi	r18, 0x0A	; 10
 6ba:	30 e0       	ldi	r19, 0x00	; 0
 6bc:	a3 01       	movw	r20, r6
 6be:	0e 94 ca 05 	call	0xb94	; 0xb94 <__ultoa_invert>
 6c2:	88 2e       	mov	r8, r24
 6c4:	86 18       	sub	r8, r6
 6c6:	45 c0       	rjmp	.+138    	; 0x752 <__stack+0x253>
 6c8:	85 37       	cpi	r24, 0x75	; 117
 6ca:	31 f4       	brne	.+12     	; 0x6d8 <__stack+0x1d9>
 6cc:	23 2d       	mov	r18, r3
 6ce:	2f 7e       	andi	r18, 0xEF	; 239
 6d0:	b2 2e       	mov	r11, r18
 6d2:	2a e0       	ldi	r18, 0x0A	; 10
 6d4:	30 e0       	ldi	r19, 0x00	; 0
 6d6:	25 c0       	rjmp	.+74     	; 0x722 <__stack+0x223>
 6d8:	93 2d       	mov	r25, r3
 6da:	99 7f       	andi	r25, 0xF9	; 249
 6dc:	b9 2e       	mov	r11, r25
 6de:	8f 36       	cpi	r24, 0x6F	; 111
 6e0:	c1 f0       	breq	.+48     	; 0x712 <__stack+0x213>
 6e2:	18 f4       	brcc	.+6      	; 0x6ea <__stack+0x1eb>
 6e4:	88 35       	cpi	r24, 0x58	; 88
 6e6:	79 f0       	breq	.+30     	; 0x706 <__stack+0x207>
 6e8:	b5 c0       	rjmp	.+362    	; 0x854 <__stack+0x355>
 6ea:	80 37       	cpi	r24, 0x70	; 112
 6ec:	19 f0       	breq	.+6      	; 0x6f4 <__stack+0x1f5>
 6ee:	88 37       	cpi	r24, 0x78	; 120
 6f0:	21 f0       	breq	.+8      	; 0x6fa <__stack+0x1fb>
 6f2:	b0 c0       	rjmp	.+352    	; 0x854 <__stack+0x355>
 6f4:	e9 2f       	mov	r30, r25
 6f6:	e0 61       	ori	r30, 0x10	; 16
 6f8:	be 2e       	mov	r11, r30
 6fa:	b4 fe       	sbrs	r11, 4
 6fc:	0d c0       	rjmp	.+26     	; 0x718 <__stack+0x219>
 6fe:	fb 2d       	mov	r31, r11
 700:	f4 60       	ori	r31, 0x04	; 4
 702:	bf 2e       	mov	r11, r31
 704:	09 c0       	rjmp	.+18     	; 0x718 <__stack+0x219>
 706:	34 fe       	sbrs	r3, 4
 708:	0a c0       	rjmp	.+20     	; 0x71e <__stack+0x21f>
 70a:	29 2f       	mov	r18, r25
 70c:	26 60       	ori	r18, 0x06	; 6
 70e:	b2 2e       	mov	r11, r18
 710:	06 c0       	rjmp	.+12     	; 0x71e <__stack+0x21f>
 712:	28 e0       	ldi	r18, 0x08	; 8
 714:	30 e0       	ldi	r19, 0x00	; 0
 716:	05 c0       	rjmp	.+10     	; 0x722 <__stack+0x223>
 718:	20 e1       	ldi	r18, 0x10	; 16
 71a:	30 e0       	ldi	r19, 0x00	; 0
 71c:	02 c0       	rjmp	.+4      	; 0x722 <__stack+0x223>
 71e:	20 e1       	ldi	r18, 0x10	; 16
 720:	32 e0       	ldi	r19, 0x02	; 2
 722:	f8 01       	movw	r30, r16
 724:	b7 fe       	sbrs	r11, 7
 726:	07 c0       	rjmp	.+14     	; 0x736 <__stack+0x237>
 728:	60 81       	ld	r22, Z
 72a:	71 81       	ldd	r23, Z+1	; 0x01
 72c:	82 81       	ldd	r24, Z+2	; 0x02
 72e:	93 81       	ldd	r25, Z+3	; 0x03
 730:	0c 5f       	subi	r16, 0xFC	; 252
 732:	1f 4f       	sbci	r17, 0xFF	; 255
 734:	06 c0       	rjmp	.+12     	; 0x742 <__stack+0x243>
 736:	60 81       	ld	r22, Z
 738:	71 81       	ldd	r23, Z+1	; 0x01
 73a:	80 e0       	ldi	r24, 0x00	; 0
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0e 5f       	subi	r16, 0xFE	; 254
 740:	1f 4f       	sbci	r17, 0xFF	; 255
 742:	a3 01       	movw	r20, r6
 744:	0e 94 ca 05 	call	0xb94	; 0xb94 <__ultoa_invert>
 748:	88 2e       	mov	r8, r24
 74a:	86 18       	sub	r8, r6
 74c:	fb 2d       	mov	r31, r11
 74e:	ff 77       	andi	r31, 0x7F	; 127
 750:	3f 2e       	mov	r3, r31
 752:	36 fe       	sbrs	r3, 6
 754:	0d c0       	rjmp	.+26     	; 0x770 <__stack+0x271>
 756:	23 2d       	mov	r18, r3
 758:	2e 7f       	andi	r18, 0xFE	; 254
 75a:	a2 2e       	mov	r10, r18
 75c:	89 14       	cp	r8, r9
 75e:	58 f4       	brcc	.+22     	; 0x776 <__stack+0x277>
 760:	34 fe       	sbrs	r3, 4
 762:	0b c0       	rjmp	.+22     	; 0x77a <__stack+0x27b>
 764:	32 fc       	sbrc	r3, 2
 766:	09 c0       	rjmp	.+18     	; 0x77a <__stack+0x27b>
 768:	83 2d       	mov	r24, r3
 76a:	8e 7e       	andi	r24, 0xEE	; 238
 76c:	a8 2e       	mov	r10, r24
 76e:	05 c0       	rjmp	.+10     	; 0x77a <__stack+0x27b>
 770:	b8 2c       	mov	r11, r8
 772:	a3 2c       	mov	r10, r3
 774:	03 c0       	rjmp	.+6      	; 0x77c <__stack+0x27d>
 776:	b8 2c       	mov	r11, r8
 778:	01 c0       	rjmp	.+2      	; 0x77c <__stack+0x27d>
 77a:	b9 2c       	mov	r11, r9
 77c:	a4 fe       	sbrs	r10, 4
 77e:	0f c0       	rjmp	.+30     	; 0x79e <__stack+0x29f>
 780:	fe 01       	movw	r30, r28
 782:	e8 0d       	add	r30, r8
 784:	f1 1d       	adc	r31, r1
 786:	80 81       	ld	r24, Z
 788:	80 33       	cpi	r24, 0x30	; 48
 78a:	21 f4       	brne	.+8      	; 0x794 <__stack+0x295>
 78c:	9a 2d       	mov	r25, r10
 78e:	99 7e       	andi	r25, 0xE9	; 233
 790:	a9 2e       	mov	r10, r25
 792:	09 c0       	rjmp	.+18     	; 0x7a6 <__stack+0x2a7>
 794:	a2 fe       	sbrs	r10, 2
 796:	06 c0       	rjmp	.+12     	; 0x7a4 <__stack+0x2a5>
 798:	b3 94       	inc	r11
 79a:	b3 94       	inc	r11
 79c:	04 c0       	rjmp	.+8      	; 0x7a6 <__stack+0x2a7>
 79e:	8a 2d       	mov	r24, r10
 7a0:	86 78       	andi	r24, 0x86	; 134
 7a2:	09 f0       	breq	.+2      	; 0x7a6 <__stack+0x2a7>
 7a4:	b3 94       	inc	r11
 7a6:	a3 fc       	sbrc	r10, 3
 7a8:	11 c0       	rjmp	.+34     	; 0x7cc <__stack+0x2cd>
 7aa:	a0 fe       	sbrs	r10, 0
 7ac:	06 c0       	rjmp	.+12     	; 0x7ba <__stack+0x2bb>
 7ae:	b2 14       	cp	r11, r2
 7b0:	88 f4       	brcc	.+34     	; 0x7d4 <__stack+0x2d5>
 7b2:	28 0c       	add	r2, r8
 7b4:	92 2c       	mov	r9, r2
 7b6:	9b 18       	sub	r9, r11
 7b8:	0e c0       	rjmp	.+28     	; 0x7d6 <__stack+0x2d7>
 7ba:	b2 14       	cp	r11, r2
 7bc:	60 f4       	brcc	.+24     	; 0x7d6 <__stack+0x2d7>
 7be:	b6 01       	movw	r22, r12
 7c0:	80 e2       	ldi	r24, 0x20	; 32
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	0e 94 8e 05 	call	0xb1c	; 0xb1c <fputc>
 7c8:	b3 94       	inc	r11
 7ca:	f7 cf       	rjmp	.-18     	; 0x7ba <__stack+0x2bb>
 7cc:	b2 14       	cp	r11, r2
 7ce:	18 f4       	brcc	.+6      	; 0x7d6 <__stack+0x2d7>
 7d0:	2b 18       	sub	r2, r11
 7d2:	02 c0       	rjmp	.+4      	; 0x7d8 <__stack+0x2d9>
 7d4:	98 2c       	mov	r9, r8
 7d6:	21 2c       	mov	r2, r1
 7d8:	a4 fe       	sbrs	r10, 4
 7da:	10 c0       	rjmp	.+32     	; 0x7fc <__stack+0x2fd>
 7dc:	b6 01       	movw	r22, r12
 7de:	80 e3       	ldi	r24, 0x30	; 48
 7e0:	90 e0       	ldi	r25, 0x00	; 0
 7e2:	0e 94 8e 05 	call	0xb1c	; 0xb1c <fputc>
 7e6:	a2 fe       	sbrs	r10, 2
 7e8:	17 c0       	rjmp	.+46     	; 0x818 <__stack+0x319>
 7ea:	a1 fc       	sbrc	r10, 1
 7ec:	03 c0       	rjmp	.+6      	; 0x7f4 <__stack+0x2f5>
 7ee:	88 e7       	ldi	r24, 0x78	; 120
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <__stack+0x2f9>
 7f4:	88 e5       	ldi	r24, 0x58	; 88
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	b6 01       	movw	r22, r12
 7fa:	0c c0       	rjmp	.+24     	; 0x814 <__stack+0x315>
 7fc:	8a 2d       	mov	r24, r10
 7fe:	86 78       	andi	r24, 0x86	; 134
 800:	59 f0       	breq	.+22     	; 0x818 <__stack+0x319>
 802:	a1 fe       	sbrs	r10, 1
 804:	02 c0       	rjmp	.+4      	; 0x80a <__stack+0x30b>
 806:	8b e2       	ldi	r24, 0x2B	; 43
 808:	01 c0       	rjmp	.+2      	; 0x80c <__stack+0x30d>
 80a:	80 e2       	ldi	r24, 0x20	; 32
 80c:	a7 fc       	sbrc	r10, 7
 80e:	8d e2       	ldi	r24, 0x2D	; 45
 810:	b6 01       	movw	r22, r12
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	0e 94 8e 05 	call	0xb1c	; 0xb1c <fputc>
 818:	89 14       	cp	r8, r9
 81a:	38 f4       	brcc	.+14     	; 0x82a <__stack+0x32b>
 81c:	b6 01       	movw	r22, r12
 81e:	80 e3       	ldi	r24, 0x30	; 48
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	0e 94 8e 05 	call	0xb1c	; 0xb1c <fputc>
 826:	9a 94       	dec	r9
 828:	f7 cf       	rjmp	.-18     	; 0x818 <__stack+0x319>
 82a:	8a 94       	dec	r8
 82c:	f3 01       	movw	r30, r6
 82e:	e8 0d       	add	r30, r8
 830:	f1 1d       	adc	r31, r1
 832:	80 81       	ld	r24, Z
 834:	b6 01       	movw	r22, r12
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	0e 94 8e 05 	call	0xb1c	; 0xb1c <fputc>
 83c:	81 10       	cpse	r8, r1
 83e:	f5 cf       	rjmp	.-22     	; 0x82a <__stack+0x32b>
 840:	22 20       	and	r2, r2
 842:	09 f4       	brne	.+2      	; 0x846 <__stack+0x347>
 844:	42 ce       	rjmp	.-892    	; 0x4ca <vfprintf+0x24>
 846:	b6 01       	movw	r22, r12
 848:	80 e2       	ldi	r24, 0x20	; 32
 84a:	90 e0       	ldi	r25, 0x00	; 0
 84c:	0e 94 8e 05 	call	0xb1c	; 0xb1c <fputc>
 850:	2a 94       	dec	r2
 852:	f6 cf       	rjmp	.-20     	; 0x840 <__stack+0x341>
 854:	f6 01       	movw	r30, r12
 856:	86 81       	ldd	r24, Z+6	; 0x06
 858:	97 81       	ldd	r25, Z+7	; 0x07
 85a:	02 c0       	rjmp	.+4      	; 0x860 <__stack+0x361>
 85c:	8f ef       	ldi	r24, 0xFF	; 255
 85e:	9f ef       	ldi	r25, 0xFF	; 255
 860:	2b 96       	adiw	r28, 0x0b	; 11
 862:	e2 e1       	ldi	r30, 0x12	; 18
 864:	0c 94 76 06 	jmp	0xcec	; 0xcec <__epilogue_restores__>

00000868 <calloc>:
 868:	0f 93       	push	r16
 86a:	1f 93       	push	r17
 86c:	cf 93       	push	r28
 86e:	df 93       	push	r29
 870:	86 9f       	mul	r24, r22
 872:	80 01       	movw	r16, r0
 874:	87 9f       	mul	r24, r23
 876:	10 0d       	add	r17, r0
 878:	96 9f       	mul	r25, r22
 87a:	10 0d       	add	r17, r0
 87c:	11 24       	eor	r1, r1
 87e:	c8 01       	movw	r24, r16
 880:	0e 94 50 04 	call	0x8a0	; 0x8a0 <malloc>
 884:	ec 01       	movw	r28, r24
 886:	00 97       	sbiw	r24, 0x00	; 0
 888:	29 f0       	breq	.+10     	; 0x894 <calloc+0x2c>
 88a:	a8 01       	movw	r20, r16
 88c:	60 e0       	ldi	r22, 0x00	; 0
 88e:	70 e0       	ldi	r23, 0x00	; 0
 890:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <memset>
 894:	ce 01       	movw	r24, r28
 896:	df 91       	pop	r29
 898:	cf 91       	pop	r28
 89a:	1f 91       	pop	r17
 89c:	0f 91       	pop	r16
 89e:	08 95       	ret

000008a0 <malloc>:
 8a0:	0f 93       	push	r16
 8a2:	1f 93       	push	r17
 8a4:	cf 93       	push	r28
 8a6:	df 93       	push	r29
 8a8:	82 30       	cpi	r24, 0x02	; 2
 8aa:	91 05       	cpc	r25, r1
 8ac:	10 f4       	brcc	.+4      	; 0x8b2 <malloc+0x12>
 8ae:	82 e0       	ldi	r24, 0x02	; 2
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	e0 91 44 02 	lds	r30, 0x0244	; 0x800244 <__flp>
 8b6:	f0 91 45 02 	lds	r31, 0x0245	; 0x800245 <__flp+0x1>
 8ba:	20 e0       	ldi	r18, 0x00	; 0
 8bc:	30 e0       	ldi	r19, 0x00	; 0
 8be:	a0 e0       	ldi	r26, 0x00	; 0
 8c0:	b0 e0       	ldi	r27, 0x00	; 0
 8c2:	30 97       	sbiw	r30, 0x00	; 0
 8c4:	19 f1       	breq	.+70     	; 0x90c <malloc+0x6c>
 8c6:	40 81       	ld	r20, Z
 8c8:	51 81       	ldd	r21, Z+1	; 0x01
 8ca:	02 81       	ldd	r16, Z+2	; 0x02
 8cc:	13 81       	ldd	r17, Z+3	; 0x03
 8ce:	48 17       	cp	r20, r24
 8d0:	59 07       	cpc	r21, r25
 8d2:	c8 f0       	brcs	.+50     	; 0x906 <malloc+0x66>
 8d4:	84 17       	cp	r24, r20
 8d6:	95 07       	cpc	r25, r21
 8d8:	69 f4       	brne	.+26     	; 0x8f4 <malloc+0x54>
 8da:	10 97       	sbiw	r26, 0x00	; 0
 8dc:	31 f0       	breq	.+12     	; 0x8ea <malloc+0x4a>
 8de:	12 96       	adiw	r26, 0x02	; 2
 8e0:	0c 93       	st	X, r16
 8e2:	12 97       	sbiw	r26, 0x02	; 2
 8e4:	13 96       	adiw	r26, 0x03	; 3
 8e6:	1c 93       	st	X, r17
 8e8:	27 c0       	rjmp	.+78     	; 0x938 <malloc+0x98>
 8ea:	00 93 44 02 	sts	0x0244, r16	; 0x800244 <__flp>
 8ee:	10 93 45 02 	sts	0x0245, r17	; 0x800245 <__flp+0x1>
 8f2:	22 c0       	rjmp	.+68     	; 0x938 <malloc+0x98>
 8f4:	21 15       	cp	r18, r1
 8f6:	31 05       	cpc	r19, r1
 8f8:	19 f0       	breq	.+6      	; 0x900 <malloc+0x60>
 8fa:	42 17       	cp	r20, r18
 8fc:	53 07       	cpc	r21, r19
 8fe:	18 f4       	brcc	.+6      	; 0x906 <malloc+0x66>
 900:	9a 01       	movw	r18, r20
 902:	bd 01       	movw	r22, r26
 904:	ef 01       	movw	r28, r30
 906:	df 01       	movw	r26, r30
 908:	f8 01       	movw	r30, r16
 90a:	db cf       	rjmp	.-74     	; 0x8c2 <malloc+0x22>
 90c:	21 15       	cp	r18, r1
 90e:	31 05       	cpc	r19, r1
 910:	f9 f0       	breq	.+62     	; 0x950 <malloc+0xb0>
 912:	28 1b       	sub	r18, r24
 914:	39 0b       	sbc	r19, r25
 916:	24 30       	cpi	r18, 0x04	; 4
 918:	31 05       	cpc	r19, r1
 91a:	80 f4       	brcc	.+32     	; 0x93c <malloc+0x9c>
 91c:	8a 81       	ldd	r24, Y+2	; 0x02
 91e:	9b 81       	ldd	r25, Y+3	; 0x03
 920:	61 15       	cp	r22, r1
 922:	71 05       	cpc	r23, r1
 924:	21 f0       	breq	.+8      	; 0x92e <malloc+0x8e>
 926:	fb 01       	movw	r30, r22
 928:	93 83       	std	Z+3, r25	; 0x03
 92a:	82 83       	std	Z+2, r24	; 0x02
 92c:	04 c0       	rjmp	.+8      	; 0x936 <malloc+0x96>
 92e:	90 93 45 02 	sts	0x0245, r25	; 0x800245 <__flp+0x1>
 932:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <__flp>
 936:	fe 01       	movw	r30, r28
 938:	32 96       	adiw	r30, 0x02	; 2
 93a:	44 c0       	rjmp	.+136    	; 0x9c4 <malloc+0x124>
 93c:	fe 01       	movw	r30, r28
 93e:	e2 0f       	add	r30, r18
 940:	f3 1f       	adc	r31, r19
 942:	81 93       	st	Z+, r24
 944:	91 93       	st	Z+, r25
 946:	22 50       	subi	r18, 0x02	; 2
 948:	31 09       	sbc	r19, r1
 94a:	39 83       	std	Y+1, r19	; 0x01
 94c:	28 83       	st	Y, r18
 94e:	3a c0       	rjmp	.+116    	; 0x9c4 <malloc+0x124>
 950:	20 91 42 02 	lds	r18, 0x0242	; 0x800242 <__brkval>
 954:	30 91 43 02 	lds	r19, 0x0243	; 0x800243 <__brkval+0x1>
 958:	23 2b       	or	r18, r19
 95a:	41 f4       	brne	.+16     	; 0x96c <malloc+0xcc>
 95c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 960:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 964:	30 93 43 02 	sts	0x0243, r19	; 0x800243 <__brkval+0x1>
 968:	20 93 42 02 	sts	0x0242, r18	; 0x800242 <__brkval>
 96c:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 970:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 974:	21 15       	cp	r18, r1
 976:	31 05       	cpc	r19, r1
 978:	41 f4       	brne	.+16     	; 0x98a <malloc+0xea>
 97a:	2d b7       	in	r18, 0x3d	; 61
 97c:	3e b7       	in	r19, 0x3e	; 62
 97e:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 982:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 986:	24 1b       	sub	r18, r20
 988:	35 0b       	sbc	r19, r21
 98a:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <__brkval>
 98e:	f0 91 43 02 	lds	r31, 0x0243	; 0x800243 <__brkval+0x1>
 992:	e2 17       	cp	r30, r18
 994:	f3 07       	cpc	r31, r19
 996:	a0 f4       	brcc	.+40     	; 0x9c0 <malloc+0x120>
 998:	2e 1b       	sub	r18, r30
 99a:	3f 0b       	sbc	r19, r31
 99c:	28 17       	cp	r18, r24
 99e:	39 07       	cpc	r19, r25
 9a0:	78 f0       	brcs	.+30     	; 0x9c0 <malloc+0x120>
 9a2:	ac 01       	movw	r20, r24
 9a4:	4e 5f       	subi	r20, 0xFE	; 254
 9a6:	5f 4f       	sbci	r21, 0xFF	; 255
 9a8:	24 17       	cp	r18, r20
 9aa:	35 07       	cpc	r19, r21
 9ac:	48 f0       	brcs	.+18     	; 0x9c0 <malloc+0x120>
 9ae:	4e 0f       	add	r20, r30
 9b0:	5f 1f       	adc	r21, r31
 9b2:	50 93 43 02 	sts	0x0243, r21	; 0x800243 <__brkval+0x1>
 9b6:	40 93 42 02 	sts	0x0242, r20	; 0x800242 <__brkval>
 9ba:	81 93       	st	Z+, r24
 9bc:	91 93       	st	Z+, r25
 9be:	02 c0       	rjmp	.+4      	; 0x9c4 <malloc+0x124>
 9c0:	e0 e0       	ldi	r30, 0x00	; 0
 9c2:	f0 e0       	ldi	r31, 0x00	; 0
 9c4:	cf 01       	movw	r24, r30
 9c6:	df 91       	pop	r29
 9c8:	cf 91       	pop	r28
 9ca:	1f 91       	pop	r17
 9cc:	0f 91       	pop	r16
 9ce:	08 95       	ret

000009d0 <free>:
 9d0:	cf 93       	push	r28
 9d2:	df 93       	push	r29
 9d4:	00 97       	sbiw	r24, 0x00	; 0
 9d6:	09 f4       	brne	.+2      	; 0x9da <free+0xa>
 9d8:	81 c0       	rjmp	.+258    	; 0xadc <free+0x10c>
 9da:	fc 01       	movw	r30, r24
 9dc:	32 97       	sbiw	r30, 0x02	; 2
 9de:	13 82       	std	Z+3, r1	; 0x03
 9e0:	12 82       	std	Z+2, r1	; 0x02
 9e2:	a0 91 44 02 	lds	r26, 0x0244	; 0x800244 <__flp>
 9e6:	b0 91 45 02 	lds	r27, 0x0245	; 0x800245 <__flp+0x1>
 9ea:	10 97       	sbiw	r26, 0x00	; 0
 9ec:	81 f4       	brne	.+32     	; 0xa0e <free+0x3e>
 9ee:	20 81       	ld	r18, Z
 9f0:	31 81       	ldd	r19, Z+1	; 0x01
 9f2:	82 0f       	add	r24, r18
 9f4:	93 1f       	adc	r25, r19
 9f6:	20 91 42 02 	lds	r18, 0x0242	; 0x800242 <__brkval>
 9fa:	30 91 43 02 	lds	r19, 0x0243	; 0x800243 <__brkval+0x1>
 9fe:	28 17       	cp	r18, r24
 a00:	39 07       	cpc	r19, r25
 a02:	51 f5       	brne	.+84     	; 0xa58 <free+0x88>
 a04:	f0 93 43 02 	sts	0x0243, r31	; 0x800243 <__brkval+0x1>
 a08:	e0 93 42 02 	sts	0x0242, r30	; 0x800242 <__brkval>
 a0c:	67 c0       	rjmp	.+206    	; 0xadc <free+0x10c>
 a0e:	ed 01       	movw	r28, r26
 a10:	20 e0       	ldi	r18, 0x00	; 0
 a12:	30 e0       	ldi	r19, 0x00	; 0
 a14:	ce 17       	cp	r28, r30
 a16:	df 07       	cpc	r29, r31
 a18:	40 f4       	brcc	.+16     	; 0xa2a <free+0x5a>
 a1a:	4a 81       	ldd	r20, Y+2	; 0x02
 a1c:	5b 81       	ldd	r21, Y+3	; 0x03
 a1e:	9e 01       	movw	r18, r28
 a20:	41 15       	cp	r20, r1
 a22:	51 05       	cpc	r21, r1
 a24:	f1 f0       	breq	.+60     	; 0xa62 <free+0x92>
 a26:	ea 01       	movw	r28, r20
 a28:	f5 cf       	rjmp	.-22     	; 0xa14 <free+0x44>
 a2a:	d3 83       	std	Z+3, r29	; 0x03
 a2c:	c2 83       	std	Z+2, r28	; 0x02
 a2e:	40 81       	ld	r20, Z
 a30:	51 81       	ldd	r21, Z+1	; 0x01
 a32:	84 0f       	add	r24, r20
 a34:	95 1f       	adc	r25, r21
 a36:	c8 17       	cp	r28, r24
 a38:	d9 07       	cpc	r29, r25
 a3a:	59 f4       	brne	.+22     	; 0xa52 <free+0x82>
 a3c:	88 81       	ld	r24, Y
 a3e:	99 81       	ldd	r25, Y+1	; 0x01
 a40:	84 0f       	add	r24, r20
 a42:	95 1f       	adc	r25, r21
 a44:	02 96       	adiw	r24, 0x02	; 2
 a46:	91 83       	std	Z+1, r25	; 0x01
 a48:	80 83       	st	Z, r24
 a4a:	8a 81       	ldd	r24, Y+2	; 0x02
 a4c:	9b 81       	ldd	r25, Y+3	; 0x03
 a4e:	93 83       	std	Z+3, r25	; 0x03
 a50:	82 83       	std	Z+2, r24	; 0x02
 a52:	21 15       	cp	r18, r1
 a54:	31 05       	cpc	r19, r1
 a56:	29 f4       	brne	.+10     	; 0xa62 <free+0x92>
 a58:	f0 93 45 02 	sts	0x0245, r31	; 0x800245 <__flp+0x1>
 a5c:	e0 93 44 02 	sts	0x0244, r30	; 0x800244 <__flp>
 a60:	3d c0       	rjmp	.+122    	; 0xadc <free+0x10c>
 a62:	e9 01       	movw	r28, r18
 a64:	fb 83       	std	Y+3, r31	; 0x03
 a66:	ea 83       	std	Y+2, r30	; 0x02
 a68:	49 91       	ld	r20, Y+
 a6a:	59 91       	ld	r21, Y+
 a6c:	c4 0f       	add	r28, r20
 a6e:	d5 1f       	adc	r29, r21
 a70:	ec 17       	cp	r30, r28
 a72:	fd 07       	cpc	r31, r29
 a74:	61 f4       	brne	.+24     	; 0xa8e <free+0xbe>
 a76:	80 81       	ld	r24, Z
 a78:	91 81       	ldd	r25, Z+1	; 0x01
 a7a:	84 0f       	add	r24, r20
 a7c:	95 1f       	adc	r25, r21
 a7e:	02 96       	adiw	r24, 0x02	; 2
 a80:	e9 01       	movw	r28, r18
 a82:	99 83       	std	Y+1, r25	; 0x01
 a84:	88 83       	st	Y, r24
 a86:	82 81       	ldd	r24, Z+2	; 0x02
 a88:	93 81       	ldd	r25, Z+3	; 0x03
 a8a:	9b 83       	std	Y+3, r25	; 0x03
 a8c:	8a 83       	std	Y+2, r24	; 0x02
 a8e:	e0 e0       	ldi	r30, 0x00	; 0
 a90:	f0 e0       	ldi	r31, 0x00	; 0
 a92:	12 96       	adiw	r26, 0x02	; 2
 a94:	8d 91       	ld	r24, X+
 a96:	9c 91       	ld	r25, X
 a98:	13 97       	sbiw	r26, 0x03	; 3
 a9a:	00 97       	sbiw	r24, 0x00	; 0
 a9c:	19 f0       	breq	.+6      	; 0xaa4 <free+0xd4>
 a9e:	fd 01       	movw	r30, r26
 aa0:	dc 01       	movw	r26, r24
 aa2:	f7 cf       	rjmp	.-18     	; 0xa92 <free+0xc2>
 aa4:	8d 91       	ld	r24, X+
 aa6:	9c 91       	ld	r25, X
 aa8:	11 97       	sbiw	r26, 0x01	; 1
 aaa:	9d 01       	movw	r18, r26
 aac:	2e 5f       	subi	r18, 0xFE	; 254
 aae:	3f 4f       	sbci	r19, 0xFF	; 255
 ab0:	82 0f       	add	r24, r18
 ab2:	93 1f       	adc	r25, r19
 ab4:	20 91 42 02 	lds	r18, 0x0242	; 0x800242 <__brkval>
 ab8:	30 91 43 02 	lds	r19, 0x0243	; 0x800243 <__brkval+0x1>
 abc:	28 17       	cp	r18, r24
 abe:	39 07       	cpc	r19, r25
 ac0:	69 f4       	brne	.+26     	; 0xadc <free+0x10c>
 ac2:	30 97       	sbiw	r30, 0x00	; 0
 ac4:	29 f4       	brne	.+10     	; 0xad0 <free+0x100>
 ac6:	10 92 45 02 	sts	0x0245, r1	; 0x800245 <__flp+0x1>
 aca:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <__flp>
 ace:	02 c0       	rjmp	.+4      	; 0xad4 <free+0x104>
 ad0:	13 82       	std	Z+3, r1	; 0x03
 ad2:	12 82       	std	Z+2, r1	; 0x02
 ad4:	b0 93 43 02 	sts	0x0243, r27	; 0x800243 <__brkval+0x1>
 ad8:	a0 93 42 02 	sts	0x0242, r26	; 0x800242 <__brkval>
 adc:	df 91       	pop	r29
 ade:	cf 91       	pop	r28
 ae0:	08 95       	ret

00000ae2 <strnlen_P>:
 ae2:	fc 01       	movw	r30, r24
 ae4:	05 90       	lpm	r0, Z+
 ae6:	61 50       	subi	r22, 0x01	; 1
 ae8:	70 40       	sbci	r23, 0x00	; 0
 aea:	01 10       	cpse	r0, r1
 aec:	d8 f7       	brcc	.-10     	; 0xae4 <strnlen_P+0x2>
 aee:	80 95       	com	r24
 af0:	90 95       	com	r25
 af2:	8e 0f       	add	r24, r30
 af4:	9f 1f       	adc	r25, r31
 af6:	08 95       	ret

00000af8 <memset>:
 af8:	dc 01       	movw	r26, r24
 afa:	01 c0       	rjmp	.+2      	; 0xafe <memset+0x6>
 afc:	6d 93       	st	X+, r22
 afe:	41 50       	subi	r20, 0x01	; 1
 b00:	50 40       	sbci	r21, 0x00	; 0
 b02:	e0 f7       	brcc	.-8      	; 0xafc <memset+0x4>
 b04:	08 95       	ret

00000b06 <strnlen>:
 b06:	fc 01       	movw	r30, r24
 b08:	61 50       	subi	r22, 0x01	; 1
 b0a:	70 40       	sbci	r23, 0x00	; 0
 b0c:	01 90       	ld	r0, Z+
 b0e:	01 10       	cpse	r0, r1
 b10:	d8 f7       	brcc	.-10     	; 0xb08 <strnlen+0x2>
 b12:	80 95       	com	r24
 b14:	90 95       	com	r25
 b16:	8e 0f       	add	r24, r30
 b18:	9f 1f       	adc	r25, r31
 b1a:	08 95       	ret

00000b1c <fputc>:
 b1c:	0f 93       	push	r16
 b1e:	1f 93       	push	r17
 b20:	cf 93       	push	r28
 b22:	df 93       	push	r29
 b24:	fb 01       	movw	r30, r22
 b26:	23 81       	ldd	r18, Z+3	; 0x03
 b28:	21 fd       	sbrc	r18, 1
 b2a:	03 c0       	rjmp	.+6      	; 0xb32 <fputc+0x16>
 b2c:	8f ef       	ldi	r24, 0xFF	; 255
 b2e:	9f ef       	ldi	r25, 0xFF	; 255
 b30:	2c c0       	rjmp	.+88     	; 0xb8a <fputc+0x6e>
 b32:	22 ff       	sbrs	r18, 2
 b34:	16 c0       	rjmp	.+44     	; 0xb62 <fputc+0x46>
 b36:	46 81       	ldd	r20, Z+6	; 0x06
 b38:	57 81       	ldd	r21, Z+7	; 0x07
 b3a:	24 81       	ldd	r18, Z+4	; 0x04
 b3c:	35 81       	ldd	r19, Z+5	; 0x05
 b3e:	42 17       	cp	r20, r18
 b40:	53 07       	cpc	r21, r19
 b42:	44 f4       	brge	.+16     	; 0xb54 <fputc+0x38>
 b44:	a0 81       	ld	r26, Z
 b46:	b1 81       	ldd	r27, Z+1	; 0x01
 b48:	9d 01       	movw	r18, r26
 b4a:	2f 5f       	subi	r18, 0xFF	; 255
 b4c:	3f 4f       	sbci	r19, 0xFF	; 255
 b4e:	31 83       	std	Z+1, r19	; 0x01
 b50:	20 83       	st	Z, r18
 b52:	8c 93       	st	X, r24
 b54:	26 81       	ldd	r18, Z+6	; 0x06
 b56:	37 81       	ldd	r19, Z+7	; 0x07
 b58:	2f 5f       	subi	r18, 0xFF	; 255
 b5a:	3f 4f       	sbci	r19, 0xFF	; 255
 b5c:	37 83       	std	Z+7, r19	; 0x07
 b5e:	26 83       	std	Z+6, r18	; 0x06
 b60:	14 c0       	rjmp	.+40     	; 0xb8a <fputc+0x6e>
 b62:	8b 01       	movw	r16, r22
 b64:	ec 01       	movw	r28, r24
 b66:	fb 01       	movw	r30, r22
 b68:	00 84       	ldd	r0, Z+8	; 0x08
 b6a:	f1 85       	ldd	r31, Z+9	; 0x09
 b6c:	e0 2d       	mov	r30, r0
 b6e:	09 95       	icall
 b70:	89 2b       	or	r24, r25
 b72:	e1 f6       	brne	.-72     	; 0xb2c <fputc+0x10>
 b74:	d8 01       	movw	r26, r16
 b76:	16 96       	adiw	r26, 0x06	; 6
 b78:	8d 91       	ld	r24, X+
 b7a:	9c 91       	ld	r25, X
 b7c:	17 97       	sbiw	r26, 0x07	; 7
 b7e:	01 96       	adiw	r24, 0x01	; 1
 b80:	17 96       	adiw	r26, 0x07	; 7
 b82:	9c 93       	st	X, r25
 b84:	8e 93       	st	-X, r24
 b86:	16 97       	sbiw	r26, 0x06	; 6
 b88:	ce 01       	movw	r24, r28
 b8a:	df 91       	pop	r29
 b8c:	cf 91       	pop	r28
 b8e:	1f 91       	pop	r17
 b90:	0f 91       	pop	r16
 b92:	08 95       	ret

00000b94 <__ultoa_invert>:
 b94:	fa 01       	movw	r30, r20
 b96:	aa 27       	eor	r26, r26
 b98:	28 30       	cpi	r18, 0x08	; 8
 b9a:	51 f1       	breq	.+84     	; 0xbf0 <__ultoa_invert+0x5c>
 b9c:	20 31       	cpi	r18, 0x10	; 16
 b9e:	81 f1       	breq	.+96     	; 0xc00 <__ultoa_invert+0x6c>
 ba0:	e8 94       	clt
 ba2:	6f 93       	push	r22
 ba4:	6e 7f       	andi	r22, 0xFE	; 254
 ba6:	6e 5f       	subi	r22, 0xFE	; 254
 ba8:	7f 4f       	sbci	r23, 0xFF	; 255
 baa:	8f 4f       	sbci	r24, 0xFF	; 255
 bac:	9f 4f       	sbci	r25, 0xFF	; 255
 bae:	af 4f       	sbci	r26, 0xFF	; 255
 bb0:	b1 e0       	ldi	r27, 0x01	; 1
 bb2:	3e d0       	rcall	.+124    	; 0xc30 <__ultoa_invert+0x9c>
 bb4:	b4 e0       	ldi	r27, 0x04	; 4
 bb6:	3c d0       	rcall	.+120    	; 0xc30 <__ultoa_invert+0x9c>
 bb8:	67 0f       	add	r22, r23
 bba:	78 1f       	adc	r23, r24
 bbc:	89 1f       	adc	r24, r25
 bbe:	9a 1f       	adc	r25, r26
 bc0:	a1 1d       	adc	r26, r1
 bc2:	68 0f       	add	r22, r24
 bc4:	79 1f       	adc	r23, r25
 bc6:	8a 1f       	adc	r24, r26
 bc8:	91 1d       	adc	r25, r1
 bca:	a1 1d       	adc	r26, r1
 bcc:	6a 0f       	add	r22, r26
 bce:	71 1d       	adc	r23, r1
 bd0:	81 1d       	adc	r24, r1
 bd2:	91 1d       	adc	r25, r1
 bd4:	a1 1d       	adc	r26, r1
 bd6:	20 d0       	rcall	.+64     	; 0xc18 <__ultoa_invert+0x84>
 bd8:	09 f4       	brne	.+2      	; 0xbdc <__ultoa_invert+0x48>
 bda:	68 94       	set
 bdc:	3f 91       	pop	r19
 bde:	2a e0       	ldi	r18, 0x0A	; 10
 be0:	26 9f       	mul	r18, r22
 be2:	11 24       	eor	r1, r1
 be4:	30 19       	sub	r19, r0
 be6:	30 5d       	subi	r19, 0xD0	; 208
 be8:	31 93       	st	Z+, r19
 bea:	de f6       	brtc	.-74     	; 0xba2 <__ultoa_invert+0xe>
 bec:	cf 01       	movw	r24, r30
 bee:	08 95       	ret
 bf0:	46 2f       	mov	r20, r22
 bf2:	47 70       	andi	r20, 0x07	; 7
 bf4:	40 5d       	subi	r20, 0xD0	; 208
 bf6:	41 93       	st	Z+, r20
 bf8:	b3 e0       	ldi	r27, 0x03	; 3
 bfa:	0f d0       	rcall	.+30     	; 0xc1a <__ultoa_invert+0x86>
 bfc:	c9 f7       	brne	.-14     	; 0xbf0 <__ultoa_invert+0x5c>
 bfe:	f6 cf       	rjmp	.-20     	; 0xbec <__ultoa_invert+0x58>
 c00:	46 2f       	mov	r20, r22
 c02:	4f 70       	andi	r20, 0x0F	; 15
 c04:	40 5d       	subi	r20, 0xD0	; 208
 c06:	4a 33       	cpi	r20, 0x3A	; 58
 c08:	18 f0       	brcs	.+6      	; 0xc10 <__ultoa_invert+0x7c>
 c0a:	49 5d       	subi	r20, 0xD9	; 217
 c0c:	31 fd       	sbrc	r19, 1
 c0e:	40 52       	subi	r20, 0x20	; 32
 c10:	41 93       	st	Z+, r20
 c12:	02 d0       	rcall	.+4      	; 0xc18 <__ultoa_invert+0x84>
 c14:	a9 f7       	brne	.-22     	; 0xc00 <__ultoa_invert+0x6c>
 c16:	ea cf       	rjmp	.-44     	; 0xbec <__ultoa_invert+0x58>
 c18:	b4 e0       	ldi	r27, 0x04	; 4
 c1a:	a6 95       	lsr	r26
 c1c:	97 95       	ror	r25
 c1e:	87 95       	ror	r24
 c20:	77 95       	ror	r23
 c22:	67 95       	ror	r22
 c24:	ba 95       	dec	r27
 c26:	c9 f7       	brne	.-14     	; 0xc1a <__ultoa_invert+0x86>
 c28:	00 97       	sbiw	r24, 0x00	; 0
 c2a:	61 05       	cpc	r22, r1
 c2c:	71 05       	cpc	r23, r1
 c2e:	08 95       	ret
 c30:	9b 01       	movw	r18, r22
 c32:	ac 01       	movw	r20, r24
 c34:	0a 2e       	mov	r0, r26
 c36:	06 94       	lsr	r0
 c38:	57 95       	ror	r21
 c3a:	47 95       	ror	r20
 c3c:	37 95       	ror	r19
 c3e:	27 95       	ror	r18
 c40:	ba 95       	dec	r27
 c42:	c9 f7       	brne	.-14     	; 0xc36 <__ultoa_invert+0xa2>
 c44:	62 0f       	add	r22, r18
 c46:	73 1f       	adc	r23, r19
 c48:	84 1f       	adc	r24, r20
 c4a:	95 1f       	adc	r25, r21
 c4c:	a0 1d       	adc	r26, r0
 c4e:	08 95       	ret

00000c50 <__divmodsi4>:
 c50:	05 2e       	mov	r0, r21
 c52:	97 fb       	bst	r25, 7
 c54:	1e f4       	brtc	.+6      	; 0xc5c <__divmodsi4+0xc>
 c56:	00 94       	com	r0
 c58:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__negsi2>
 c5c:	57 fd       	sbrc	r21, 7
 c5e:	07 d0       	rcall	.+14     	; 0xc6e <__divmodsi4_neg2>
 c60:	0e 94 91 06 	call	0xd22	; 0xd22 <__udivmodsi4>
 c64:	07 fc       	sbrc	r0, 7
 c66:	03 d0       	rcall	.+6      	; 0xc6e <__divmodsi4_neg2>
 c68:	4e f4       	brtc	.+18     	; 0xc7c <__divmodsi4_exit>
 c6a:	0c 94 3f 06 	jmp	0xc7e	; 0xc7e <__negsi2>

00000c6e <__divmodsi4_neg2>:
 c6e:	50 95       	com	r21
 c70:	40 95       	com	r20
 c72:	30 95       	com	r19
 c74:	21 95       	neg	r18
 c76:	3f 4f       	sbci	r19, 0xFF	; 255
 c78:	4f 4f       	sbci	r20, 0xFF	; 255
 c7a:	5f 4f       	sbci	r21, 0xFF	; 255

00000c7c <__divmodsi4_exit>:
 c7c:	08 95       	ret

00000c7e <__negsi2>:
 c7e:	90 95       	com	r25
 c80:	80 95       	com	r24
 c82:	70 95       	com	r23
 c84:	61 95       	neg	r22
 c86:	7f 4f       	sbci	r23, 0xFF	; 255
 c88:	8f 4f       	sbci	r24, 0xFF	; 255
 c8a:	9f 4f       	sbci	r25, 0xFF	; 255
 c8c:	08 95       	ret

00000c8e <__muluhisi3>:
 c8e:	0e 94 b3 06 	call	0xd66	; 0xd66 <__umulhisi3>
 c92:	a5 9f       	mul	r26, r21
 c94:	90 0d       	add	r25, r0
 c96:	b4 9f       	mul	r27, r20
 c98:	90 0d       	add	r25, r0
 c9a:	a4 9f       	mul	r26, r20
 c9c:	80 0d       	add	r24, r0
 c9e:	91 1d       	adc	r25, r1
 ca0:	11 24       	eor	r1, r1
 ca2:	08 95       	ret

00000ca4 <__mulshisi3>:
 ca4:	b7 ff       	sbrs	r27, 7
 ca6:	0c 94 47 06 	jmp	0xc8e	; 0xc8e <__muluhisi3>

00000caa <__mulohisi3>:
 caa:	0e 94 47 06 	call	0xc8e	; 0xc8e <__muluhisi3>
 cae:	82 1b       	sub	r24, r18
 cb0:	93 0b       	sbc	r25, r19
 cb2:	08 95       	ret

00000cb4 <__prologue_saves__>:
 cb4:	2f 92       	push	r2
 cb6:	3f 92       	push	r3
 cb8:	4f 92       	push	r4
 cba:	5f 92       	push	r5
 cbc:	6f 92       	push	r6
 cbe:	7f 92       	push	r7
 cc0:	8f 92       	push	r8
 cc2:	9f 92       	push	r9
 cc4:	af 92       	push	r10
 cc6:	bf 92       	push	r11
 cc8:	cf 92       	push	r12
 cca:	df 92       	push	r13
 ccc:	ef 92       	push	r14
 cce:	ff 92       	push	r15
 cd0:	0f 93       	push	r16
 cd2:	1f 93       	push	r17
 cd4:	cf 93       	push	r28
 cd6:	df 93       	push	r29
 cd8:	cd b7       	in	r28, 0x3d	; 61
 cda:	de b7       	in	r29, 0x3e	; 62
 cdc:	ca 1b       	sub	r28, r26
 cde:	db 0b       	sbc	r29, r27
 ce0:	0f b6       	in	r0, 0x3f	; 63
 ce2:	f8 94       	cli
 ce4:	de bf       	out	0x3e, r29	; 62
 ce6:	0f be       	out	0x3f, r0	; 63
 ce8:	cd bf       	out	0x3d, r28	; 61
 cea:	09 94       	ijmp

00000cec <__epilogue_restores__>:
 cec:	2a 88       	ldd	r2, Y+18	; 0x12
 cee:	39 88       	ldd	r3, Y+17	; 0x11
 cf0:	48 88       	ldd	r4, Y+16	; 0x10
 cf2:	5f 84       	ldd	r5, Y+15	; 0x0f
 cf4:	6e 84       	ldd	r6, Y+14	; 0x0e
 cf6:	7d 84       	ldd	r7, Y+13	; 0x0d
 cf8:	8c 84       	ldd	r8, Y+12	; 0x0c
 cfa:	9b 84       	ldd	r9, Y+11	; 0x0b
 cfc:	aa 84       	ldd	r10, Y+10	; 0x0a
 cfe:	b9 84       	ldd	r11, Y+9	; 0x09
 d00:	c8 84       	ldd	r12, Y+8	; 0x08
 d02:	df 80       	ldd	r13, Y+7	; 0x07
 d04:	ee 80       	ldd	r14, Y+6	; 0x06
 d06:	fd 80       	ldd	r15, Y+5	; 0x05
 d08:	0c 81       	ldd	r16, Y+4	; 0x04
 d0a:	1b 81       	ldd	r17, Y+3	; 0x03
 d0c:	aa 81       	ldd	r26, Y+2	; 0x02
 d0e:	b9 81       	ldd	r27, Y+1	; 0x01
 d10:	ce 0f       	add	r28, r30
 d12:	d1 1d       	adc	r29, r1
 d14:	0f b6       	in	r0, 0x3f	; 63
 d16:	f8 94       	cli
 d18:	de bf       	out	0x3e, r29	; 62
 d1a:	0f be       	out	0x3f, r0	; 63
 d1c:	cd bf       	out	0x3d, r28	; 61
 d1e:	ed 01       	movw	r28, r26
 d20:	08 95       	ret

00000d22 <__udivmodsi4>:
 d22:	a1 e2       	ldi	r26, 0x21	; 33
 d24:	1a 2e       	mov	r1, r26
 d26:	aa 1b       	sub	r26, r26
 d28:	bb 1b       	sub	r27, r27
 d2a:	fd 01       	movw	r30, r26
 d2c:	0d c0       	rjmp	.+26     	; 0xd48 <__udivmodsi4_ep>

00000d2e <__udivmodsi4_loop>:
 d2e:	aa 1f       	adc	r26, r26
 d30:	bb 1f       	adc	r27, r27
 d32:	ee 1f       	adc	r30, r30
 d34:	ff 1f       	adc	r31, r31
 d36:	a2 17       	cp	r26, r18
 d38:	b3 07       	cpc	r27, r19
 d3a:	e4 07       	cpc	r30, r20
 d3c:	f5 07       	cpc	r31, r21
 d3e:	20 f0       	brcs	.+8      	; 0xd48 <__udivmodsi4_ep>
 d40:	a2 1b       	sub	r26, r18
 d42:	b3 0b       	sbc	r27, r19
 d44:	e4 0b       	sbc	r30, r20
 d46:	f5 0b       	sbc	r31, r21

00000d48 <__udivmodsi4_ep>:
 d48:	66 1f       	adc	r22, r22
 d4a:	77 1f       	adc	r23, r23
 d4c:	88 1f       	adc	r24, r24
 d4e:	99 1f       	adc	r25, r25
 d50:	1a 94       	dec	r1
 d52:	69 f7       	brne	.-38     	; 0xd2e <__udivmodsi4_loop>
 d54:	60 95       	com	r22
 d56:	70 95       	com	r23
 d58:	80 95       	com	r24
 d5a:	90 95       	com	r25
 d5c:	9b 01       	movw	r18, r22
 d5e:	ac 01       	movw	r20, r24
 d60:	bd 01       	movw	r22, r26
 d62:	cf 01       	movw	r24, r30
 d64:	08 95       	ret

00000d66 <__umulhisi3>:
 d66:	a2 9f       	mul	r26, r18
 d68:	b0 01       	movw	r22, r0
 d6a:	b3 9f       	mul	r27, r19
 d6c:	c0 01       	movw	r24, r0
 d6e:	a3 9f       	mul	r26, r19
 d70:	70 0d       	add	r23, r0
 d72:	81 1d       	adc	r24, r1
 d74:	11 24       	eor	r1, r1
 d76:	91 1d       	adc	r25, r1
 d78:	b2 9f       	mul	r27, r18
 d7a:	70 0d       	add	r23, r0
 d7c:	81 1d       	adc	r24, r1
 d7e:	11 24       	eor	r1, r1
 d80:	91 1d       	adc	r25, r1
 d82:	08 95       	ret

00000d84 <_exit>:
 d84:	f8 94       	cli

00000d86 <__stop_program>:
 d86:	ff cf       	rjmp	.-2      	; 0xd86 <__stop_program>
