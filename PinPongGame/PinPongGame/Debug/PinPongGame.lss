
PinPongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e2  00800100  00000c80  00000d14  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c80  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001e2  008001e2  00000df6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000df6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e54  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000e90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000147f  00000000  00000000  00000f98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c34  00000000  00000000  00002417  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000971  00000000  00000000  0000304b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000304  00000000  00000000  000039bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006da  00000000  00000000  00003cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008a1  00000000  00000000  0000439a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00004c3b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 e8       	ldi	r30, 0x80	; 128
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 3e       	cpi	r26, 0xE2	; 226
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 ee       	ldi	r26, 0xE2	; 226
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ac 3e       	cpi	r26, 0xEC	; 236
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 03 01 	call	0x206	; 0x206 <main>
  a6:	0c 94 3e 06 	jmp	0xc7c	; 0xc7c <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_Read>:
	}
	else
	{
		return SNEUTRAL;
	}
}
  ae:	60 e0       	ldi	r22, 0x00	; 0
  b0:	74 e1       	ldi	r23, 0x14	; 20
  b2:	80 68       	ori	r24, 0x80	; 128
  b4:	0e 94 69 01 	call	0x2d2	; 0x2d2 <XMEM_Write>
  b8:	89 e9       	ldi	r24, 0x99	; 153
  ba:	99 e0       	ldi	r25, 0x09	; 9
  bc:	01 97       	sbiw	r24, 0x01	; 1
  be:	f1 f7       	brne	.-4      	; 0xbc <ADC_Read+0xe>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <ADC_Read+0x14>
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	94 e1       	ldi	r25, 0x14	; 20
  c6:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <XMEM_Read>
  ca:	08 95       	ret

000000cc <Calibrate_Joystick>:
  cc:	4f 92       	push	r4
  ce:	5f 92       	push	r5
  d0:	6f 92       	push	r6
  d2:	7f 92       	push	r7
  d4:	8f 92       	push	r8
  d6:	9f 92       	push	r9
  d8:	af 92       	push	r10
  da:	bf 92       	push	r11
  dc:	cf 92       	push	r12
  de:	df 92       	push	r13
  e0:	ef 92       	push	r14
  e2:	ff 92       	push	r15
  e4:	1f 93       	push	r17
  e6:	cf 93       	push	r28
  e8:	df 93       	push	r29
  ea:	86 e0       	ldi	r24, 0x06	; 6
  ec:	91 e0       	ldi	r25, 0x01	; 1
  ee:	9f 93       	push	r25
  f0:	8f 93       	push	r24
  f2:	0e 94 1c 02 	call	0x438	; 0x438 <printf>
  f6:	0f 90       	pop	r0
  f8:	0f 90       	pop	r0
  fa:	c0 e0       	ldi	r28, 0x00	; 0
  fc:	d0 e0       	ldi	r29, 0x00	; 0
  fe:	c1 2c       	mov	r12, r1
 100:	d1 2c       	mov	r13, r1
 102:	76 01       	movw	r14, r12
 104:	81 2c       	mov	r8, r1
 106:	91 2c       	mov	r9, r1
 108:	54 01       	movw	r10, r8
 10a:	10 c0       	rjmp	.+32     	; 0x12c <Calibrate_Joystick+0x60>
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	0e 94 57 00 	call	0xae	; 0xae <ADC_Read>
 112:	18 2f       	mov	r17, r24
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	0e 94 57 00 	call	0xae	; 0xae <ADC_Read>
 11a:	81 0e       	add	r8, r17
 11c:	91 1c       	adc	r9, r1
 11e:	a1 1c       	adc	r10, r1
 120:	b1 1c       	adc	r11, r1
 122:	c8 0e       	add	r12, r24
 124:	d1 1c       	adc	r13, r1
 126:	e1 1c       	adc	r14, r1
 128:	f1 1c       	adc	r15, r1
 12a:	21 96       	adiw	r28, 0x01	; 1
 12c:	c4 3f       	cpi	r28, 0xF4	; 244
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	d8 07       	cpc	r29, r24
 132:	60 f3       	brcs	.-40     	; 0x10c <Calibrate_Joystick+0x40>
 134:	c5 01       	movw	r24, r10
 136:	b4 01       	movw	r22, r8
 138:	24 ef       	ldi	r18, 0xF4	; 244
 13a:	31 e0       	ldi	r19, 0x01	; 1
 13c:	40 e0       	ldi	r20, 0x00	; 0
 13e:	50 e0       	ldi	r21, 0x00	; 0
 140:	0e 94 90 01 	call	0x320	; 0x320 <__divmodsi4>
 144:	29 01       	movw	r4, r18
 146:	8f e7       	ldi	r24, 0x7F	; 127
 148:	48 1a       	sub	r4, r24
 14a:	51 08       	sbc	r5, r1
 14c:	c7 01       	movw	r24, r14
 14e:	b6 01       	movw	r22, r12
 150:	24 ef       	ldi	r18, 0xF4	; 244
 152:	31 e0       	ldi	r19, 0x01	; 1
 154:	40 e0       	ldi	r20, 0x00	; 0
 156:	50 e0       	ldi	r21, 0x00	; 0
 158:	0e 94 90 01 	call	0x320	; 0x320 <__divmodsi4>
 15c:	39 01       	movw	r6, r18
 15e:	8f e7       	ldi	r24, 0x7F	; 127
 160:	68 1a       	sub	r6, r24
 162:	71 08       	sbc	r7, r1
 164:	c3 01       	movw	r24, r6
 166:	b2 01       	movw	r22, r4
 168:	df 91       	pop	r29
 16a:	cf 91       	pop	r28
 16c:	1f 91       	pop	r17
 16e:	ff 90       	pop	r15
 170:	ef 90       	pop	r14
 172:	df 90       	pop	r13
 174:	cf 90       	pop	r12
 176:	bf 90       	pop	r11
 178:	af 90       	pop	r10
 17a:	9f 90       	pop	r9
 17c:	8f 90       	pop	r8
 17e:	7f 90       	pop	r7
 180:	6f 90       	pop	r6
 182:	5f 90       	pop	r5
 184:	4f 90       	pop	r4
 186:	08 95       	ret

00000188 <Calibrate_Slider>:
 188:	cf 92       	push	r12
 18a:	df 92       	push	r13
 18c:	ef 92       	push	r14
 18e:	ff 92       	push	r15
 190:	cf 93       	push	r28
 192:	df 93       	push	r29
 194:	8d e2       	ldi	r24, 0x2D	; 45
 196:	91 e0       	ldi	r25, 0x01	; 1
 198:	9f 93       	push	r25
 19a:	8f 93       	push	r24
 19c:	0e 94 1c 02 	call	0x438	; 0x438 <printf>
 1a0:	0f 90       	pop	r0
 1a2:	0f 90       	pop	r0
 1a4:	c0 e0       	ldi	r28, 0x00	; 0
 1a6:	d0 e0       	ldi	r29, 0x00	; 0
 1a8:	c1 2c       	mov	r12, r1
 1aa:	d1 2c       	mov	r13, r1
 1ac:	76 01       	movw	r14, r12
 1ae:	08 c0       	rjmp	.+16     	; 0x1c0 <Calibrate_Slider+0x38>
 1b0:	82 e0       	ldi	r24, 0x02	; 2
 1b2:	0e 94 57 00 	call	0xae	; 0xae <ADC_Read>
 1b6:	c8 0e       	add	r12, r24
 1b8:	d1 1c       	adc	r13, r1
 1ba:	e1 1c       	adc	r14, r1
 1bc:	f1 1c       	adc	r15, r1
 1be:	21 96       	adiw	r28, 0x01	; 1
 1c0:	c4 3f       	cpi	r28, 0xF4	; 244
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	d8 07       	cpc	r29, r24
 1c6:	a0 f3       	brcs	.-24     	; 0x1b0 <Calibrate_Slider+0x28>
 1c8:	c7 01       	movw	r24, r14
 1ca:	b6 01       	movw	r22, r12
 1cc:	24 ef       	ldi	r18, 0xF4	; 244
 1ce:	31 e0       	ldi	r19, 0x01	; 1
 1d0:	40 e0       	ldi	r20, 0x00	; 0
 1d2:	50 e0       	ldi	r21, 0x00	; 0
 1d4:	0e 94 90 01 	call	0x320	; 0x320 <__divmodsi4>
 1d8:	c9 01       	movw	r24, r18
 1da:	df 91       	pop	r29
 1dc:	cf 91       	pop	r28
 1de:	ff 90       	pop	r15
 1e0:	ef 90       	pop	r14
 1e2:	df 90       	pop	r13
 1e4:	cf 90       	pop	r12
 1e6:	08 95       	ret

000001e8 <Init_ADC>:

void Init_ADC()
{
/*Configure PD5 as output (to provide a clock to the ADC)*/
	DDRD |= (1 << ADC_CLOCK_PIN);
 1e8:	81 b3       	in	r24, 0x11	; 17
 1ea:	80 62       	ori	r24, 0x20	; 32
 1ec:	81 bb       	out	0x11, r24	; 17
/**/
	TCCR1A &= ~(1 << WGM10) & ~(1 << WGM11);
 1ee:	8f b5       	in	r24, 0x2f	; 47
 1f0:	8c 7f       	andi	r24, 0xFC	; 252
 1f2:	8f bd       	out	0x2f, r24	; 47
	TCCR1A |= (1 << COM1A0);
 1f4:	8f b5       	in	r24, 0x2f	; 47
 1f6:	80 64       	ori	r24, 0x40	; 64
 1f8:	8f bd       	out	0x2f, r24	; 47
/*Prescaler is 1*/
	TCCR1B |= (1 << CS10) | (1 << WGM12) ;
 1fa:	8e b5       	in	r24, 0x2e	; 46
 1fc:	89 60       	ori	r24, 0x09	; 9
 1fe:	8e bd       	out	0x2e, r24	; 46
/*Half of duty cycle in 0-255 8bit timer register*/
	OCR1AL = 0;
 200:	1a bc       	out	0x2a, r1	; 42
	OCR1AH = 0;
 202:	1b bc       	out	0x2b, r1	; 43
 204:	08 95       	ret

00000206 <main>:

/* === Global variable === */
char tx_data;

int main(void) {
	Init();
 206:	0e 94 62 01 	call	0x2c4	; 0x2c4 <Init>
	USART_Init(UBBR);
 20a:	8f e1       	ldi	r24, 0x1F	; 31
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	0e 94 6f 01 	call	0x2de	; 0x2de <USART_Init>
	Init_ADC();
 212:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <Init_ADC>
	
	FILE *uart_stream = fdevopen(USART_Transmit_Char, USART_Receive_Char);
 216:	6b e8       	ldi	r22, 0x8B	; 139
 218:	71 e0       	ldi	r23, 0x01	; 1
 21a:	8d e7       	ldi	r24, 0x7D	; 125
 21c:	91 e0       	ldi	r25, 0x01	; 1
 21e:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <fdevopen>
	
	stdout = uart_stream;
 222:	e2 ee       	ldi	r30, 0xE2	; 226
 224:	f1 e0       	ldi	r31, 0x01	; 1
 226:	93 83       	std	Z+3, r25	; 0x03
 228:	82 83       	std	Z+2, r24	; 0x02
	stdin = uart_stream;
 22a:	91 83       	std	Z+1, r25	; 0x01
 22c:	80 83       	st	Z, r24
	
	printf("I am printf!\n\r");
 22e:	87 e6       	ldi	r24, 0x67	; 103
 230:	91 e0       	ldi	r25, 0x01	; 1
 232:	9f 93       	push	r25
 234:	8f 93       	push	r24
 236:	0e 94 1c 02 	call	0x438	; 0x438 <printf>
	JoystickDirection dir = NEUTRAL;
	
	SliderPosition poss = {0};
	SliderDirection Sdir = SNEUTRAL;
	
	JoystickCalibration joystick_calibration = Calibrate_Joystick();
 23a:	0e 94 66 00 	call	0xcc	; 0xcc <Calibrate_Joystick>

	SliderCalibration slider_calibration = Calibrate_Slider();
 23e:	0e 94 c4 00 	call	0x188	; 0x188 <Calibrate_Slider>
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
	while(1)
	{	
		/*Right touch button*/
		DDRE &= ~(1 << PE0);
 246:	86 b1       	in	r24, 0x06	; 6
 248:	8e 7f       	andi	r24, 0xFE	; 254
 24a:	86 b9       	out	0x06, r24	; 6
		PORTE |= (1 << PE0);
 24c:	87 b1       	in	r24, 0x07	; 7
 24e:	81 60       	ori	r24, 0x01	; 1
 250:	87 b9       	out	0x07, r24	; 7
		/*Left touch button*/
		DDRE &= ~(1 << PE2);
 252:	86 b1       	in	r24, 0x06	; 6
 254:	8b 7f       	andi	r24, 0xFB	; 251
 256:	86 b9       	out	0x06, r24	; 6
		PORTE |= (1 << PE2);
 258:	87 b1       	in	r24, 0x07	; 7
 25a:	84 60       	ori	r24, 0x04	; 4
 25c:	87 b9       	out	0x07, r24	; 7
		
		DDRB &= ~(1 << PB2);
 25e:	87 b3       	in	r24, 0x17	; 23
 260:	8b 7f       	andi	r24, 0xFB	; 251
 262:	87 bb       	out	0x17, r24	; 23
		
		uint8_t pin_valueE0 = PINE & (1 << PE0);
 264:	85 b1       	in	r24, 0x05	; 5
 266:	81 70       	andi	r24, 0x01	; 1
		uint8_t pin_valueE2 = PINE & (1 << PE2);
 268:	d5 b1       	in	r29, 0x05	; 5
 26a:	d4 70       	andi	r29, 0x04	; 4
		uint8_t pin_valueB2 = PINB & (1 << PB2);
 26c:	c6 b3       	in	r28, 0x16	; 22
 26e:	c4 70       	andi	r28, 0x04	; 4
		printf("PIN value right touch button: %d\n\r", pin_valueE0);
 270:	1f 92       	push	r1
 272:	8f 93       	push	r24
 274:	86 e7       	ldi	r24, 0x76	; 118
 276:	91 e0       	ldi	r25, 0x01	; 1
 278:	9f 93       	push	r25
 27a:	8f 93       	push	r24
 27c:	0e 94 1c 02 	call	0x438	; 0x438 <printf>
		printf("PIN value left touch button: %d\n\r", pin_valueE2);
 280:	1f 92       	push	r1
 282:	df 93       	push	r29
 284:	89 e9       	ldi	r24, 0x99	; 153
 286:	91 e0       	ldi	r25, 0x01	; 1
 288:	9f 93       	push	r25
 28a:	8f 93       	push	r24
 28c:	0e 94 1c 02 	call	0x438	; 0x438 <printf>
		printf("PIN value joystick touch button: %d\n\r", pin_valueB2);
 290:	1f 92       	push	r1
 292:	cf 93       	push	r28
 294:	8b eb       	ldi	r24, 0xBB	; 187
 296:	91 e0       	ldi	r25, 0x01	; 1
 298:	9f 93       	push	r25
 29a:	8f 93       	push	r24
 29c:	0e 94 1c 02 	call	0x438	; 0x438 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a0:	2f ef       	ldi	r18, 0xFF	; 255
 2a2:	8f ef       	ldi	r24, 0xFF	; 255
 2a4:	9b e0       	ldi	r25, 0x0B	; 11
 2a6:	21 50       	subi	r18, 0x01	; 1
 2a8:	80 40       	sbci	r24, 0x00	; 0
 2aa:	90 40       	sbci	r25, 0x00	; 0
 2ac:	e1 f7       	brne	.-8      	; 0x2a6 <main+0xa0>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <main+0xaa>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <main+0xac>
 2b2:	8d b7       	in	r24, 0x3d	; 61
 2b4:	9e b7       	in	r25, 0x3e	; 62
 2b6:	0c 96       	adiw	r24, 0x0c	; 12
 2b8:	0f b6       	in	r0, 0x3f	; 63
 2ba:	f8 94       	cli
 2bc:	9e bf       	out	0x3e, r25	; 62
 2be:	0f be       	out	0x3f, r0	; 63
 2c0:	8d bf       	out	0x3d, r24	; 61
 2c2:	c1 cf       	rjmp	.-126    	; 0x246 <main+0x40>

000002c4 <Init>:
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase\n\r", write_errors);
	printf("SRAM test completed with \n%4d errors in retrieval phase\n\r", retrieval_errors);
}
 2c4:	85 b7       	in	r24, 0x35	; 53
 2c6:	80 68       	ori	r24, 0x80	; 128
 2c8:	85 bf       	out	0x35, r24	; 53
 2ca:	80 b7       	in	r24, 0x30	; 48
 2cc:	80 62       	ori	r24, 0x20	; 32
 2ce:	80 bf       	out	0x30, r24	; 48
 2d0:	08 95       	ret

000002d2 <XMEM_Write>:

void XMEM_Write(uint8_t data, uint16_t addr)
{
	volatile uint8_t *ext_mem = (uint8_t *)(addr);
	*ext_mem = data;
 2d2:	fb 01       	movw	r30, r22
 2d4:	80 83       	st	Z, r24
 2d6:	08 95       	ret

000002d8 <XMEM_Read>:
}

uint8_t XMEM_Read(uint16_t addr)
{
	volatile uint8_t *ext_mem = (uint8_t *)(addr);
	return *ext_mem;
 2d8:	fc 01       	movw	r30, r24
 2da:	80 81       	ld	r24, Z
}
 2dc:	08 95       	ret

000002de <USART_Init>:
char USART_Receive(void)
{
/*Do nothing until data have been recieved and is ready to be read from UDR*/
	while (!(UCSR0A & (1<<RXC0)));
	return UDR0;
}
 2de:	90 bd       	out	0x20, r25	; 32
 2e0:	89 b9       	out	0x09, r24	; 9
 2e2:	8b b1       	in	r24, 0x0b	; 11
 2e4:	8d 7f       	andi	r24, 0xFD	; 253
 2e6:	8b b9       	out	0x0b, r24	; 11
 2e8:	88 e1       	ldi	r24, 0x18	; 24
 2ea:	8a b9       	out	0x0a, r24	; 10
 2ec:	86 e8       	ldi	r24, 0x86	; 134
 2ee:	80 bd       	out	0x20, r24	; 32
 2f0:	08 95       	ret

000002f2 <USART_Transmit>:
 2f2:	5d 9b       	sbis	0x0b, 5	; 11
 2f4:	fe cf       	rjmp	.-4      	; 0x2f2 <USART_Transmit>
 2f6:	8c b9       	out	0x0c, r24	; 12
 2f8:	08 95       	ret

000002fa <USART_Transmit_Char>:

int USART_Transmit_Char(char c, FILE *stream)
{
 2fa:	cf 93       	push	r28
 2fc:	c8 2f       	mov	r28, r24
	if (c == '\n')
 2fe:	8a 30       	cpi	r24, 0x0A	; 10
 300:	19 f4       	brne	.+6      	; 0x308 <USART_Transmit_Char+0xe>
	{
		USART_Transmit('\r');
 302:	8d e0       	ldi	r24, 0x0D	; 13
 304:	0e 94 79 01 	call	0x2f2	; 0x2f2 <USART_Transmit>
	}
	USART_Transmit(c);
 308:	8c 2f       	mov	r24, r28
 30a:	0e 94 79 01 	call	0x2f2	; 0x2f2 <USART_Transmit>
	return 0;
}
 30e:	80 e0       	ldi	r24, 0x00	; 0
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	cf 91       	pop	r28
 314:	08 95       	ret

00000316 <USART_Receive_Char>:

int USART_Receive_Char(FILE *stream)
{
/* Wait until data is received */
	while (!(UCSR0A & (1 << RXC0)));
 316:	5f 9b       	sbis	0x0b, 7	; 11
 318:	fe cf       	rjmp	.-4      	; 0x316 <USART_Receive_Char>
	return UDR0;
 31a:	8c b1       	in	r24, 0x0c	; 12
}
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	08 95       	ret

00000320 <__divmodsi4>:
 320:	05 2e       	mov	r0, r21
 322:	97 fb       	bst	r25, 7
 324:	1e f4       	brtc	.+6      	; 0x32c <__divmodsi4+0xc>
 326:	00 94       	com	r0
 328:	0e 94 a7 01 	call	0x34e	; 0x34e <__negsi2>
 32c:	57 fd       	sbrc	r21, 7
 32e:	07 d0       	rcall	.+14     	; 0x33e <__divmodsi4_neg2>
 330:	0e 94 af 01 	call	0x35e	; 0x35e <__udivmodsi4>
 334:	07 fc       	sbrc	r0, 7
 336:	03 d0       	rcall	.+6      	; 0x33e <__divmodsi4_neg2>
 338:	4e f4       	brtc	.+18     	; 0x34c <__divmodsi4_exit>
 33a:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__negsi2>

0000033e <__divmodsi4_neg2>:
 33e:	50 95       	com	r21
 340:	40 95       	com	r20
 342:	30 95       	com	r19
 344:	21 95       	neg	r18
 346:	3f 4f       	sbci	r19, 0xFF	; 255
 348:	4f 4f       	sbci	r20, 0xFF	; 255
 34a:	5f 4f       	sbci	r21, 0xFF	; 255

0000034c <__divmodsi4_exit>:
 34c:	08 95       	ret

0000034e <__negsi2>:
 34e:	90 95       	com	r25
 350:	80 95       	com	r24
 352:	70 95       	com	r23
 354:	61 95       	neg	r22
 356:	7f 4f       	sbci	r23, 0xFF	; 255
 358:	8f 4f       	sbci	r24, 0xFF	; 255
 35a:	9f 4f       	sbci	r25, 0xFF	; 255
 35c:	08 95       	ret

0000035e <__udivmodsi4>:
 35e:	a1 e2       	ldi	r26, 0x21	; 33
 360:	1a 2e       	mov	r1, r26
 362:	aa 1b       	sub	r26, r26
 364:	bb 1b       	sub	r27, r27
 366:	fd 01       	movw	r30, r26
 368:	0d c0       	rjmp	.+26     	; 0x384 <__udivmodsi4_ep>

0000036a <__udivmodsi4_loop>:
 36a:	aa 1f       	adc	r26, r26
 36c:	bb 1f       	adc	r27, r27
 36e:	ee 1f       	adc	r30, r30
 370:	ff 1f       	adc	r31, r31
 372:	a2 17       	cp	r26, r18
 374:	b3 07       	cpc	r27, r19
 376:	e4 07       	cpc	r30, r20
 378:	f5 07       	cpc	r31, r21
 37a:	20 f0       	brcs	.+8      	; 0x384 <__udivmodsi4_ep>
 37c:	a2 1b       	sub	r26, r18
 37e:	b3 0b       	sbc	r27, r19
 380:	e4 0b       	sbc	r30, r20
 382:	f5 0b       	sbc	r31, r21

00000384 <__udivmodsi4_ep>:
 384:	66 1f       	adc	r22, r22
 386:	77 1f       	adc	r23, r23
 388:	88 1f       	adc	r24, r24
 38a:	99 1f       	adc	r25, r25
 38c:	1a 94       	dec	r1
 38e:	69 f7       	brne	.-38     	; 0x36a <__udivmodsi4_loop>
 390:	60 95       	com	r22
 392:	70 95       	com	r23
 394:	80 95       	com	r24
 396:	90 95       	com	r25
 398:	9b 01       	movw	r18, r22
 39a:	ac 01       	movw	r20, r24
 39c:	bd 01       	movw	r22, r26
 39e:	cf 01       	movw	r24, r30
 3a0:	08 95       	ret

000003a2 <fdevopen>:
 3a2:	0f 93       	push	r16
 3a4:	1f 93       	push	r17
 3a6:	cf 93       	push	r28
 3a8:	df 93       	push	r29
 3aa:	00 97       	sbiw	r24, 0x00	; 0
 3ac:	31 f4       	brne	.+12     	; 0x3ba <fdevopen+0x18>
 3ae:	61 15       	cp	r22, r1
 3b0:	71 05       	cpc	r23, r1
 3b2:	19 f4       	brne	.+6      	; 0x3ba <fdevopen+0x18>
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	3a c0       	rjmp	.+116    	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 3ba:	8b 01       	movw	r16, r22
 3bc:	ec 01       	movw	r28, r24
 3be:	6e e0       	ldi	r22, 0x0E	; 14
 3c0:	70 e0       	ldi	r23, 0x00	; 0
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	0e 94 13 04 	call	0x826	; 0x826 <calloc>
 3ca:	fc 01       	movw	r30, r24
 3cc:	89 2b       	or	r24, r25
 3ce:	91 f3       	breq	.-28     	; 0x3b4 <fdevopen+0x12>
 3d0:	80 e8       	ldi	r24, 0x80	; 128
 3d2:	83 83       	std	Z+3, r24	; 0x03
 3d4:	01 15       	cp	r16, r1
 3d6:	11 05       	cpc	r17, r1
 3d8:	71 f0       	breq	.+28     	; 0x3f6 <fdevopen+0x54>
 3da:	13 87       	std	Z+11, r17	; 0x0b
 3dc:	02 87       	std	Z+10, r16	; 0x0a
 3de:	81 e8       	ldi	r24, 0x81	; 129
 3e0:	83 83       	std	Z+3, r24	; 0x03
 3e2:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <__data_end>
 3e6:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <__data_end+0x1>
 3ea:	89 2b       	or	r24, r25
 3ec:	21 f4       	brne	.+8      	; 0x3f6 <fdevopen+0x54>
 3ee:	f0 93 e3 01 	sts	0x01E3, r31	; 0x8001e3 <__data_end+0x1>
 3f2:	e0 93 e2 01 	sts	0x01E2, r30	; 0x8001e2 <__data_end>
 3f6:	20 97       	sbiw	r28, 0x00	; 0
 3f8:	c9 f0       	breq	.+50     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 3fa:	d1 87       	std	Z+9, r29	; 0x09
 3fc:	c0 87       	std	Z+8, r28	; 0x08
 3fe:	83 81       	ldd	r24, Z+3	; 0x03
 400:	82 60       	ori	r24, 0x02	; 2
 402:	83 83       	std	Z+3, r24	; 0x03
 404:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end+0x2>
 408:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <__data_end+0x3>
 40c:	89 2b       	or	r24, r25
 40e:	71 f4       	brne	.+28     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 410:	f0 93 e5 01 	sts	0x01E5, r31	; 0x8001e5 <__data_end+0x3>
 414:	e0 93 e4 01 	sts	0x01E4, r30	; 0x8001e4 <__data_end+0x2>
 418:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <__data_end+0x4>
 41c:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <__data_end+0x5>
 420:	89 2b       	or	r24, r25
 422:	21 f4       	brne	.+8      	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 424:	f0 93 e7 01 	sts	0x01E7, r31	; 0x8001e7 <__data_end+0x5>
 428:	e0 93 e6 01 	sts	0x01E6, r30	; 0x8001e6 <__data_end+0x4>
 42c:	cf 01       	movw	r24, r30
 42e:	df 91       	pop	r29
 430:	cf 91       	pop	r28
 432:	1f 91       	pop	r17
 434:	0f 91       	pop	r16
 436:	08 95       	ret

00000438 <printf>:
 438:	a0 e0       	ldi	r26, 0x00	; 0
 43a:	b0 e0       	ldi	r27, 0x00	; 0
 43c:	e2 e2       	ldi	r30, 0x22	; 34
 43e:	f2 e0       	ldi	r31, 0x02	; 2
 440:	0c 94 17 06 	jmp	0xc2e	; 0xc2e <__prologue_saves__+0x20>
 444:	ae 01       	movw	r20, r28
 446:	4b 5f       	subi	r20, 0xFB	; 251
 448:	5f 4f       	sbci	r21, 0xFF	; 255
 44a:	fa 01       	movw	r30, r20
 44c:	61 91       	ld	r22, Z+
 44e:	71 91       	ld	r23, Z+
 450:	af 01       	movw	r20, r30
 452:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end+0x2>
 456:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <__data_end+0x3>
 45a:	0e 94 32 02 	call	0x464	; 0x464 <vfprintf>
 45e:	e2 e0       	ldi	r30, 0x02	; 2
 460:	0c 94 33 06 	jmp	0xc66	; 0xc66 <__epilogue_restores__+0x20>

00000464 <vfprintf>:
 464:	ab e0       	ldi	r26, 0x0B	; 11
 466:	b0 e0       	ldi	r27, 0x00	; 0
 468:	e8 e3       	ldi	r30, 0x38	; 56
 46a:	f2 e0       	ldi	r31, 0x02	; 2
 46c:	0c 94 07 06 	jmp	0xc0e	; 0xc0e <__prologue_saves__>
 470:	6c 01       	movw	r12, r24
 472:	7b 01       	movw	r14, r22
 474:	8a 01       	movw	r16, r20
 476:	fc 01       	movw	r30, r24
 478:	17 82       	std	Z+7, r1	; 0x07
 47a:	16 82       	std	Z+6, r1	; 0x06
 47c:	83 81       	ldd	r24, Z+3	; 0x03
 47e:	81 ff       	sbrs	r24, 1
 480:	cc c1       	rjmp	.+920    	; 0x81a <__stack+0x31b>
 482:	ce 01       	movw	r24, r28
 484:	01 96       	adiw	r24, 0x01	; 1
 486:	3c 01       	movw	r6, r24
 488:	f6 01       	movw	r30, r12
 48a:	93 81       	ldd	r25, Z+3	; 0x03
 48c:	f7 01       	movw	r30, r14
 48e:	93 fd       	sbrc	r25, 3
 490:	85 91       	lpm	r24, Z+
 492:	93 ff       	sbrs	r25, 3
 494:	81 91       	ld	r24, Z+
 496:	7f 01       	movw	r14, r30
 498:	88 23       	and	r24, r24
 49a:	09 f4       	brne	.+2      	; 0x49e <vfprintf+0x3a>
 49c:	ba c1       	rjmp	.+884    	; 0x812 <__stack+0x313>
 49e:	85 32       	cpi	r24, 0x25	; 37
 4a0:	39 f4       	brne	.+14     	; 0x4b0 <vfprintf+0x4c>
 4a2:	93 fd       	sbrc	r25, 3
 4a4:	85 91       	lpm	r24, Z+
 4a6:	93 ff       	sbrs	r25, 3
 4a8:	81 91       	ld	r24, Z+
 4aa:	7f 01       	movw	r14, r30
 4ac:	85 32       	cpi	r24, 0x25	; 37
 4ae:	29 f4       	brne	.+10     	; 0x4ba <vfprintf+0x56>
 4b0:	b6 01       	movw	r22, r12
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	0e 94 6d 05 	call	0xada	; 0xada <fputc>
 4b8:	e7 cf       	rjmp	.-50     	; 0x488 <vfprintf+0x24>
 4ba:	91 2c       	mov	r9, r1
 4bc:	21 2c       	mov	r2, r1
 4be:	31 2c       	mov	r3, r1
 4c0:	ff e1       	ldi	r31, 0x1F	; 31
 4c2:	f3 15       	cp	r31, r3
 4c4:	d8 f0       	brcs	.+54     	; 0x4fc <vfprintf+0x98>
 4c6:	8b 32       	cpi	r24, 0x2B	; 43
 4c8:	79 f0       	breq	.+30     	; 0x4e8 <vfprintf+0x84>
 4ca:	38 f4       	brcc	.+14     	; 0x4da <vfprintf+0x76>
 4cc:	80 32       	cpi	r24, 0x20	; 32
 4ce:	79 f0       	breq	.+30     	; 0x4ee <vfprintf+0x8a>
 4d0:	83 32       	cpi	r24, 0x23	; 35
 4d2:	a1 f4       	brne	.+40     	; 0x4fc <vfprintf+0x98>
 4d4:	23 2d       	mov	r18, r3
 4d6:	20 61       	ori	r18, 0x10	; 16
 4d8:	1d c0       	rjmp	.+58     	; 0x514 <__stack+0x15>
 4da:	8d 32       	cpi	r24, 0x2D	; 45
 4dc:	61 f0       	breq	.+24     	; 0x4f6 <vfprintf+0x92>
 4de:	80 33       	cpi	r24, 0x30	; 48
 4e0:	69 f4       	brne	.+26     	; 0x4fc <vfprintf+0x98>
 4e2:	23 2d       	mov	r18, r3
 4e4:	21 60       	ori	r18, 0x01	; 1
 4e6:	16 c0       	rjmp	.+44     	; 0x514 <__stack+0x15>
 4e8:	83 2d       	mov	r24, r3
 4ea:	82 60       	ori	r24, 0x02	; 2
 4ec:	38 2e       	mov	r3, r24
 4ee:	e3 2d       	mov	r30, r3
 4f0:	e4 60       	ori	r30, 0x04	; 4
 4f2:	3e 2e       	mov	r3, r30
 4f4:	2a c0       	rjmp	.+84     	; 0x54a <__stack+0x4b>
 4f6:	f3 2d       	mov	r31, r3
 4f8:	f8 60       	ori	r31, 0x08	; 8
 4fa:	1d c0       	rjmp	.+58     	; 0x536 <__stack+0x37>
 4fc:	37 fc       	sbrc	r3, 7
 4fe:	2d c0       	rjmp	.+90     	; 0x55a <__stack+0x5b>
 500:	20 ed       	ldi	r18, 0xD0	; 208
 502:	28 0f       	add	r18, r24
 504:	2a 30       	cpi	r18, 0x0A	; 10
 506:	40 f0       	brcs	.+16     	; 0x518 <__stack+0x19>
 508:	8e 32       	cpi	r24, 0x2E	; 46
 50a:	b9 f4       	brne	.+46     	; 0x53a <__stack+0x3b>
 50c:	36 fc       	sbrc	r3, 6
 50e:	81 c1       	rjmp	.+770    	; 0x812 <__stack+0x313>
 510:	23 2d       	mov	r18, r3
 512:	20 64       	ori	r18, 0x40	; 64
 514:	32 2e       	mov	r3, r18
 516:	19 c0       	rjmp	.+50     	; 0x54a <__stack+0x4b>
 518:	36 fe       	sbrs	r3, 6
 51a:	06 c0       	rjmp	.+12     	; 0x528 <__stack+0x29>
 51c:	8a e0       	ldi	r24, 0x0A	; 10
 51e:	98 9e       	mul	r9, r24
 520:	20 0d       	add	r18, r0
 522:	11 24       	eor	r1, r1
 524:	92 2e       	mov	r9, r18
 526:	11 c0       	rjmp	.+34     	; 0x54a <__stack+0x4b>
 528:	ea e0       	ldi	r30, 0x0A	; 10
 52a:	2e 9e       	mul	r2, r30
 52c:	20 0d       	add	r18, r0
 52e:	11 24       	eor	r1, r1
 530:	22 2e       	mov	r2, r18
 532:	f3 2d       	mov	r31, r3
 534:	f0 62       	ori	r31, 0x20	; 32
 536:	3f 2e       	mov	r3, r31
 538:	08 c0       	rjmp	.+16     	; 0x54a <__stack+0x4b>
 53a:	8c 36       	cpi	r24, 0x6C	; 108
 53c:	21 f4       	brne	.+8      	; 0x546 <__stack+0x47>
 53e:	83 2d       	mov	r24, r3
 540:	80 68       	ori	r24, 0x80	; 128
 542:	38 2e       	mov	r3, r24
 544:	02 c0       	rjmp	.+4      	; 0x54a <__stack+0x4b>
 546:	88 36       	cpi	r24, 0x68	; 104
 548:	41 f4       	brne	.+16     	; 0x55a <__stack+0x5b>
 54a:	f7 01       	movw	r30, r14
 54c:	93 fd       	sbrc	r25, 3
 54e:	85 91       	lpm	r24, Z+
 550:	93 ff       	sbrs	r25, 3
 552:	81 91       	ld	r24, Z+
 554:	7f 01       	movw	r14, r30
 556:	81 11       	cpse	r24, r1
 558:	b3 cf       	rjmp	.-154    	; 0x4c0 <vfprintf+0x5c>
 55a:	98 2f       	mov	r25, r24
 55c:	9f 7d       	andi	r25, 0xDF	; 223
 55e:	95 54       	subi	r25, 0x45	; 69
 560:	93 30       	cpi	r25, 0x03	; 3
 562:	28 f4       	brcc	.+10     	; 0x56e <__stack+0x6f>
 564:	0c 5f       	subi	r16, 0xFC	; 252
 566:	1f 4f       	sbci	r17, 0xFF	; 255
 568:	9f e3       	ldi	r25, 0x3F	; 63
 56a:	99 83       	std	Y+1, r25	; 0x01
 56c:	0d c0       	rjmp	.+26     	; 0x588 <__stack+0x89>
 56e:	83 36       	cpi	r24, 0x63	; 99
 570:	31 f0       	breq	.+12     	; 0x57e <__stack+0x7f>
 572:	83 37       	cpi	r24, 0x73	; 115
 574:	71 f0       	breq	.+28     	; 0x592 <__stack+0x93>
 576:	83 35       	cpi	r24, 0x53	; 83
 578:	09 f0       	breq	.+2      	; 0x57c <__stack+0x7d>
 57a:	59 c0       	rjmp	.+178    	; 0x62e <__stack+0x12f>
 57c:	21 c0       	rjmp	.+66     	; 0x5c0 <__stack+0xc1>
 57e:	f8 01       	movw	r30, r16
 580:	80 81       	ld	r24, Z
 582:	89 83       	std	Y+1, r24	; 0x01
 584:	0e 5f       	subi	r16, 0xFE	; 254
 586:	1f 4f       	sbci	r17, 0xFF	; 255
 588:	88 24       	eor	r8, r8
 58a:	83 94       	inc	r8
 58c:	91 2c       	mov	r9, r1
 58e:	53 01       	movw	r10, r6
 590:	13 c0       	rjmp	.+38     	; 0x5b8 <__stack+0xb9>
 592:	28 01       	movw	r4, r16
 594:	f2 e0       	ldi	r31, 0x02	; 2
 596:	4f 0e       	add	r4, r31
 598:	51 1c       	adc	r5, r1
 59a:	f8 01       	movw	r30, r16
 59c:	a0 80       	ld	r10, Z
 59e:	b1 80       	ldd	r11, Z+1	; 0x01
 5a0:	36 fe       	sbrs	r3, 6
 5a2:	03 c0       	rjmp	.+6      	; 0x5aa <__stack+0xab>
 5a4:	69 2d       	mov	r22, r9
 5a6:	70 e0       	ldi	r23, 0x00	; 0
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <__stack+0xaf>
 5aa:	6f ef       	ldi	r22, 0xFF	; 255
 5ac:	7f ef       	ldi	r23, 0xFF	; 255
 5ae:	c5 01       	movw	r24, r10
 5b0:	0e 94 62 05 	call	0xac4	; 0xac4 <strnlen>
 5b4:	4c 01       	movw	r8, r24
 5b6:	82 01       	movw	r16, r4
 5b8:	f3 2d       	mov	r31, r3
 5ba:	ff 77       	andi	r31, 0x7F	; 127
 5bc:	3f 2e       	mov	r3, r31
 5be:	16 c0       	rjmp	.+44     	; 0x5ec <__stack+0xed>
 5c0:	28 01       	movw	r4, r16
 5c2:	22 e0       	ldi	r18, 0x02	; 2
 5c4:	42 0e       	add	r4, r18
 5c6:	51 1c       	adc	r5, r1
 5c8:	f8 01       	movw	r30, r16
 5ca:	a0 80       	ld	r10, Z
 5cc:	b1 80       	ldd	r11, Z+1	; 0x01
 5ce:	36 fe       	sbrs	r3, 6
 5d0:	03 c0       	rjmp	.+6      	; 0x5d8 <__stack+0xd9>
 5d2:	69 2d       	mov	r22, r9
 5d4:	70 e0       	ldi	r23, 0x00	; 0
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <__stack+0xdd>
 5d8:	6f ef       	ldi	r22, 0xFF	; 255
 5da:	7f ef       	ldi	r23, 0xFF	; 255
 5dc:	c5 01       	movw	r24, r10
 5de:	0e 94 50 05 	call	0xaa0	; 0xaa0 <strnlen_P>
 5e2:	4c 01       	movw	r8, r24
 5e4:	f3 2d       	mov	r31, r3
 5e6:	f0 68       	ori	r31, 0x80	; 128
 5e8:	3f 2e       	mov	r3, r31
 5ea:	82 01       	movw	r16, r4
 5ec:	33 fc       	sbrc	r3, 3
 5ee:	1b c0       	rjmp	.+54     	; 0x626 <__stack+0x127>
 5f0:	82 2d       	mov	r24, r2
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	88 16       	cp	r8, r24
 5f6:	99 06       	cpc	r9, r25
 5f8:	b0 f4       	brcc	.+44     	; 0x626 <__stack+0x127>
 5fa:	b6 01       	movw	r22, r12
 5fc:	80 e2       	ldi	r24, 0x20	; 32
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	0e 94 6d 05 	call	0xada	; 0xada <fputc>
 604:	2a 94       	dec	r2
 606:	f4 cf       	rjmp	.-24     	; 0x5f0 <__stack+0xf1>
 608:	f5 01       	movw	r30, r10
 60a:	37 fc       	sbrc	r3, 7
 60c:	85 91       	lpm	r24, Z+
 60e:	37 fe       	sbrs	r3, 7
 610:	81 91       	ld	r24, Z+
 612:	5f 01       	movw	r10, r30
 614:	b6 01       	movw	r22, r12
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	0e 94 6d 05 	call	0xada	; 0xada <fputc>
 61c:	21 10       	cpse	r2, r1
 61e:	2a 94       	dec	r2
 620:	21 e0       	ldi	r18, 0x01	; 1
 622:	82 1a       	sub	r8, r18
 624:	91 08       	sbc	r9, r1
 626:	81 14       	cp	r8, r1
 628:	91 04       	cpc	r9, r1
 62a:	71 f7       	brne	.-36     	; 0x608 <__stack+0x109>
 62c:	e8 c0       	rjmp	.+464    	; 0x7fe <__stack+0x2ff>
 62e:	84 36       	cpi	r24, 0x64	; 100
 630:	11 f0       	breq	.+4      	; 0x636 <__stack+0x137>
 632:	89 36       	cpi	r24, 0x69	; 105
 634:	41 f5       	brne	.+80     	; 0x686 <__stack+0x187>
 636:	f8 01       	movw	r30, r16
 638:	37 fe       	sbrs	r3, 7
 63a:	07 c0       	rjmp	.+14     	; 0x64a <__stack+0x14b>
 63c:	60 81       	ld	r22, Z
 63e:	71 81       	ldd	r23, Z+1	; 0x01
 640:	82 81       	ldd	r24, Z+2	; 0x02
 642:	93 81       	ldd	r25, Z+3	; 0x03
 644:	0c 5f       	subi	r16, 0xFC	; 252
 646:	1f 4f       	sbci	r17, 0xFF	; 255
 648:	08 c0       	rjmp	.+16     	; 0x65a <__stack+0x15b>
 64a:	60 81       	ld	r22, Z
 64c:	71 81       	ldd	r23, Z+1	; 0x01
 64e:	07 2e       	mov	r0, r23
 650:	00 0c       	add	r0, r0
 652:	88 0b       	sbc	r24, r24
 654:	99 0b       	sbc	r25, r25
 656:	0e 5f       	subi	r16, 0xFE	; 254
 658:	1f 4f       	sbci	r17, 0xFF	; 255
 65a:	f3 2d       	mov	r31, r3
 65c:	ff 76       	andi	r31, 0x6F	; 111
 65e:	3f 2e       	mov	r3, r31
 660:	97 ff       	sbrs	r25, 7
 662:	09 c0       	rjmp	.+18     	; 0x676 <__stack+0x177>
 664:	90 95       	com	r25
 666:	80 95       	com	r24
 668:	70 95       	com	r23
 66a:	61 95       	neg	r22
 66c:	7f 4f       	sbci	r23, 0xFF	; 255
 66e:	8f 4f       	sbci	r24, 0xFF	; 255
 670:	9f 4f       	sbci	r25, 0xFF	; 255
 672:	f0 68       	ori	r31, 0x80	; 128
 674:	3f 2e       	mov	r3, r31
 676:	2a e0       	ldi	r18, 0x0A	; 10
 678:	30 e0       	ldi	r19, 0x00	; 0
 67a:	a3 01       	movw	r20, r6
 67c:	0e 94 a9 05 	call	0xb52	; 0xb52 <__ultoa_invert>
 680:	88 2e       	mov	r8, r24
 682:	86 18       	sub	r8, r6
 684:	45 c0       	rjmp	.+138    	; 0x710 <__stack+0x211>
 686:	85 37       	cpi	r24, 0x75	; 117
 688:	31 f4       	brne	.+12     	; 0x696 <__stack+0x197>
 68a:	23 2d       	mov	r18, r3
 68c:	2f 7e       	andi	r18, 0xEF	; 239
 68e:	b2 2e       	mov	r11, r18
 690:	2a e0       	ldi	r18, 0x0A	; 10
 692:	30 e0       	ldi	r19, 0x00	; 0
 694:	25 c0       	rjmp	.+74     	; 0x6e0 <__stack+0x1e1>
 696:	93 2d       	mov	r25, r3
 698:	99 7f       	andi	r25, 0xF9	; 249
 69a:	b9 2e       	mov	r11, r25
 69c:	8f 36       	cpi	r24, 0x6F	; 111
 69e:	c1 f0       	breq	.+48     	; 0x6d0 <__stack+0x1d1>
 6a0:	18 f4       	brcc	.+6      	; 0x6a8 <__stack+0x1a9>
 6a2:	88 35       	cpi	r24, 0x58	; 88
 6a4:	79 f0       	breq	.+30     	; 0x6c4 <__stack+0x1c5>
 6a6:	b5 c0       	rjmp	.+362    	; 0x812 <__stack+0x313>
 6a8:	80 37       	cpi	r24, 0x70	; 112
 6aa:	19 f0       	breq	.+6      	; 0x6b2 <__stack+0x1b3>
 6ac:	88 37       	cpi	r24, 0x78	; 120
 6ae:	21 f0       	breq	.+8      	; 0x6b8 <__stack+0x1b9>
 6b0:	b0 c0       	rjmp	.+352    	; 0x812 <__stack+0x313>
 6b2:	e9 2f       	mov	r30, r25
 6b4:	e0 61       	ori	r30, 0x10	; 16
 6b6:	be 2e       	mov	r11, r30
 6b8:	b4 fe       	sbrs	r11, 4
 6ba:	0d c0       	rjmp	.+26     	; 0x6d6 <__stack+0x1d7>
 6bc:	fb 2d       	mov	r31, r11
 6be:	f4 60       	ori	r31, 0x04	; 4
 6c0:	bf 2e       	mov	r11, r31
 6c2:	09 c0       	rjmp	.+18     	; 0x6d6 <__stack+0x1d7>
 6c4:	34 fe       	sbrs	r3, 4
 6c6:	0a c0       	rjmp	.+20     	; 0x6dc <__stack+0x1dd>
 6c8:	29 2f       	mov	r18, r25
 6ca:	26 60       	ori	r18, 0x06	; 6
 6cc:	b2 2e       	mov	r11, r18
 6ce:	06 c0       	rjmp	.+12     	; 0x6dc <__stack+0x1dd>
 6d0:	28 e0       	ldi	r18, 0x08	; 8
 6d2:	30 e0       	ldi	r19, 0x00	; 0
 6d4:	05 c0       	rjmp	.+10     	; 0x6e0 <__stack+0x1e1>
 6d6:	20 e1       	ldi	r18, 0x10	; 16
 6d8:	30 e0       	ldi	r19, 0x00	; 0
 6da:	02 c0       	rjmp	.+4      	; 0x6e0 <__stack+0x1e1>
 6dc:	20 e1       	ldi	r18, 0x10	; 16
 6de:	32 e0       	ldi	r19, 0x02	; 2
 6e0:	f8 01       	movw	r30, r16
 6e2:	b7 fe       	sbrs	r11, 7
 6e4:	07 c0       	rjmp	.+14     	; 0x6f4 <__stack+0x1f5>
 6e6:	60 81       	ld	r22, Z
 6e8:	71 81       	ldd	r23, Z+1	; 0x01
 6ea:	82 81       	ldd	r24, Z+2	; 0x02
 6ec:	93 81       	ldd	r25, Z+3	; 0x03
 6ee:	0c 5f       	subi	r16, 0xFC	; 252
 6f0:	1f 4f       	sbci	r17, 0xFF	; 255
 6f2:	06 c0       	rjmp	.+12     	; 0x700 <__stack+0x201>
 6f4:	60 81       	ld	r22, Z
 6f6:	71 81       	ldd	r23, Z+1	; 0x01
 6f8:	80 e0       	ldi	r24, 0x00	; 0
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	0e 5f       	subi	r16, 0xFE	; 254
 6fe:	1f 4f       	sbci	r17, 0xFF	; 255
 700:	a3 01       	movw	r20, r6
 702:	0e 94 a9 05 	call	0xb52	; 0xb52 <__ultoa_invert>
 706:	88 2e       	mov	r8, r24
 708:	86 18       	sub	r8, r6
 70a:	fb 2d       	mov	r31, r11
 70c:	ff 77       	andi	r31, 0x7F	; 127
 70e:	3f 2e       	mov	r3, r31
 710:	36 fe       	sbrs	r3, 6
 712:	0d c0       	rjmp	.+26     	; 0x72e <__stack+0x22f>
 714:	23 2d       	mov	r18, r3
 716:	2e 7f       	andi	r18, 0xFE	; 254
 718:	a2 2e       	mov	r10, r18
 71a:	89 14       	cp	r8, r9
 71c:	58 f4       	brcc	.+22     	; 0x734 <__stack+0x235>
 71e:	34 fe       	sbrs	r3, 4
 720:	0b c0       	rjmp	.+22     	; 0x738 <__stack+0x239>
 722:	32 fc       	sbrc	r3, 2
 724:	09 c0       	rjmp	.+18     	; 0x738 <__stack+0x239>
 726:	83 2d       	mov	r24, r3
 728:	8e 7e       	andi	r24, 0xEE	; 238
 72a:	a8 2e       	mov	r10, r24
 72c:	05 c0       	rjmp	.+10     	; 0x738 <__stack+0x239>
 72e:	b8 2c       	mov	r11, r8
 730:	a3 2c       	mov	r10, r3
 732:	03 c0       	rjmp	.+6      	; 0x73a <__stack+0x23b>
 734:	b8 2c       	mov	r11, r8
 736:	01 c0       	rjmp	.+2      	; 0x73a <__stack+0x23b>
 738:	b9 2c       	mov	r11, r9
 73a:	a4 fe       	sbrs	r10, 4
 73c:	0f c0       	rjmp	.+30     	; 0x75c <__stack+0x25d>
 73e:	fe 01       	movw	r30, r28
 740:	e8 0d       	add	r30, r8
 742:	f1 1d       	adc	r31, r1
 744:	80 81       	ld	r24, Z
 746:	80 33       	cpi	r24, 0x30	; 48
 748:	21 f4       	brne	.+8      	; 0x752 <__stack+0x253>
 74a:	9a 2d       	mov	r25, r10
 74c:	99 7e       	andi	r25, 0xE9	; 233
 74e:	a9 2e       	mov	r10, r25
 750:	09 c0       	rjmp	.+18     	; 0x764 <__stack+0x265>
 752:	a2 fe       	sbrs	r10, 2
 754:	06 c0       	rjmp	.+12     	; 0x762 <__stack+0x263>
 756:	b3 94       	inc	r11
 758:	b3 94       	inc	r11
 75a:	04 c0       	rjmp	.+8      	; 0x764 <__stack+0x265>
 75c:	8a 2d       	mov	r24, r10
 75e:	86 78       	andi	r24, 0x86	; 134
 760:	09 f0       	breq	.+2      	; 0x764 <__stack+0x265>
 762:	b3 94       	inc	r11
 764:	a3 fc       	sbrc	r10, 3
 766:	11 c0       	rjmp	.+34     	; 0x78a <__stack+0x28b>
 768:	a0 fe       	sbrs	r10, 0
 76a:	06 c0       	rjmp	.+12     	; 0x778 <__stack+0x279>
 76c:	b2 14       	cp	r11, r2
 76e:	88 f4       	brcc	.+34     	; 0x792 <__stack+0x293>
 770:	28 0c       	add	r2, r8
 772:	92 2c       	mov	r9, r2
 774:	9b 18       	sub	r9, r11
 776:	0e c0       	rjmp	.+28     	; 0x794 <__stack+0x295>
 778:	b2 14       	cp	r11, r2
 77a:	60 f4       	brcc	.+24     	; 0x794 <__stack+0x295>
 77c:	b6 01       	movw	r22, r12
 77e:	80 e2       	ldi	r24, 0x20	; 32
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	0e 94 6d 05 	call	0xada	; 0xada <fputc>
 786:	b3 94       	inc	r11
 788:	f7 cf       	rjmp	.-18     	; 0x778 <__stack+0x279>
 78a:	b2 14       	cp	r11, r2
 78c:	18 f4       	brcc	.+6      	; 0x794 <__stack+0x295>
 78e:	2b 18       	sub	r2, r11
 790:	02 c0       	rjmp	.+4      	; 0x796 <__stack+0x297>
 792:	98 2c       	mov	r9, r8
 794:	21 2c       	mov	r2, r1
 796:	a4 fe       	sbrs	r10, 4
 798:	10 c0       	rjmp	.+32     	; 0x7ba <__stack+0x2bb>
 79a:	b6 01       	movw	r22, r12
 79c:	80 e3       	ldi	r24, 0x30	; 48
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	0e 94 6d 05 	call	0xada	; 0xada <fputc>
 7a4:	a2 fe       	sbrs	r10, 2
 7a6:	17 c0       	rjmp	.+46     	; 0x7d6 <__stack+0x2d7>
 7a8:	a1 fc       	sbrc	r10, 1
 7aa:	03 c0       	rjmp	.+6      	; 0x7b2 <__stack+0x2b3>
 7ac:	88 e7       	ldi	r24, 0x78	; 120
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	02 c0       	rjmp	.+4      	; 0x7b6 <__stack+0x2b7>
 7b2:	88 e5       	ldi	r24, 0x58	; 88
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	b6 01       	movw	r22, r12
 7b8:	0c c0       	rjmp	.+24     	; 0x7d2 <__stack+0x2d3>
 7ba:	8a 2d       	mov	r24, r10
 7bc:	86 78       	andi	r24, 0x86	; 134
 7be:	59 f0       	breq	.+22     	; 0x7d6 <__stack+0x2d7>
 7c0:	a1 fe       	sbrs	r10, 1
 7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <__stack+0x2c9>
 7c4:	8b e2       	ldi	r24, 0x2B	; 43
 7c6:	01 c0       	rjmp	.+2      	; 0x7ca <__stack+0x2cb>
 7c8:	80 e2       	ldi	r24, 0x20	; 32
 7ca:	a7 fc       	sbrc	r10, 7
 7cc:	8d e2       	ldi	r24, 0x2D	; 45
 7ce:	b6 01       	movw	r22, r12
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	0e 94 6d 05 	call	0xada	; 0xada <fputc>
 7d6:	89 14       	cp	r8, r9
 7d8:	38 f4       	brcc	.+14     	; 0x7e8 <__stack+0x2e9>
 7da:	b6 01       	movw	r22, r12
 7dc:	80 e3       	ldi	r24, 0x30	; 48
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	0e 94 6d 05 	call	0xada	; 0xada <fputc>
 7e4:	9a 94       	dec	r9
 7e6:	f7 cf       	rjmp	.-18     	; 0x7d6 <__stack+0x2d7>
 7e8:	8a 94       	dec	r8
 7ea:	f3 01       	movw	r30, r6
 7ec:	e8 0d       	add	r30, r8
 7ee:	f1 1d       	adc	r31, r1
 7f0:	80 81       	ld	r24, Z
 7f2:	b6 01       	movw	r22, r12
 7f4:	90 e0       	ldi	r25, 0x00	; 0
 7f6:	0e 94 6d 05 	call	0xada	; 0xada <fputc>
 7fa:	81 10       	cpse	r8, r1
 7fc:	f5 cf       	rjmp	.-22     	; 0x7e8 <__stack+0x2e9>
 7fe:	22 20       	and	r2, r2
 800:	09 f4       	brne	.+2      	; 0x804 <__stack+0x305>
 802:	42 ce       	rjmp	.-892    	; 0x488 <vfprintf+0x24>
 804:	b6 01       	movw	r22, r12
 806:	80 e2       	ldi	r24, 0x20	; 32
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	0e 94 6d 05 	call	0xada	; 0xada <fputc>
 80e:	2a 94       	dec	r2
 810:	f6 cf       	rjmp	.-20     	; 0x7fe <__stack+0x2ff>
 812:	f6 01       	movw	r30, r12
 814:	86 81       	ldd	r24, Z+6	; 0x06
 816:	97 81       	ldd	r25, Z+7	; 0x07
 818:	02 c0       	rjmp	.+4      	; 0x81e <__stack+0x31f>
 81a:	8f ef       	ldi	r24, 0xFF	; 255
 81c:	9f ef       	ldi	r25, 0xFF	; 255
 81e:	2b 96       	adiw	r28, 0x0b	; 11
 820:	e2 e1       	ldi	r30, 0x12	; 18
 822:	0c 94 23 06 	jmp	0xc46	; 0xc46 <__epilogue_restores__>

00000826 <calloc>:
 826:	0f 93       	push	r16
 828:	1f 93       	push	r17
 82a:	cf 93       	push	r28
 82c:	df 93       	push	r29
 82e:	86 9f       	mul	r24, r22
 830:	80 01       	movw	r16, r0
 832:	87 9f       	mul	r24, r23
 834:	10 0d       	add	r17, r0
 836:	96 9f       	mul	r25, r22
 838:	10 0d       	add	r17, r0
 83a:	11 24       	eor	r1, r1
 83c:	c8 01       	movw	r24, r16
 83e:	0e 94 2f 04 	call	0x85e	; 0x85e <malloc>
 842:	ec 01       	movw	r28, r24
 844:	00 97       	sbiw	r24, 0x00	; 0
 846:	29 f0       	breq	.+10     	; 0x852 <calloc+0x2c>
 848:	a8 01       	movw	r20, r16
 84a:	60 e0       	ldi	r22, 0x00	; 0
 84c:	70 e0       	ldi	r23, 0x00	; 0
 84e:	0e 94 5b 05 	call	0xab6	; 0xab6 <memset>
 852:	ce 01       	movw	r24, r28
 854:	df 91       	pop	r29
 856:	cf 91       	pop	r28
 858:	1f 91       	pop	r17
 85a:	0f 91       	pop	r16
 85c:	08 95       	ret

0000085e <malloc>:
 85e:	0f 93       	push	r16
 860:	1f 93       	push	r17
 862:	cf 93       	push	r28
 864:	df 93       	push	r29
 866:	82 30       	cpi	r24, 0x02	; 2
 868:	91 05       	cpc	r25, r1
 86a:	10 f4       	brcc	.+4      	; 0x870 <malloc+0x12>
 86c:	82 e0       	ldi	r24, 0x02	; 2
 86e:	90 e0       	ldi	r25, 0x00	; 0
 870:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <__flp>
 874:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <__flp+0x1>
 878:	20 e0       	ldi	r18, 0x00	; 0
 87a:	30 e0       	ldi	r19, 0x00	; 0
 87c:	a0 e0       	ldi	r26, 0x00	; 0
 87e:	b0 e0       	ldi	r27, 0x00	; 0
 880:	30 97       	sbiw	r30, 0x00	; 0
 882:	19 f1       	breq	.+70     	; 0x8ca <malloc+0x6c>
 884:	40 81       	ld	r20, Z
 886:	51 81       	ldd	r21, Z+1	; 0x01
 888:	02 81       	ldd	r16, Z+2	; 0x02
 88a:	13 81       	ldd	r17, Z+3	; 0x03
 88c:	48 17       	cp	r20, r24
 88e:	59 07       	cpc	r21, r25
 890:	c8 f0       	brcs	.+50     	; 0x8c4 <malloc+0x66>
 892:	84 17       	cp	r24, r20
 894:	95 07       	cpc	r25, r21
 896:	69 f4       	brne	.+26     	; 0x8b2 <malloc+0x54>
 898:	10 97       	sbiw	r26, 0x00	; 0
 89a:	31 f0       	breq	.+12     	; 0x8a8 <malloc+0x4a>
 89c:	12 96       	adiw	r26, 0x02	; 2
 89e:	0c 93       	st	X, r16
 8a0:	12 97       	sbiw	r26, 0x02	; 2
 8a2:	13 96       	adiw	r26, 0x03	; 3
 8a4:	1c 93       	st	X, r17
 8a6:	27 c0       	rjmp	.+78     	; 0x8f6 <malloc+0x98>
 8a8:	00 93 ea 01 	sts	0x01EA, r16	; 0x8001ea <__flp>
 8ac:	10 93 eb 01 	sts	0x01EB, r17	; 0x8001eb <__flp+0x1>
 8b0:	22 c0       	rjmp	.+68     	; 0x8f6 <malloc+0x98>
 8b2:	21 15       	cp	r18, r1
 8b4:	31 05       	cpc	r19, r1
 8b6:	19 f0       	breq	.+6      	; 0x8be <malloc+0x60>
 8b8:	42 17       	cp	r20, r18
 8ba:	53 07       	cpc	r21, r19
 8bc:	18 f4       	brcc	.+6      	; 0x8c4 <malloc+0x66>
 8be:	9a 01       	movw	r18, r20
 8c0:	bd 01       	movw	r22, r26
 8c2:	ef 01       	movw	r28, r30
 8c4:	df 01       	movw	r26, r30
 8c6:	f8 01       	movw	r30, r16
 8c8:	db cf       	rjmp	.-74     	; 0x880 <malloc+0x22>
 8ca:	21 15       	cp	r18, r1
 8cc:	31 05       	cpc	r19, r1
 8ce:	f9 f0       	breq	.+62     	; 0x90e <malloc+0xb0>
 8d0:	28 1b       	sub	r18, r24
 8d2:	39 0b       	sbc	r19, r25
 8d4:	24 30       	cpi	r18, 0x04	; 4
 8d6:	31 05       	cpc	r19, r1
 8d8:	80 f4       	brcc	.+32     	; 0x8fa <malloc+0x9c>
 8da:	8a 81       	ldd	r24, Y+2	; 0x02
 8dc:	9b 81       	ldd	r25, Y+3	; 0x03
 8de:	61 15       	cp	r22, r1
 8e0:	71 05       	cpc	r23, r1
 8e2:	21 f0       	breq	.+8      	; 0x8ec <malloc+0x8e>
 8e4:	fb 01       	movw	r30, r22
 8e6:	93 83       	std	Z+3, r25	; 0x03
 8e8:	82 83       	std	Z+2, r24	; 0x02
 8ea:	04 c0       	rjmp	.+8      	; 0x8f4 <malloc+0x96>
 8ec:	90 93 eb 01 	sts	0x01EB, r25	; 0x8001eb <__flp+0x1>
 8f0:	80 93 ea 01 	sts	0x01EA, r24	; 0x8001ea <__flp>
 8f4:	fe 01       	movw	r30, r28
 8f6:	32 96       	adiw	r30, 0x02	; 2
 8f8:	44 c0       	rjmp	.+136    	; 0x982 <malloc+0x124>
 8fa:	fe 01       	movw	r30, r28
 8fc:	e2 0f       	add	r30, r18
 8fe:	f3 1f       	adc	r31, r19
 900:	81 93       	st	Z+, r24
 902:	91 93       	st	Z+, r25
 904:	22 50       	subi	r18, 0x02	; 2
 906:	31 09       	sbc	r19, r1
 908:	39 83       	std	Y+1, r19	; 0x01
 90a:	28 83       	st	Y, r18
 90c:	3a c0       	rjmp	.+116    	; 0x982 <malloc+0x124>
 90e:	20 91 e8 01 	lds	r18, 0x01E8	; 0x8001e8 <__brkval>
 912:	30 91 e9 01 	lds	r19, 0x01E9	; 0x8001e9 <__brkval+0x1>
 916:	23 2b       	or	r18, r19
 918:	41 f4       	brne	.+16     	; 0x92a <malloc+0xcc>
 91a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 91e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 922:	30 93 e9 01 	sts	0x01E9, r19	; 0x8001e9 <__brkval+0x1>
 926:	20 93 e8 01 	sts	0x01E8, r18	; 0x8001e8 <__brkval>
 92a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 92e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 932:	21 15       	cp	r18, r1
 934:	31 05       	cpc	r19, r1
 936:	41 f4       	brne	.+16     	; 0x948 <malloc+0xea>
 938:	2d b7       	in	r18, 0x3d	; 61
 93a:	3e b7       	in	r19, 0x3e	; 62
 93c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 940:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 944:	24 1b       	sub	r18, r20
 946:	35 0b       	sbc	r19, r21
 948:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <__brkval>
 94c:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <__brkval+0x1>
 950:	e2 17       	cp	r30, r18
 952:	f3 07       	cpc	r31, r19
 954:	a0 f4       	brcc	.+40     	; 0x97e <malloc+0x120>
 956:	2e 1b       	sub	r18, r30
 958:	3f 0b       	sbc	r19, r31
 95a:	28 17       	cp	r18, r24
 95c:	39 07       	cpc	r19, r25
 95e:	78 f0       	brcs	.+30     	; 0x97e <malloc+0x120>
 960:	ac 01       	movw	r20, r24
 962:	4e 5f       	subi	r20, 0xFE	; 254
 964:	5f 4f       	sbci	r21, 0xFF	; 255
 966:	24 17       	cp	r18, r20
 968:	35 07       	cpc	r19, r21
 96a:	48 f0       	brcs	.+18     	; 0x97e <malloc+0x120>
 96c:	4e 0f       	add	r20, r30
 96e:	5f 1f       	adc	r21, r31
 970:	50 93 e9 01 	sts	0x01E9, r21	; 0x8001e9 <__brkval+0x1>
 974:	40 93 e8 01 	sts	0x01E8, r20	; 0x8001e8 <__brkval>
 978:	81 93       	st	Z+, r24
 97a:	91 93       	st	Z+, r25
 97c:	02 c0       	rjmp	.+4      	; 0x982 <malloc+0x124>
 97e:	e0 e0       	ldi	r30, 0x00	; 0
 980:	f0 e0       	ldi	r31, 0x00	; 0
 982:	cf 01       	movw	r24, r30
 984:	df 91       	pop	r29
 986:	cf 91       	pop	r28
 988:	1f 91       	pop	r17
 98a:	0f 91       	pop	r16
 98c:	08 95       	ret

0000098e <free>:
 98e:	cf 93       	push	r28
 990:	df 93       	push	r29
 992:	00 97       	sbiw	r24, 0x00	; 0
 994:	09 f4       	brne	.+2      	; 0x998 <free+0xa>
 996:	81 c0       	rjmp	.+258    	; 0xa9a <free+0x10c>
 998:	fc 01       	movw	r30, r24
 99a:	32 97       	sbiw	r30, 0x02	; 2
 99c:	13 82       	std	Z+3, r1	; 0x03
 99e:	12 82       	std	Z+2, r1	; 0x02
 9a0:	a0 91 ea 01 	lds	r26, 0x01EA	; 0x8001ea <__flp>
 9a4:	b0 91 eb 01 	lds	r27, 0x01EB	; 0x8001eb <__flp+0x1>
 9a8:	10 97       	sbiw	r26, 0x00	; 0
 9aa:	81 f4       	brne	.+32     	; 0x9cc <free+0x3e>
 9ac:	20 81       	ld	r18, Z
 9ae:	31 81       	ldd	r19, Z+1	; 0x01
 9b0:	82 0f       	add	r24, r18
 9b2:	93 1f       	adc	r25, r19
 9b4:	20 91 e8 01 	lds	r18, 0x01E8	; 0x8001e8 <__brkval>
 9b8:	30 91 e9 01 	lds	r19, 0x01E9	; 0x8001e9 <__brkval+0x1>
 9bc:	28 17       	cp	r18, r24
 9be:	39 07       	cpc	r19, r25
 9c0:	51 f5       	brne	.+84     	; 0xa16 <free+0x88>
 9c2:	f0 93 e9 01 	sts	0x01E9, r31	; 0x8001e9 <__brkval+0x1>
 9c6:	e0 93 e8 01 	sts	0x01E8, r30	; 0x8001e8 <__brkval>
 9ca:	67 c0       	rjmp	.+206    	; 0xa9a <free+0x10c>
 9cc:	ed 01       	movw	r28, r26
 9ce:	20 e0       	ldi	r18, 0x00	; 0
 9d0:	30 e0       	ldi	r19, 0x00	; 0
 9d2:	ce 17       	cp	r28, r30
 9d4:	df 07       	cpc	r29, r31
 9d6:	40 f4       	brcc	.+16     	; 0x9e8 <free+0x5a>
 9d8:	4a 81       	ldd	r20, Y+2	; 0x02
 9da:	5b 81       	ldd	r21, Y+3	; 0x03
 9dc:	9e 01       	movw	r18, r28
 9de:	41 15       	cp	r20, r1
 9e0:	51 05       	cpc	r21, r1
 9e2:	f1 f0       	breq	.+60     	; 0xa20 <free+0x92>
 9e4:	ea 01       	movw	r28, r20
 9e6:	f5 cf       	rjmp	.-22     	; 0x9d2 <free+0x44>
 9e8:	d3 83       	std	Z+3, r29	; 0x03
 9ea:	c2 83       	std	Z+2, r28	; 0x02
 9ec:	40 81       	ld	r20, Z
 9ee:	51 81       	ldd	r21, Z+1	; 0x01
 9f0:	84 0f       	add	r24, r20
 9f2:	95 1f       	adc	r25, r21
 9f4:	c8 17       	cp	r28, r24
 9f6:	d9 07       	cpc	r29, r25
 9f8:	59 f4       	brne	.+22     	; 0xa10 <free+0x82>
 9fa:	88 81       	ld	r24, Y
 9fc:	99 81       	ldd	r25, Y+1	; 0x01
 9fe:	84 0f       	add	r24, r20
 a00:	95 1f       	adc	r25, r21
 a02:	02 96       	adiw	r24, 0x02	; 2
 a04:	91 83       	std	Z+1, r25	; 0x01
 a06:	80 83       	st	Z, r24
 a08:	8a 81       	ldd	r24, Y+2	; 0x02
 a0a:	9b 81       	ldd	r25, Y+3	; 0x03
 a0c:	93 83       	std	Z+3, r25	; 0x03
 a0e:	82 83       	std	Z+2, r24	; 0x02
 a10:	21 15       	cp	r18, r1
 a12:	31 05       	cpc	r19, r1
 a14:	29 f4       	brne	.+10     	; 0xa20 <free+0x92>
 a16:	f0 93 eb 01 	sts	0x01EB, r31	; 0x8001eb <__flp+0x1>
 a1a:	e0 93 ea 01 	sts	0x01EA, r30	; 0x8001ea <__flp>
 a1e:	3d c0       	rjmp	.+122    	; 0xa9a <free+0x10c>
 a20:	e9 01       	movw	r28, r18
 a22:	fb 83       	std	Y+3, r31	; 0x03
 a24:	ea 83       	std	Y+2, r30	; 0x02
 a26:	49 91       	ld	r20, Y+
 a28:	59 91       	ld	r21, Y+
 a2a:	c4 0f       	add	r28, r20
 a2c:	d5 1f       	adc	r29, r21
 a2e:	ec 17       	cp	r30, r28
 a30:	fd 07       	cpc	r31, r29
 a32:	61 f4       	brne	.+24     	; 0xa4c <free+0xbe>
 a34:	80 81       	ld	r24, Z
 a36:	91 81       	ldd	r25, Z+1	; 0x01
 a38:	84 0f       	add	r24, r20
 a3a:	95 1f       	adc	r25, r21
 a3c:	02 96       	adiw	r24, 0x02	; 2
 a3e:	e9 01       	movw	r28, r18
 a40:	99 83       	std	Y+1, r25	; 0x01
 a42:	88 83       	st	Y, r24
 a44:	82 81       	ldd	r24, Z+2	; 0x02
 a46:	93 81       	ldd	r25, Z+3	; 0x03
 a48:	9b 83       	std	Y+3, r25	; 0x03
 a4a:	8a 83       	std	Y+2, r24	; 0x02
 a4c:	e0 e0       	ldi	r30, 0x00	; 0
 a4e:	f0 e0       	ldi	r31, 0x00	; 0
 a50:	12 96       	adiw	r26, 0x02	; 2
 a52:	8d 91       	ld	r24, X+
 a54:	9c 91       	ld	r25, X
 a56:	13 97       	sbiw	r26, 0x03	; 3
 a58:	00 97       	sbiw	r24, 0x00	; 0
 a5a:	19 f0       	breq	.+6      	; 0xa62 <free+0xd4>
 a5c:	fd 01       	movw	r30, r26
 a5e:	dc 01       	movw	r26, r24
 a60:	f7 cf       	rjmp	.-18     	; 0xa50 <free+0xc2>
 a62:	8d 91       	ld	r24, X+
 a64:	9c 91       	ld	r25, X
 a66:	11 97       	sbiw	r26, 0x01	; 1
 a68:	9d 01       	movw	r18, r26
 a6a:	2e 5f       	subi	r18, 0xFE	; 254
 a6c:	3f 4f       	sbci	r19, 0xFF	; 255
 a6e:	82 0f       	add	r24, r18
 a70:	93 1f       	adc	r25, r19
 a72:	20 91 e8 01 	lds	r18, 0x01E8	; 0x8001e8 <__brkval>
 a76:	30 91 e9 01 	lds	r19, 0x01E9	; 0x8001e9 <__brkval+0x1>
 a7a:	28 17       	cp	r18, r24
 a7c:	39 07       	cpc	r19, r25
 a7e:	69 f4       	brne	.+26     	; 0xa9a <free+0x10c>
 a80:	30 97       	sbiw	r30, 0x00	; 0
 a82:	29 f4       	brne	.+10     	; 0xa8e <free+0x100>
 a84:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <__flp+0x1>
 a88:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <__flp>
 a8c:	02 c0       	rjmp	.+4      	; 0xa92 <free+0x104>
 a8e:	13 82       	std	Z+3, r1	; 0x03
 a90:	12 82       	std	Z+2, r1	; 0x02
 a92:	b0 93 e9 01 	sts	0x01E9, r27	; 0x8001e9 <__brkval+0x1>
 a96:	a0 93 e8 01 	sts	0x01E8, r26	; 0x8001e8 <__brkval>
 a9a:	df 91       	pop	r29
 a9c:	cf 91       	pop	r28
 a9e:	08 95       	ret

00000aa0 <strnlen_P>:
 aa0:	fc 01       	movw	r30, r24
 aa2:	05 90       	lpm	r0, Z+
 aa4:	61 50       	subi	r22, 0x01	; 1
 aa6:	70 40       	sbci	r23, 0x00	; 0
 aa8:	01 10       	cpse	r0, r1
 aaa:	d8 f7       	brcc	.-10     	; 0xaa2 <strnlen_P+0x2>
 aac:	80 95       	com	r24
 aae:	90 95       	com	r25
 ab0:	8e 0f       	add	r24, r30
 ab2:	9f 1f       	adc	r25, r31
 ab4:	08 95       	ret

00000ab6 <memset>:
 ab6:	dc 01       	movw	r26, r24
 ab8:	01 c0       	rjmp	.+2      	; 0xabc <memset+0x6>
 aba:	6d 93       	st	X+, r22
 abc:	41 50       	subi	r20, 0x01	; 1
 abe:	50 40       	sbci	r21, 0x00	; 0
 ac0:	e0 f7       	brcc	.-8      	; 0xaba <memset+0x4>
 ac2:	08 95       	ret

00000ac4 <strnlen>:
 ac4:	fc 01       	movw	r30, r24
 ac6:	61 50       	subi	r22, 0x01	; 1
 ac8:	70 40       	sbci	r23, 0x00	; 0
 aca:	01 90       	ld	r0, Z+
 acc:	01 10       	cpse	r0, r1
 ace:	d8 f7       	brcc	.-10     	; 0xac6 <strnlen+0x2>
 ad0:	80 95       	com	r24
 ad2:	90 95       	com	r25
 ad4:	8e 0f       	add	r24, r30
 ad6:	9f 1f       	adc	r25, r31
 ad8:	08 95       	ret

00000ada <fputc>:
 ada:	0f 93       	push	r16
 adc:	1f 93       	push	r17
 ade:	cf 93       	push	r28
 ae0:	df 93       	push	r29
 ae2:	fb 01       	movw	r30, r22
 ae4:	23 81       	ldd	r18, Z+3	; 0x03
 ae6:	21 fd       	sbrc	r18, 1
 ae8:	03 c0       	rjmp	.+6      	; 0xaf0 <fputc+0x16>
 aea:	8f ef       	ldi	r24, 0xFF	; 255
 aec:	9f ef       	ldi	r25, 0xFF	; 255
 aee:	2c c0       	rjmp	.+88     	; 0xb48 <fputc+0x6e>
 af0:	22 ff       	sbrs	r18, 2
 af2:	16 c0       	rjmp	.+44     	; 0xb20 <fputc+0x46>
 af4:	46 81       	ldd	r20, Z+6	; 0x06
 af6:	57 81       	ldd	r21, Z+7	; 0x07
 af8:	24 81       	ldd	r18, Z+4	; 0x04
 afa:	35 81       	ldd	r19, Z+5	; 0x05
 afc:	42 17       	cp	r20, r18
 afe:	53 07       	cpc	r21, r19
 b00:	44 f4       	brge	.+16     	; 0xb12 <fputc+0x38>
 b02:	a0 81       	ld	r26, Z
 b04:	b1 81       	ldd	r27, Z+1	; 0x01
 b06:	9d 01       	movw	r18, r26
 b08:	2f 5f       	subi	r18, 0xFF	; 255
 b0a:	3f 4f       	sbci	r19, 0xFF	; 255
 b0c:	31 83       	std	Z+1, r19	; 0x01
 b0e:	20 83       	st	Z, r18
 b10:	8c 93       	st	X, r24
 b12:	26 81       	ldd	r18, Z+6	; 0x06
 b14:	37 81       	ldd	r19, Z+7	; 0x07
 b16:	2f 5f       	subi	r18, 0xFF	; 255
 b18:	3f 4f       	sbci	r19, 0xFF	; 255
 b1a:	37 83       	std	Z+7, r19	; 0x07
 b1c:	26 83       	std	Z+6, r18	; 0x06
 b1e:	14 c0       	rjmp	.+40     	; 0xb48 <fputc+0x6e>
 b20:	8b 01       	movw	r16, r22
 b22:	ec 01       	movw	r28, r24
 b24:	fb 01       	movw	r30, r22
 b26:	00 84       	ldd	r0, Z+8	; 0x08
 b28:	f1 85       	ldd	r31, Z+9	; 0x09
 b2a:	e0 2d       	mov	r30, r0
 b2c:	09 95       	icall
 b2e:	89 2b       	or	r24, r25
 b30:	e1 f6       	brne	.-72     	; 0xaea <fputc+0x10>
 b32:	d8 01       	movw	r26, r16
 b34:	16 96       	adiw	r26, 0x06	; 6
 b36:	8d 91       	ld	r24, X+
 b38:	9c 91       	ld	r25, X
 b3a:	17 97       	sbiw	r26, 0x07	; 7
 b3c:	01 96       	adiw	r24, 0x01	; 1
 b3e:	17 96       	adiw	r26, 0x07	; 7
 b40:	9c 93       	st	X, r25
 b42:	8e 93       	st	-X, r24
 b44:	16 97       	sbiw	r26, 0x06	; 6
 b46:	ce 01       	movw	r24, r28
 b48:	df 91       	pop	r29
 b4a:	cf 91       	pop	r28
 b4c:	1f 91       	pop	r17
 b4e:	0f 91       	pop	r16
 b50:	08 95       	ret

00000b52 <__ultoa_invert>:
 b52:	fa 01       	movw	r30, r20
 b54:	aa 27       	eor	r26, r26
 b56:	28 30       	cpi	r18, 0x08	; 8
 b58:	51 f1       	breq	.+84     	; 0xbae <__ultoa_invert+0x5c>
 b5a:	20 31       	cpi	r18, 0x10	; 16
 b5c:	81 f1       	breq	.+96     	; 0xbbe <__ultoa_invert+0x6c>
 b5e:	e8 94       	clt
 b60:	6f 93       	push	r22
 b62:	6e 7f       	andi	r22, 0xFE	; 254
 b64:	6e 5f       	subi	r22, 0xFE	; 254
 b66:	7f 4f       	sbci	r23, 0xFF	; 255
 b68:	8f 4f       	sbci	r24, 0xFF	; 255
 b6a:	9f 4f       	sbci	r25, 0xFF	; 255
 b6c:	af 4f       	sbci	r26, 0xFF	; 255
 b6e:	b1 e0       	ldi	r27, 0x01	; 1
 b70:	3e d0       	rcall	.+124    	; 0xbee <__ultoa_invert+0x9c>
 b72:	b4 e0       	ldi	r27, 0x04	; 4
 b74:	3c d0       	rcall	.+120    	; 0xbee <__ultoa_invert+0x9c>
 b76:	67 0f       	add	r22, r23
 b78:	78 1f       	adc	r23, r24
 b7a:	89 1f       	adc	r24, r25
 b7c:	9a 1f       	adc	r25, r26
 b7e:	a1 1d       	adc	r26, r1
 b80:	68 0f       	add	r22, r24
 b82:	79 1f       	adc	r23, r25
 b84:	8a 1f       	adc	r24, r26
 b86:	91 1d       	adc	r25, r1
 b88:	a1 1d       	adc	r26, r1
 b8a:	6a 0f       	add	r22, r26
 b8c:	71 1d       	adc	r23, r1
 b8e:	81 1d       	adc	r24, r1
 b90:	91 1d       	adc	r25, r1
 b92:	a1 1d       	adc	r26, r1
 b94:	20 d0       	rcall	.+64     	; 0xbd6 <__ultoa_invert+0x84>
 b96:	09 f4       	brne	.+2      	; 0xb9a <__ultoa_invert+0x48>
 b98:	68 94       	set
 b9a:	3f 91       	pop	r19
 b9c:	2a e0       	ldi	r18, 0x0A	; 10
 b9e:	26 9f       	mul	r18, r22
 ba0:	11 24       	eor	r1, r1
 ba2:	30 19       	sub	r19, r0
 ba4:	30 5d       	subi	r19, 0xD0	; 208
 ba6:	31 93       	st	Z+, r19
 ba8:	de f6       	brtc	.-74     	; 0xb60 <__ultoa_invert+0xe>
 baa:	cf 01       	movw	r24, r30
 bac:	08 95       	ret
 bae:	46 2f       	mov	r20, r22
 bb0:	47 70       	andi	r20, 0x07	; 7
 bb2:	40 5d       	subi	r20, 0xD0	; 208
 bb4:	41 93       	st	Z+, r20
 bb6:	b3 e0       	ldi	r27, 0x03	; 3
 bb8:	0f d0       	rcall	.+30     	; 0xbd8 <__ultoa_invert+0x86>
 bba:	c9 f7       	brne	.-14     	; 0xbae <__ultoa_invert+0x5c>
 bbc:	f6 cf       	rjmp	.-20     	; 0xbaa <__ultoa_invert+0x58>
 bbe:	46 2f       	mov	r20, r22
 bc0:	4f 70       	andi	r20, 0x0F	; 15
 bc2:	40 5d       	subi	r20, 0xD0	; 208
 bc4:	4a 33       	cpi	r20, 0x3A	; 58
 bc6:	18 f0       	brcs	.+6      	; 0xbce <__ultoa_invert+0x7c>
 bc8:	49 5d       	subi	r20, 0xD9	; 217
 bca:	31 fd       	sbrc	r19, 1
 bcc:	40 52       	subi	r20, 0x20	; 32
 bce:	41 93       	st	Z+, r20
 bd0:	02 d0       	rcall	.+4      	; 0xbd6 <__ultoa_invert+0x84>
 bd2:	a9 f7       	brne	.-22     	; 0xbbe <__ultoa_invert+0x6c>
 bd4:	ea cf       	rjmp	.-44     	; 0xbaa <__ultoa_invert+0x58>
 bd6:	b4 e0       	ldi	r27, 0x04	; 4
 bd8:	a6 95       	lsr	r26
 bda:	97 95       	ror	r25
 bdc:	87 95       	ror	r24
 bde:	77 95       	ror	r23
 be0:	67 95       	ror	r22
 be2:	ba 95       	dec	r27
 be4:	c9 f7       	brne	.-14     	; 0xbd8 <__ultoa_invert+0x86>
 be6:	00 97       	sbiw	r24, 0x00	; 0
 be8:	61 05       	cpc	r22, r1
 bea:	71 05       	cpc	r23, r1
 bec:	08 95       	ret
 bee:	9b 01       	movw	r18, r22
 bf0:	ac 01       	movw	r20, r24
 bf2:	0a 2e       	mov	r0, r26
 bf4:	06 94       	lsr	r0
 bf6:	57 95       	ror	r21
 bf8:	47 95       	ror	r20
 bfa:	37 95       	ror	r19
 bfc:	27 95       	ror	r18
 bfe:	ba 95       	dec	r27
 c00:	c9 f7       	brne	.-14     	; 0xbf4 <__ultoa_invert+0xa2>
 c02:	62 0f       	add	r22, r18
 c04:	73 1f       	adc	r23, r19
 c06:	84 1f       	adc	r24, r20
 c08:	95 1f       	adc	r25, r21
 c0a:	a0 1d       	adc	r26, r0
 c0c:	08 95       	ret

00000c0e <__prologue_saves__>:
 c0e:	2f 92       	push	r2
 c10:	3f 92       	push	r3
 c12:	4f 92       	push	r4
 c14:	5f 92       	push	r5
 c16:	6f 92       	push	r6
 c18:	7f 92       	push	r7
 c1a:	8f 92       	push	r8
 c1c:	9f 92       	push	r9
 c1e:	af 92       	push	r10
 c20:	bf 92       	push	r11
 c22:	cf 92       	push	r12
 c24:	df 92       	push	r13
 c26:	ef 92       	push	r14
 c28:	ff 92       	push	r15
 c2a:	0f 93       	push	r16
 c2c:	1f 93       	push	r17
 c2e:	cf 93       	push	r28
 c30:	df 93       	push	r29
 c32:	cd b7       	in	r28, 0x3d	; 61
 c34:	de b7       	in	r29, 0x3e	; 62
 c36:	ca 1b       	sub	r28, r26
 c38:	db 0b       	sbc	r29, r27
 c3a:	0f b6       	in	r0, 0x3f	; 63
 c3c:	f8 94       	cli
 c3e:	de bf       	out	0x3e, r29	; 62
 c40:	0f be       	out	0x3f, r0	; 63
 c42:	cd bf       	out	0x3d, r28	; 61
 c44:	09 94       	ijmp

00000c46 <__epilogue_restores__>:
 c46:	2a 88       	ldd	r2, Y+18	; 0x12
 c48:	39 88       	ldd	r3, Y+17	; 0x11
 c4a:	48 88       	ldd	r4, Y+16	; 0x10
 c4c:	5f 84       	ldd	r5, Y+15	; 0x0f
 c4e:	6e 84       	ldd	r6, Y+14	; 0x0e
 c50:	7d 84       	ldd	r7, Y+13	; 0x0d
 c52:	8c 84       	ldd	r8, Y+12	; 0x0c
 c54:	9b 84       	ldd	r9, Y+11	; 0x0b
 c56:	aa 84       	ldd	r10, Y+10	; 0x0a
 c58:	b9 84       	ldd	r11, Y+9	; 0x09
 c5a:	c8 84       	ldd	r12, Y+8	; 0x08
 c5c:	df 80       	ldd	r13, Y+7	; 0x07
 c5e:	ee 80       	ldd	r14, Y+6	; 0x06
 c60:	fd 80       	ldd	r15, Y+5	; 0x05
 c62:	0c 81       	ldd	r16, Y+4	; 0x04
 c64:	1b 81       	ldd	r17, Y+3	; 0x03
 c66:	aa 81       	ldd	r26, Y+2	; 0x02
 c68:	b9 81       	ldd	r27, Y+1	; 0x01
 c6a:	ce 0f       	add	r28, r30
 c6c:	d1 1d       	adc	r29, r1
 c6e:	0f b6       	in	r0, 0x3f	; 63
 c70:	f8 94       	cli
 c72:	de bf       	out	0x3e, r29	; 62
 c74:	0f be       	out	0x3f, r0	; 63
 c76:	cd bf       	out	0x3d, r28	; 61
 c78:	ed 01       	movw	r28, r26
 c7a:	08 95       	ret

00000c7c <_exit>:
 c7c:	f8 94       	cli

00000c7e <__stop_program>:
 c7e:	ff cf       	rjmp	.-2      	; 0xc7e <__stop_program>
